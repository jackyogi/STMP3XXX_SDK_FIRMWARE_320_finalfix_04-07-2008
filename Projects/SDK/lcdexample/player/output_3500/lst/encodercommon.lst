TASKING DSP2410 assembler v1.5r1 Build 138 SN 00100122
                                                                                                                                                                                                                                                       Page   1
C:\STMP3XXX_SDK_FIRMWARE_320_finalfix\system\msgmodules\software\encoder\encodercommon.asm
M:ADDR CODE           CYCLES LINE SOURCELINE
                                1 ;;***********************************************************************
                                2 ;SigmaTel, Inc
                                3 ;$Archive:  $
                                4 ;$Revision: 2 $
                                5 ;$Date: 1/24/04 12:14p $
                                6 ;Description:  
                                7 ;Notes: 
                                8 ;***********************************************************************/
                                9     Section     EncoderCommon
                               10 ;************************************************************************
                               11 ;  Include files
                               12 ;************************************************************************
                               13 ; Use relative paths only
                               14     include "sysmacro.asm"
                                1 ;///////////////////////////////////////////////////////////////////////////////
                                2 ;  Copyright(C) SigmaTel, Inc. 2000-2001
                                3 ;
                                4 ;  File        : sysmacro.asm
                                5 ;  Description : Misc System Macros
                                6 ;///////////////////////////////////////////////////////////////////////////////
                                8     define   SysMacro_asm    '1'
                               10     page    255,255,0
                               12 ;///////////////////////////////////////////////////////////////////////////////
                               13 ;   Macros
                               14 ;///////////////////////////////////////////////////////////////////////////////
                               16 ;///////////////////////////////////////////////////////////////////////////////
                               17 ;   Includes
                               18 ;///////////////////////////////////////////////////////////////////////////////
                               20 ;///////////////////////////////////////////////////////////////////////////////
                               21 ;   External Definitions
                               22 ;///////////////////////////////////////////////////////////////////////////////
                               24 ;///////////////////////////////////////////////////////////////////////////////
                               25 ;   External References
                               26 ;///////////////////////////////////////////////////////////////////////////////
                               28 ;///////////////////////////////////////////////////////////////////////////////
                               29 ;   Equates
                               30 ;///////////////////////////////////////////////////////////////////////////////
                               31         
                               32 ;///////////////////////////////////////////////////////////////////////////////
                               33 ;   X Memory
                               34 ;///////////////////////////////////////////////////////////////////////////////
                               35         
                               36 ;///////////////////////////////////////////////////////////////////////////////
                               37 ;   Y Memory
                               38 ;///////////////////////////////////////////////////////////////////////////////
                               39         
                               40 ;///////////////////////////////////////////////////////////////////////////////
                               41 ;   P Memory
                               42 ;///////////////////////////////////////////////////////////////////////////////
                               44 ;///////////////////////////////////////////////////////////////////////////////
                               45 ;
                               46 ;>  Name:           push
                               47 ;
                               48 ;   Type:           Macro
                               49 ;
                               50 ;   Description:    Push a 24-bit value onto the data stack
                               51 ;
                               52 ;   Inputs:         Usage : push reg
                               53 ;                   reg = any core register that is 24-bits or less
                               54 ;
                               55 ;   Outputs:        none
                               56 ;                   
                               57 ;   Notes:          For every push, there must be a corresponding pop to keep
                               58 ;                   data stack balanced.
                               59 ;
                               60 ;   SeeAlso:        pop
                               61 ;<
                               62 ;///////////////////////////////////////////////////////////////////////////////
                               63 push    macro   reg
                               64     move    reg,y:(r7)+
                               65     endm
                               67 ;///////////////////////////////////////////////////////////////////////////////
                               68 ;
                               69 ;>  Name:           pop
                               70 ;
                               71 ;   Type:           Macro
                               72 ;
                               73 ;   Description:    Pop a 24-bit value from the data stack
                               74 ;
                               75 ;   Inputs:         Usage : pop reg
                               76 ;                   reg = any core register that is 24-bits or less
                               77 ;
                               78 ;   Outputs:        none
                               79 ;                   
                               80 ;   Notes:          For every pop, there must be a corresponding push to keep
                               81 ;                   data stack balanced.
                               82 ;
                               83 ;   SeeAlso:        push
                               84 ;<
                               85 ;///////////////////////////////////////////////////////////////////////////////
                               86 pop     macro   reg
                               87     move    y:-(r7),reg
                               88     endm
                               90 ;///////////////////////////////////////////////////////////////////////////////
                               91 ;
                               92 ;>  Name:           CallFunclet
                               93 ;
                               94 ;   Type:           Macro
                               95 ;
                               96 ;   Description:    Loads and Executes the funclet defined by the Resource argument
                               97 ;
                               98 ;   Inputs:         Resource = Resource number for the specific funclet.
                               99 ;
                              100 ;   Outputs:        none
                              101 ;                   
                              102 ;   Notes:          Jumps to SysCallFunclet.   TODO: change to a label instead of hard addresses like $80
                              103 ;<
                              104 ;///////////////////////////////////////////////////////////////////////////////
                              105 ; if ((@DEF('STMP_BUILD_PLAYER'))||(@DEF('PLAYER'))) ; sdk3.110 and before did this. 3.120 add short jump for mtp.
                              107 CallFunclet   macro Resource
                              108     jsr       $80
                              109     DC       Resource  ; 1 word
                              110  endm    
                              111 CallFunclet2   macro Resource
                              112  if ((@DEF('STMP_BUILD_PLAYER'))||(@DEF('PLAYER')))
                              113     jsr       $82
                              114     DC       Resource  ; 1 word
                              115  else ;;; MTP
                              116     jsr       $80
                              117     DC       Resource  ; 1 word
                              118  endif
                              119     endm    
                              130 ;///////////////////////////////////////////////////////////////////////////////
                              131 ;
                              132 ;>  Name:           error
                              133 ;
                              134 ;   Type:           Macro
                              135 ;
                              136 ;   Description:    Fatal system error macro.  This macro works in conjunction
                              137 ;                   with contents of syserror.asm.  Depending upon the build
                              138 ;                   arguments DEBUG, BETA, or RETAIL, this will either produce
                              139 ;                   a "debug" statement or a JMP to an error handling reset routine.
                              140 ;
                              141 ;   Inputs:         none 
                              142 ;   Outputs:        none                   
                              143 ;   Notes:          Can use debugOrContinue or ccerror for conditional halts. 
                              144 ;                   SystemHalt() C macro uses this asm macro.
                              145 ;<
                              146 ;///////////////////////////////////////////////////////////////////////////////
                              147 error   macro
                              148   if (@DEF('BETA')||@DEF('RETAIL')||@DEF('TRACEBUFFER'))
                              149     jmp $000C ;Use vector at P:000C to shutdown & restart the STMP device. 
                              150               ; Jmp to addr in low 12 bits is 1 word smaller than jsr. (changed apr 6 '05)
                              151   else
                              152     debug
                              153   endif ; if ( @DEF('BETA')||@DEF('RETAIL') 
                              154     endm
                              156 ;///////////////////////////////////////////////////////////////////////////////
                              157 ;
                              158 ;   Name:           debugOrContinue
                              159 ;   Type:           Macro
                              160 ;   Description:    System error macro. Depending upon the build
                              161 ;                   arguments DEBUG, BETA, or RETAIL, this will either produce
                              162 ;                   a "debug" statement or nothing to allow continued execution.
                              163 ;   Inputs:         none 
                              164 ;   Outputs:        none
                              165 ;   Notes:          none
                              166 ;
                              167 ;///////////////////////////////////////////////////////////////////////////////
                              168 debugOrContinue   macro
                              169   if (@DEF('DEBUG'))
                              170     debug
                              171     nop
                              172   endif 
                              173     endm
                              175 ;///////////////////////////////////////////////////////////////////////////////
                              176 ;
                              177 ;   Name:           debugOrShutdown
                              178 ;   Type:           Macro
                              179 ;   Description:    System error macro. Depending upon the build
                              180 ;                   arguments DEBUG, BETA, or RETAIL, this will either produce
                              181 ;                   a "debug" statement or Prevent RETAIL build from hanging on 
                              182 ;                   debug line by attempting graceful shutdown.
                              183 ;   Inputs:         none 
                              184 ;   Outputs:        none
                              185 ;   Notes:          See SystemShutdownFinal in SystemAPI.asm
                              186 ;
                              187 ;///////////////////////////////////////////////////////////////////////////////
                              188 ;debugOrShutdown   macro
                              189 ;  if (@DEF('DEBUG'))
                              190 ;    debug
                              191 ;    nop
                              192 ;  else  ; ( @DEF('BETA')||@DEF('RETAIL')
                              193 ;    jmp SystemShutdownFinal                ; reference not resolved
                              194 ;  endif 
                              195 ;    endm
                              198 ;///////////////////////////////////////////////////////////////////////////////
                              199 ;> Name:            ccerror
                              200 ;
                              201 ;  Type:            Macro
                              202 ;  Description:     Conditional fatal system error macro.  If the indicated
                              203 ;                   condition code ("CC") is met, signal the error.  (See "error",
                              204 ;                   above for more info on error hanlding.)
                              205 ;                   The allowed condition condition codes are
                              206 ;
                              207 ;                       cc, cs, ec, eq, es, ge, gt, lc, le, ls, lt, 
                              208 ;                       mi, ne, nr, pl, nn 
                              209 ;
                              210 ;  Inputs:          condition
                              211 ;
                              212 ;  Outputs:         none
                              213 ;
                              214 ;  Notes:           The normal way of using these macros is shown below:
                              215 ;
                              216 ;                       <some operation which sets/clears a condition code>
                              217 ;                       ccerror cs             ; Error if carry is set
                              218 ;                       <normal continuation>
                              219 ;
                              220 ;                   This can replace old code of the form:
                              221 ;
                              222 ;                       <some operation which sets/clears a condition code>
                              223 ;                       jcc     _OK
                              224 ;                       error
                              225 ;                   _OK
                              226 ;                       <normal continuation>
                              227 ;
                              228 ;                   Depending on the BETA/RETAIL flags, the first operation can
                              229 ;                   save one or two words of program memory over the second method.
                              230 ;<
                              231 ;///////////////////////////////////////////////////////////////////////////////
                              232 ccerror macro   condition
                              233   if (@DEF('BETA')||@DEF('RETAIL'))
                              234     js\condition $000C
                              235   else
                              236     debug\condition
                              237   endif ; if ( @DEF('BETA')||@DEF('RETAIL') 
                              238     endm
                              240 ;///////////////////////////////////////////////////////////////////////////////
                              241 ;> Name: GetLogicalDriveNumForResourceBin
                              242 ;
                              243 ; Description: Used for our RestoreDriveFromBackup routine.
                              244 ; INPUT: 1 for primary resource.bin
                              245 ;        2 for secondary resource.bin
                              246 ;        3 for master redundant resource.bin that is used to restore 1 and 2 at power up if needed.
                              247 ;
                              248 ; NOTE: If the drive arrays is modified in ddiproject.c then the values below will
                              249 ;       have to change. Inspect that file to verify these values are correct.
                              250 ;
                              251 ;<
                              252 ;///////////////////////////////////////////////////////////////////////////////
                              253 GetLogicalDriveNumForResourceBin macro drive
                              254     if (drive==0)
                              255     fail    "drive=0 invalid value used in GetLogicalDriveNumForresourceBin macro"
                              256     endif
                              258     if (drive>3)
                              259     fail    "drive>3 invalid value used in GetLogicalDriveNumForresourceBin macro"
                              260     endif
                              262     if (@DEF('MMC'))
                              264         if drive==1
                              265              move   #>6,a
                              266         endif
TASKING DSP2410 assembler v1.5r1 Build 138 SN 00100122
                                                                                                                                                                                                                                                       Page   2

M:ADDR CODE           CYCLES LINE SOURCELINE
                              267     
                              268         if drive==2
                              269              move   #>7,a
                              270         endif
                              272         if drive==3
                              273              move   #>8,a
                              274         endif
                              275     else
                              277         if drive==1
                              278              move   #>5,a
                              279         endif
                              280     
                              281         if drive==2
                              282              move   #>6,a
                              283         endif
                              285         if drive==3
                              286              move   #>7,a
                              287         endif
                              288     endif
                              289  endm
                              291 ;///////////////////////////////////////////////////////////////////////////////
                              292 ;
                              293 ;>  Name:           SaveRange
                              294 ;
                              295 ;   Type:           Macro
                              296 ;
                              297 ;   Description:    This is a supporting macro for saving memory locations to
                              298 ;                   the settings.dat file at shutdown, for later restoration
                              299 ;                   at system startup.
                              300 ;
                              301 ;   Inputs:         Usage : SaveRange Label,Length
                              302 ;                        
                              303 ;   Outputs:        
                              304 ;                   
                              305 ;   Notes:          This macro automatically determines the memory space of the
                              306 ;                   label specified.  It then constructs a command that is 
                              307 ;                   written to settings.dat by SysSaveSettings, and is
                              308 ;                   understood by the SysLoadSettings function to restore the
                              309 ;                   memory locations.  For the SaveRange macro to be recognized 
                              310 ;                   by the SysSaveSettings function.  The section name where the
                              311 ;                   SaveRange command is used, must be included in the 
                              312 ;                   Settings_Y cluster in the stmp3400.dsc file.  The makefile
                              313 ;                   will then extract these commands as a resource to be used
                              314 ;                   by SysSaveSettings and SysLoadSettings.
                              315 ;
                              316 ;   SeeAlso:        SysLoadSettings, SysSaveSettings, SaveRangeX, 
                              317 ;                   SaveRangeY, SaveRangeP, SaveRangeL
                              318 ;
                              319 ;<
                              320 ;///////////////////////////////////////////////////////////////////////////////
                              321 SaveRange macro Label,Length
                              322     if @MSP(Label)==0  ;None
                              323     fail    "Invalid label used in SaveRange macro"
                              324     dc      Label
                              325     endif ; if @MSP(Label)==0
                              327     if @MSP(Label)==1  ;X
                              328     dc      $800000|Label
                              329     endif ; if @MSP(Label)==1
                              331     if @MSP(Label)==2  ;Y
                              332     dc      $400000|Label
                              333     endif ; if @MSP(Label)==2
                              335     if @MSP(Label)==3  ;L
                              336     dc      $200000|Label
                              337     endif ; if @MSP(Label)==3
                              339     if @MSP(Label)==4  ;P
                              340     dc      $100000|Label
                              341     endif ; if @MSP(Label)==4
                              343     if @MSP(Label)==5  ;E
                              344     fail    "Invalid label used in SaveRange macro"
                              345     dc      Label
                              346     endif ; if @MSP(Label)==5
                              348     dc      Length*3
                              349     endm
                              351 ;///////////////////////////////////////////////////////////////////////////////
                              352 ;
                              353 ;>  Name:           SaveRangeY
                              354 ;
                              355 ;   Type:           Macro
                              356 ;
                              357 ;   Description:    This is a supporting macro for saving memory locations to
                              358 ;                   the settings.dat file at shutdown, for later restoration
                              359 ;                   at system startup.
                              360 ;
                              361 ;   Inputs:         Usage : SaveRangeY Label,Length
                              362 ;                        
                              363 ;   Outputs:        
                              364 ;                   
                              365 ;   Notes:          Refer to the SaveRange macro for more details.  This macro
                              366 ;                   can take a numeric address, or a label, but will only
                              367 ;                   create a save memory command that indicates Y memory
                              368 ;                   to be saved.
                              369 ;
                              370 ;   SeeAlso:        SysLoadSettings, SysSaveSettings, SaveRange, 
                              371 ;                   SaveRangeX, SaveRangeP, SaveRangeL
                              372 ;
                              373 ;<
                              374 ;///////////////////////////////////////////////////////////////////////////////
                              375 SaveRangeY macro Address,Length
                              376     dc      $400000|Address
                              377     dc      Length*3
                              378     endm
                              380 ;///////////////////////////////////////////////////////////////////////////////
                              381 ;
                              382 ;>  Name:           SaveRangeX
                              383 ;
                              384 ;   Type:           Macro
                              385 ;
                              386 ;   Description:    This is a supporting macro for saving memory locations to
                              387 ;                   the settings.dat file at shutdown, for later restoration
                              388 ;                   at system startup.
                              389 ;
                              390 ;   Inputs:         Usage : SaveRangeX Label,Length
                              391 ;                        
                              392 ;   Outputs:        
                              393 ;                   
                              394 ;   Notes:          Refer to the SaveRange macro for more details.  This macro
                              395 ;                   can take a numeric address, or a label, but will only
                              396 ;                   create a save memory command that indicates X memory
                              397 ;                   to be saved.
                              398 ;
                              399 ;   See Also:       SysLoadSettings, SysSaveSettings, SaveRange, 
                              400 ;                   SaveRangeY, SaveRangeP, SaveRangeL
                              401 ;
                              402 ;<
                              403 ;///////////////////////////////////////////////////////////////////////////////
                              404 SaveRangeX macro Address,Length
                              405     dc      $800000|Address
                              406     dc      Length*3
                              407     endm
                              409 ;///////////////////////////////////////////////////////////////////////////////
                              410 ;
                              411 ;>  Name:           SaveRangeL
                              412 ;
                              413 ;   Type:           Macro
                              414 ;
                              415 ;   Description:    This is a supporting macro for saving memory locations to
                              416 ;                   the settings.dat file at shutdown, for later restoration
                              417 ;                   at system startup.
                              418 ;
                              419 ;   Inputs:         Usage : SaveRangeL Label,Length
                              420 ;                        
                              421 ;   Outputs:        
                              422 ;                   
                              423 ;   Notes:          Refer to the SaveRange macro for more details.  This macro
                              424 ;                   can take a numeric address, or a label, but will only
                              425 ;                   create a save memory command that indicates L memory
                              426 ;                   to be saved.
                              427 ;
                              428 ;   SeeAlso:        SysLoadSettings, SysSaveSettings, SaveRange, 
                              429 ;                   SaveRangeX, SaveRangeY, SaveRangeP
                              430 ;
                              431 ;<
                              432 ;///////////////////////////////////////////////////////////////////////////////
                              433 SaveRangeL macro Address,Length
                              434     dc      $200000|Address
                              435     dc      Length*3
                              436     endm
                              438 ;///////////////////////////////////////////////////////////////////////////////
                              439 ;
                              440 ;>  Name:           SaveRangeP
                              441 ;
                              442 ;   Type:           Macro
                              443 ;
                              444 ;   Description:    This is a supporting macro for saving memory locations to
                              445 ;                   the settings.dat file at shutdown, for later restoration
                              446 ;                   at system startup.
                              447 ;
                              448 ;   Inputs:         Usage : SaveRangeP Label,Length
                              449 ;                        
                              450 ;   Outputs:        
                              451 ;                   
                              452 ;   Notes:          Refer to the SaveRange macro for more details.  This macro
                              453 ;                   can take a numeric address, or a label, but will only
                              454 ;                   create a save memory command that indicates P memory
                              455 ;                   to be saved.
                              456 ;
                              457 ;   SeeAlso:        SysLoadSettings, SysSaveSettings, SaveRange, 
                              458 ;                   SaveRangeX, SaveRangeY, SaveRangeL
                              459 ;
                              460 ;<
                              461 ;///////////////////////////////////////////////////////////////////////////////
                              462 SaveRangeP macro Address,Length
                              463     dc      $100000|Address
                              464     dc      Length*3
                              465     endm
                              468 ;///////////////////////////////////////////////////////////////////////////////
                              469 ;       BUTTON MACROS
                              470 ;///////////////////////////////////////////////////////////////////////////////
                              472 ;///////////////////////////////////////////////////////////////////////////////
                              473 ;
                              474 ;>  Name:           DEFINE_ROW
                              475 ;
                              476 ;   Type:           Macro
                              477 ;
                              478 ;   Description:    This is a supporting macro for defining the GPIO setup for 
                              479 ;                   the scan matrix.
                              480 ;
                              481 ;   Inputs:         Usage : DEFINE_ROW RowNumber,WhichGPIORegister,WhichBit
                              482 ;                        
                              483 ;   Outputs:        Sets up equates required for data structures in button.asm
                              484 ;                   
                              485 ;   Notes:          Must be used in conjuction with DEFINE_COLUMN, DEFINE_SCAN_BUTTON_EVENT,
                              486 ;                   DEFINE_NON_SCAN_BUTTON,DEFINE_NON_SCAN_BUTTON_EVENT, and DEFINE_MAPPED_EVENT to
                              487 ;                   completely define the players button scan matrix, non scan buttons, and
                              488 ;                   how these buttons map to events as recieved by the menus.  There must be one of these
                              489 ;                   macro definitions for each row in the scan matrix.
                              490 ;
                              491 ;   SeeAlso:        DEFINE_COLUMN, DEFINE_SCAN_BUTTON_EVENT,DEFINE_NON_SCAN_BUTTON,
                              492 ;                   DEFINE_NON_SCAN_BUTTON_EVENT, and DEFINE_MAPPED_EVENT
                              493 ;
                              494 ;<
                              495 ;///////////////////////////////////////////////////////////////////////////////
                              497 DEFINE_ROW macro RowNumber,WhichGPIO,WhichBit
                              498     BUTTON_GPIO_ENABLE_ROW_\RowNumber:  equ HW_\WhichGPIO\ENR
                              499     BUTTON_GPIO_SENSE_ROW_\RowNumber:   equ HW_\WhichGPIO\DIR
                              500     BUTTON_BITPOS_ROW_\RowNumber:       equ 1<<\WhichBit
                              501     endm
                              503 ;///////////////////////////////////////////////////////////////////////////////
                              504 ;
                              505 ;>  Name:           DEFINE_COLUMN
                              506 ;
                              507 ;   Type:           Macro
                              508 ;
                              509 ;   Description:    This is a supporting macro for defining the GPIO setup for 
                              510 ;                   the scan matrix.
                              511 ;
                              512 ;   Inputs:         Usage : DEFINE_COLUMN ColumnNumber,WhichGPIORegister,WhichBit
                              513 ;                        
                              514 ;   Outputs:        Sets up equates required for data structures in button.asm
                              515 ;                   
                              516 ;   Notes:          Must be used in conjuction with DEFINE_COLUMN, DEFINE_SCAN_BUTTON_EVENT,
                              517 ;                   DEFINE_NON_SCAN_BUTTON,DEFINE_NON_SCAN_BUTTON_EVENT, and DEFINE_MAPPED_EVENT to
                              518 ;                   completely define the players button scan matrix, non scan buttons, and
                              519 ;                   how these buttons map to events as recieved by the menus.  There must be one
                              520 ;                   of these macro definitions for each column in the scan matrix.
                              521 ;
                              522 ;   SeeAlso:        DEFINE_COLUMN, DEFINE_SCAN_BUTTON_EVENT,DEFINE_NON_SCAN_BUTTON,
                              523 ;                   DEFINE_NON_SCAN_BUTTON_EVENT, and DEFINE_MAPPED_EVENT
                              524 ;
                              525 ;<
                              526 ;///////////////////////////////////////////////////////////////////////////////
                              527 DEFINE_COLUMN macro ColumnNumber,WhichGPIO,WhichBit
                              528     BUTTON_GPIO_ENABLE_COLUMN_\ColumnNumber:        equ HW_\WhichGPIO\ENR
                              529     BUTTON_GPIO_DATA_OUT_COLUMN_\ColumnNumber:      equ HW_\WhichGPIO\DOR
                              530     BUTTON_GPIO_OUTPUT_ENABLE_COLUMN_\ColumnNumber: equ HW_\WhichGPIO\DOER
                              531     BUTTON_BITPOS_COLUMN_\ColumnNumber:             equ 1<<\WhichBit
                              532     endm
                              534 ;///////////////////////////////////////////////////////////////////////////////
                              535 ;
                              536 ;>  Name:           DEFINE_SCAN_BUTTON_EVENT
                              537 ;
TASKING DSP2410 assembler v1.5r1 Build 138 SN 00100122
                                                                                                                                                                                                                                                       Page   3

M:ADDR CODE           CYCLES LINE SOURCELINE
                              538 ;   Type:           Macro
                              539 ;
                              540 ;   Description:    This is a supporting macro for defining the mapping between a scan
                              541 ;                   matrix location and a button event.
                              542 ;
                              543 ;   Inputs:         Usage : DEFINE_SCAN_BUTTON_EVENT Column,Row,EventNumber,ButtonName.  
                              544 ;                       Column is in the format COL0,COL1,COL2, etc.  
                              545 ;                       Row is in the format ROW0,ROW1,etc. 
                              546 ;                       The EventNumber is an integer with a single bit set that is unique to all button events
                              547 ;                       ButtonName is a label by which this button event can be referenced in the event mapping.
                              548 ;                        
                              549 ;   Outputs:        Sets up equates required for data structures in button.asm
                              550 ;                   
                              551 ;   Notes:          Must be used in conjuction with DEFINE_COLUMN, DEFINE_SCAN_BUTTON_EVENT,
                              552 ;                   DEFINE_NON_SCAN_BUTTON,DEFINE_NON_SCAN_BUTTON_EVENT, and DEFINE_MAPPED_EVENT to
                              553 ;                   completely define the players button scan matrix, non scan buttons, and
                              554 ;                   how these buttons map to events as recieved by the menus. This macro sets up buttons for each
                              555 ;                   spot in the button scan matrix.  Each place in the matrix must be defined, even if no
                              556 ;                   physical button exists in it.  Use $000000 for placeholders.
                              557 ;
                              558 ;   SeeAlso:        DEFINE_COLUMN, DEFINE_SCAN_BUTTON_EVENT,DEFINE_NON_SCAN_BUTTON,
                              559 ;                   DEFINE_NON_SCAN_BUTTON_EVENT, and DEFINE_MAPPED_EVENT
                              560 ;
                              561 ;<
                              562 ;///////////////////////////////////////////////////////////////////////////////
                              563 DEFINE_SCAN_BUTTON_EVENT macro Column,Row,EventNumber,ButtonName
                              564     BUTTON_EVENT_\Column\Row:  equ \EventNumber
                              565     ButtonName: equ \EventNumber
                              566     endm 
                              568 ;///////////////////////////////////////////////////////////////////////////////
                              569 ;
                              570 ;>  Name:           DEFINE_NON_SCAN_BUTTON
                              571 ;
                              572 ;   Type:           Macro
                              573 ;
                              574 ;   Description:    This is a supporting macro for defining a non scan button.
                              575 ;
                              576 ;   Inputs:         Usage : DEFINE_NON_SCAN_BUTTON NSNumber,WhichGPIO,WhichBit.  
                              577 ;                       NSNumber is a unique number (starting at 0) and counting up to BUTTON_NON_SCAN_BUTTONS-1
                              578 ;                       WhichGPIO is the GPIO register used
                              579 ;                       WhichBit is the bit in this register.
                              580 ;                        
                              581 ;   Outputs:        Sets up equates required for data structures in button.asm
                              582 ;                   
                              583 ;   Notes:          Must be used in conjuction with DEFINE_COLUMN, DEFINE_SCAN_BUTTON_EVENT,
                              584 ;                   DEFINE_NON_SCAN_BUTTON,DEFINE_NON_SCAN_BUTTON_EVENT, and DEFINE_MAPPED_EVENT to
                              585 ;                   completely define the players button scan matrix, non scan buttons, and
                              586 ;                   how these buttons map to events as recieved by the menus. This macro sets up non scan
                              587 ;                   buttons.  Use DEFINE_NON_SCAN_BUTTON_EVENT to define the event generated by this non scan
                              588 ;                   button.
                              589 ;
                              590 ;   SeeAlso:        DEFINE_COLUMN, DEFINE_SCAN_BUTTON_EVENT,DEFINE_NON_SCAN_BUTTON,
                              591 ;                   DEFINE_NON_SCAN_BUTTON_EVENT, and DEFINE_MAPPED_EVENT
                              592 ;
                              593 ;<
                              594 ;///////////////////////////////////////////////////////////////////////////////
                              595 DEFINE_NON_SCAN_BUTTON macro NSNumber,WhichGPIO,WhichBit
                              596     BUTTON_GPIO_ENABLE_NON_SCAN_\NSNumber:  equ HW_\WhichGPIO\ENR
                              597     BUTTON_GPIO_SENSE_NON_SCAN_\NSNumber:   equ HW_\WhichGPIO\DIR
                              598     BUTTON_BITPOS_NON_SCAN_\NSNumber:       equ 1<<\WhichBit
                              599     BUTTON_REAL_BITPOS_NON_SCAN_\NSNumber:  equ \WhichBit
                              600     endm
                              602 ;///////////////////////////////////////////////////////////////////////////////
                              603 ;
                              604 ;>  Name:           DEFINE_NON_SCAN_BUTTON_EVENT
                              605 ;
                              606 ;   Type:           Macro
                              607 ;
                              608 ;   Description:    This is a supporting macro for defining a non scan button.
                              609 ;
                              610 ;   Inputs:         Usage : DEFINE_NON_SCAN_BUTTON_EVENT Number,EventNumber,ButtonName  
                              611 ;                       Number is a unique number (starting at 0) and counting up to BUTTON_NON_SCAN_BUTTONS-1
                              612 ;                       EventNumber is an integer with 1 bit set that is unique to all other buttons
                              613 ;                       ButtonName is a label later referenced in the event mapping
                              614 ;                        
                              615 ;   Outputs:        Sets up equates required for data structures in button.asm
                              616 ;                   
                              617 ;   Notes:          Must be used in conjuction with DEFINE_COLUMN, DEFINE_SCAN_BUTTON_EVENT,
                              618 ;                   DEFINE_NON_SCAN_BUTTON,DEFINE_NON_SCAN_BUTTON_EVENT, and DEFINE_MAPPED_EVENT to
                              619 ;                   completely define the players button scan matrix, non scan buttons, and
                              620 ;                   how these buttons map to events as recieved by the menus. This macro sets up non scan
                              621 ;                   buttons.  
                              622 ;
                              623 ;   SeeAlso:        DEFINE_COLUMN, DEFINE_SCAN_BUTTON_EVENT,DEFINE_NON_SCAN_BUTTON,
                              624 ;                   DEFINE_NON_SCAN_BUTTON_EVENT, and DEFINE_MAPPED_EVENT
                              625 ;
                              626 ;<
                              627 ;///////////////////////////////////////////////////////////////////////////////
                              628 DEFINE_NON_SCAN_BUTTON_EVENT macro Number,EventNumber,ButtonName
                              629     BUTTON_EVENT_NONSCAN\Number:  equ \EventNumber
                              630     ButtonName: equ \EventNumber
                              631     endm 
                              635 ;///////////////////////////////////////////////////////////////////////////////
                              636 ;> Name: DEFINE_LRADC_BUTTON
                              637 ;
                              638 ;  Type: Macro
                              639 ;
                              640 ;  Description: This is a supporting macro for defining an Low Resolution ADC (LRADC)-based button
                              641 ;
                              642 ;  Inputs:      Usage : DEFINE_LRADC_BUTTON LBNumber,UpperLimitVoltage
                              643 ;
                              644 ;  Outputs:     Sets up equates required for data structures in button.asm
                              645 ;
                              646 ;  Notes:       Must be used in conjuction with DEFINE_LRADC_BUTTON_EVENT, and DEFINE_MAPPED_EVENT to
                              647 ;                   completely define the player's LRADC buttons and how these buttons map to 
                              648 ;                   events as recieved by the menus. This macro sets up LRADC buttons.  Use 
                              649 ;                   DEFINE_LRADC_BUTTON_EVENT to define the event generated by this LRADC button.
                              650 ;
                              651 ;   SeeAlso:        DEFINE_LRADC_BUTTON_EVENT, DEFINE_COLUMN, DEFINE_SCAN_BUTTON_EVENT,
                              652 ;                   DEFINE_NON_SCAN_BUTTON, DEFINE_NON_SCAN_BUTTON_EVENT, and DEFINE_MAPPED_EVENT
                              653 ;<
                              654 ;///////////////////////////////////////////////////////////////////////////////
                              655 DEFINE_LRADC_BUTTON     macro   num,level
                              656     BUTTON_LRADC_LEVEL_\num:    equ level
                              657     endm
                              661 ;///////////////////////////////////////////////////////////////////////////////
                              662 ;> Name: DEFINE_LRADC_BUTTON_EVENT
                              663 ;
                              664 ;  Type: Macro
                              665 ;
                              666 ;  Description:     This is a supporting macro for defining a Low Resolution ADC (LRADC)-based button.
                              667 ;
                              668 ;  Inputs:          Usage : DEFINE_LRADC_BUTTON_EVENT Number,EventNumber,ButtonName  
                              669 ;                       Number is a unique number (starting at 0) and counting up to BUTTON_LRADC_BUTTONS-1
                              670 ;                       EventNumber is an integer with 1 bit set that is unique to all other buttons
                              671 ;                       ButtonName is a label later referenced in the event mapping
                              672  
                              673 ;
                              674 ;  Outputs:         Sets up equates required for data structures in button.asm
                              675 ;
                              676 ;  Notes:           Must be used in conjuction with DEFINE_LRADC_BUTTON, and DEFINE_MAPPED_EVENT to
                              677 ;                   completely define the player's LRADC buttons and how these buttons map to events 
                              678 ;                   as recieved by the menus. This macro sets up LRADC buttons.
                              679 ;
                              680 ;
                              681 ;   SeeAlso:        DEFINE_LRADC_BUTTON, DEFINE_COLUMN, DEFINE_SCAN_BUTTON_EVENT,DEFINE_NON_SCAN_BUTTON,
                              682 ;                   DEFINE_NON_SCAN_BUTTON_EVENT, and DEFINE_MAPPED_EVENT
                              683 ;<
                              684 ;///////////////////////////////////////////////////////////////////////////////
                              685 DEFINE_LRADC_BUTTON_EVENT      macro   num,EventNumber,ButtonName
                              686     BUTTON_EVENT_LRADC_BUTTON\num: equ \EventNumber
                              687     ButtonName:     equ     \EventNumber   
                              688     endm
                              689   
                              692 ;///////////////////////////////////////////////////////////////////////////////
                              693 ;
                              694 ;>  Name:           DEFINE_MAPPED_EVENT
                              695 ;
                              696 ;   Type:           Macro
                              697 ;
                              698 ;   Description:    This is a supporting macro for defining button events.
                              699 ;
                              700 ;   Inputs:         Usage : DEFINE_MAPPED_EVENT Number,Action,ButtonNames 
                              701 ;                       Number is a unique number (starting at 0) and counting up to BUTTON_MAPPED_EVENTS-1
                              702 ;                       Action is either PRESS_RELEASE or PRESS_HOLD
                              703 ;                       ButtonNames is a collection of labels defined for scan or non scan buttons that relate
                              704 ;                           to this button event.
                              705 ;                        
                              706 ;   Outputs:        Sets up equates required for data structures in button.asm
                              707 ;                   
                              708 ;   Notes:          Must be used in conjuction with DEFINE_COLUMN, DEFINE_SCAN_BUTTON_EVENT,
                              709 ;                   DEFINE_NON_SCAN_BUTTON,DEFINE_NON_SCAN_BUTTON_EVENT, and DEFINE_MAPPED_EVENT to
                              710 ;                   completely define the players button scan matrix, non scan buttons, and
                              711 ;                   how these buttons map to events as recieved by the menus. This macro sets up the mapping
                              712 ;                   between scan and non scan buttons, and the eventual event number that is sent to the menus.
                              713 ;
                              714 ;   SeeAlso:        DEFINE_COLUMN, DEFINE_SCAN_BUTTON_EVENT,DEFINE_NON_SCAN_BUTTON,
                              715 ;                   DEFINE_NON_SCAN_BUTTON_EVENT, and DEFINE_MAPPED_EVENT
                              716 ;
                              717 ;<
                              718 ;///////////////////////////////////////////////////////////////////////////////
                              719 DEFINE_MAPPED_EVENT macro Number,Action,ButtonNames
                              720     
                              721   IF (@SCP("Action","PRESS_RELEASE"))
                              722     BUTTON_EVENT_\Number:  equ ButtonNames
                              723   else 
                              724     if (@SCP("Action","PRESS_HOLD"))
                              725         BUTTON_EVENT_\Number:  equ $800000|ButtonNames
                              726     else
                              727         ERROR "Unknown Action for DEFINE_MAPPED_EVENT" 
                              728     endif
                              729   endif 
                              730     endm
                              733 ;///////////////////////////////////////////////////////////////////////////////
                              734 ;
                              735 ;>  Name:           DEFINE_2BUTTON_MAPPED_EVENT
                              736 ;
                              737 ;   Type:           Macro
                              738 ;
                              739 ;   Description:    This is a supporting macro for defining button events.
                              740 ;
                              741 ;   Inputs:         Usage : DEFINE_2BUTTON_MAPPED_EVENT Number,Action,Event1,Event2 
                              742 ;                       Number is a unique number (starting at 0) and counting up to BUTTON_MAPPED_EVENTS-1
                              743 ;                       Action is either PRESS_RELEASE or PRESS_HOLD
                              744 ;                       Event1 is 1 of 2 previously defined button events
                              745 ;                       Event2 is 2 of 2 previously defined button events
                              746 ;                        
                              747 ;   Outputs:        Sets up equates required for data structures in button.asm
                              748 ;                   
                              749 ;   Notes:          Must be used in conjuction with DEFINE_COLUMN, DEFINE_SCAN_BUTTON_EVENT,
                              750 ;                   DEFINE_NON_SCAN_BUTTON,DEFINE_NON_SCAN_BUTTON_EVENT, and DEFINE_MAPPED_EVENT to
                              751 ;                   completely define the players button scan matrix, non scan buttons, and
                              752 ;                   how these buttons map to events as recieved by the menus. This macro sets up the mapping
                              753 ;                   between scan and non scan buttons, and the eventual event number that is sent to the menus.
                              754 ;
                              755 ;   SeeAlso:        DEFINE_COLUMN, DEFINE_SCAN_BUTTON_EVENT,DEFINE_NON_SCAN_BUTTON,
                              756 ;                   DEFINE_NON_SCAN_BUTTON_EVENT, and DEFINE_MAPPED_EVENT
                              757 ;
                              758 ;<
                              759 ;///////////////////////////////////////////////////////////////////////////////
                              760 DEFINE_2BUTTON_MAPPED_EVENT macro Number,Action,Event1,Event2
                              761     
                              762   IF (@SCP("Action","PRESS_RELEASE"))
                              763     BUTTON_EVENT_\Number:  equ BUTTON_EVENT_\Event1|BUTTON_EVENT_\Event2
                              764   else 
                              765     if (@SCP("Action","PRESS_HOLD"))
                              766         BUTTON_EVENT_\Number:  equ BUTTON_EVENT_\Event1|BUTTON_EVENT_\Event2|$800000
                              767     else
                              768         ERROR "Unknown Action for DEFINE_MAPPED_EVENT" 
                              769     endif
                              770   endif 
                              771   endm
                              773 ;///////////////////////////////////////////////////////////////////////////////
                              774 ;
                              775 ;>  Name:           StackCheckIn
                              776 ;
                              777 ;   Type:           Macro
                              778 ;
                              779 ;   Description:    Records the current stack pointer on the stack
                              780 ;
                              781 ;   Inputs:         none
                              782 ;                        
                              783 ;   Outputs:        places the current PC and the current software stack pointer on the stack
                              784 ;   
                              785 ;   Notes:          This does not modify any registers (except r7)                
                              786 ;
                              787 ;   SeeAlso:        FStackCheckIn
                              788 ;
                              789 ;<
                              790 ;///////////////////////////////////////////////////////////////////////////////
                              791 StackCheckIn macro
                              792   if (@DEF('DEBUG'))
                              793     extern FStackCheckIn
                              794     jsr FStackCheckIn
                              795   endif
                              796   endm
                              798 ;///////////////////////////////////////////////////////////////////////////////
                              799 ;
                              800 ;>  Name:           StackCheckOut
                              801 ;
                              802 ;   Type:           Macro
TASKING DSP2410 assembler v1.5r1 Build 138 SN 00100122
                                                                                                                                                                                                                                                       Page   4

M:ADDR CODE           CYCLES LINE SOURCELINE
                              803 ;
                              804 ;   Description:    Verifies that the stack is still balanced
                              805 ;
                              806 ;   Inputs:         none
                              807 ;                        
                              808 ;   Outputs:        none (though hits a debug if the stack is unbalanced)
                              809 ;   
                              810 ;   Notes:          This does not modify any registers (except r7) 
                              811 ;
                              812 ;   SeeAlso:        FStackCheckOut
                              813 ;
                              814 ;<
                              815 ;///////////////////////////////////////////////////////////////////////////////
                              816 StackCheckOut macro
                              817   if (@DEF('DEBUG'))
                              818     extern FStackCheckOut
                              819     jsr FStackCheckOut
                              820   endif 
                              821   endm
                              824 ;///////////////////////////////////////////////////////////////////////////////
                              825 ;
                              826 ;>  Name:           InstrumentPushContext 
                              827 ;
                              828 ;   Type:           Macro
                              829 ;
                              830 ;   Description:    calls the instrument functions specified.
                              831 ;
                              832 ;   Inputs:         new context
                              833 ;                   new value
                              834 ;                        
                              835 ;   Outputs:        
                              836 ;   
                              837 ;   Notes:          This does not modify any registers  
                              838 ;
                              839 ;   SeeAlso:        
                              840 ;
                              841 ;<
                              842 ;///////////////////////////////////////////////////////////////////////////////
                              843 InstrumentPushContext macro context,value
                              844   if (@DEF('USE_INSTRUMENTATION'))
                              845     extern FInstrumentPushContext
                              846     extern PushAandB
                              847     extern PopAandB
                              848     jsr PushAandB
                              849     move    #>context,a
                              850     move    #>value,b
                              851     jsr FInstrumentPushContext
                              852     jsr PopAandB
                              853   endif 
                              854   endm
                              856 ;///////////////////////////////////////////////////////////////////////////////
                              857 ;
                              858 ;>  Name:           InstrumentPopContext 
                              859 ;
                              860 ;   Type:           Macro
                              861 ;
                              862 ;   Description:    calls the instrument functions specified.
                              863 ;
                              864 ;   Inputs:         none
                              865 ;                        
                              866 ;   Outputs:        none
                              867 ;   
                              868 ;   Notes:          This does not modify any registers  
                              869 ;
                              870 ;   SeeAlso:        
                              871 ;
                              872 ;<
                              873 ;///////////////////////////////////////////////////////////////////////////////
                              874 InstrumentPopContext macro 
                              875   if (@DEF('USE_INSTRUMENTATION'))
                              876     extern FInstrumentPopContext
                              877     jsr FInstrumentPopContext
                              878   endif 
                              879   endm
                              881 ;///////////////////////////////////////////////////////////////////////////////
                              882 ;
                              883 ;>  Name:           InstrumentSetValue 
                              884 ;
                              885 ;   Type:           Macro
                              886 ;
                              887 ;   Description:    calls the instrument functions specified.
                              888 ;
                              889 ;   Inputs:         Value
                              890 ;                        
                              891 ;   Outputs:        none
                              892 ;   
                              893 ;   Notes:          This does not modify any registers  
                              894 ;
                              895 ;   SeeAlso:        
                              896 ;
                              897 ;<
                              898 ;///////////////////////////////////////////////////////////////////////////////
                              899 InstrumentSetValue macro value
                              900   if (@DEF('USE_INSTRUMENTATION'))
                              901     extern FInstrumentSetValue
                              902     jsr PushA
                              903     move #>value,a
                              904     jsr FInstrumentSetValue
                              905     jsr PopA
                              906   endif 
                              907   endm
                              910 ;///////////////////////////////////////////////////////////////////////////////
                              911 ;
                              912 ;>  Name:           InstrumentSetEvent 
                              913 ;
                              914 ;   Type:           Macro
                              915 ;
                              916 ;   Description:    calls the instrument functions specified.
                              917 ;
                              918 ;   Inputs:         Value
                              919 ;                        
                              920 ;   Outputs:        none
                              921 ;   
                              922 ;   Notes:          This does not modify any registers  
                              923 ;
                              924 ;   SeeAlso:        
                              925 ;
                              926 ;<
                              927 ;///////////////////////////////////////////////////////////////////////////////
                              928 InstrumentSetEvent macro event
                              929   if (@DEF('USE_INSTRUMENTATION'))
                              930     extern FInstrumentSetEvent
                              931     jsr PushA
                              932     move #>event,a
                              933     jsr FInstrumentSetEvent
                              934     jsr PopA
                              935   endif 
                              936   endm
                              938 ;///////////////////////////////////////////////////////////////////////////////
                              939 ;
                              940 ;>  Name:           InstrumentClearEvent 
                              941 ;
                              942 ;   Type:           Macro
                              943 ;
                              944 ;   Description:    calls the instrument functions specified.
                              945 ;
                              946 ;   Inputs:         event
                              947 ;                        
                              948 ;   Outputs:        none
                              949 ;   
                              950 ;   Notes:          This does not modify any registers  
                              951 ;
                              952 ;   SeeAlso:        
                              953 ;
                              954 ;<
                              955 ;///////////////////////////////////////////////////////////////////////////////
                              956 InstrumentClearEvent macro event
                              957   if (@DEF('USE_INSTRUMENTATION'))
                              958     extern FInstrumentClearEvent
                              959     jsr PushA
                              960     move #>event,a
                              961     jsr FInstrumentClearEvent
                              962     jsr PopA
                              963   endif 
                              964   endm
                              966 ;///////////////////////////////////////////////////////////////////////////////
                              967 ;
                              968 ;>  Name:           InstrumentToggleEvent 
                              969 ;
                              970 ;   Type:           Macro
                              971 ;
                              972 ;   Description:    calls the instrument functions specified.
                              973 ;
                              974 ;   Inputs:         event
                              975 ;                        
                              976 ;   Outputs:        none
                              977 ;   
                              978 ;   Notes:          This does not modify any registers  
                              979 ;
                              980 ;   SeeAlso:        
                              981 ;
                              982 ;<
                              983 ;///////////////////////////////////////////////////////////////////////////////
                              984 InstrumentToggleEvent macro event
                              985   if (@DEF('USE_INSTRUMENTATION'))
                              986     extern FInstrumentToggleEvent
                              987     jsr PushA
                              988     move #>event,a
                              989     jsr FInstrumentToggleEvent
                              990     jsr PopA
                              991   endif 
                              992   endm
                               15         include "const.xref"
                                1 ;******************************************************************************
                                2 ; Copyright(C) SigmaTel, Inc. 2000
                                3 ;
                                4 ; ST Mp3 const.EXTERN 
                                5 ;******************************************************************************
                                7    DEFINE   const_xref  '1'
                               42     ; Parthus compatability
                               16     include "resource.inc"
                                1 ;
                                2 ;  NOTE: This file was generated automatically by rscrenum.pl
                                3 ;  Do not edit it directly.
                                4 ;  Created on Sat Jun 28 16:37:44 2008 using resource.inc as input.
                                8 ;
                                9 ;  NOTE: This file was generated automatically by rscrenum.pl
                               10 ;  Do not edit it directly.
                               11 ;  Created on Sat Jun 28 16:13:49 2008 using resource.inc as input.
                               15 ;
                               16 ;  NOTE: This file was generated automatically by rscrenum.pl
                               17 ;  Do not edit it directly.
                               18 ;  Created on Sat Jun 28 15:55:53 2008 using resource.inc as input.
                               22 ;
                               23 ;  NOTE: This file was generated automatically by rscrenum.pl
                               24 ;  Do not edit it directly.
                               25 ;  Created on Thu Jun 26 08:58:05 2008 using resource.inc as input.
                               29 ;
                               30 ;  NOTE: This file was generated automatically by rscrenum.pl
                               31 ;  Do not edit it directly.
                               32 ;  Created on Wed Jun 25 17:00:35 2008 using resource.inc as input.
                               36 ;
                               37 ;  NOTE: This file was generated automatically by rscrenum.pl
                               38 ;  Do not edit it directly.
                               39 ;  Created on Wed Jun 25 11:42:38 2008 using resource.inc as input.
                               43 ;
                               44 ;  NOTE: This file was generated automatically by rscrenum.pl
                               45 ;  Do not edit it directly.
                               46 ;  Created on Wed Jun 25 11:17:50 2008 using resource.inc as input.
                               50 ;
                               51 ;  NOTE: This file was generated automatically by rscrenum.pl
                               52 ;  Do not edit it directly.
                               53 ;  Created on Wed Jun 25 11:17:05 2008 using resource.inc as input.
                               57 ;
                               58 ;  NOTE: This file was generated automatically by rscrenum.pl
                               59 ;  Do not edit it directly.
                               60 ;  Created on Tue Jun 24 15:21:11 2008 using resource.inc as input.
                               64 ;
                               65 ;  NOTE: This file was generated automatically by rscrenum.pl
                               66 ;  Do not edit it directly.
                               67 ;  Created on Sun Jun 22 02:54:01 2008 using resource.inc as input.
                               71 ;
                               72 ;  NOTE: This file was generated automatically by rscrenum.pl
                               73 ;  Do not edit it directly.
                               74 ;  Created on Sun Jun 22 00:47:39 2008 using resource.inc as input.
                               78 ;
                               79 ;  NOTE: This file was generated automatically by rscrenum.pl
                               80 ;  Do not edit it directly.
                               81 ;  Created on Fri Jun 20 16:15:57 2008 using resource.inc as input.
                               85 ;
                               86 ;  NOTE: This file was generated automatically by rscrenum.pl
                               87 ;  Do not edit it directly.
                               88 ;  Created on Thu Jun 19 09:47:30 2008 using resource.inc as input.
                               92 ;
                               93 ;  NOTE: This file was generated automatically by rscrenum.pl
                               94 ;  Do not edit it directly.
                               95 ;  Created on Wed Jun 18 23:11:16 2008 using resource.inc as input.
                               99 ;
                              100 ;  NOTE: This file was generated automatically by rscrenum.pl
                              101 ;  Do not edit it directly.
                              102 ;  Created on Wed Jun 18 22:57:19 2008 using resource.inc as input.
TASKING DSP2410 assembler v1.5r1 Build 138 SN 00100122
                                                                                                                                                                                                                                                       Page   5

M:ADDR CODE           CYCLES LINE SOURCELINE
                              106 ;
                              107 ;  NOTE: This file was generated automatically by rscrenum.pl
                              108 ;  Do not edit it directly.
                              109 ;  Created on Wed Jun 18 22:49:16 2008 using resource.inc as input.
                              113 ;
                              114 ;  NOTE: This file was generated automatically by rscrenum.pl
                              115 ;  Do not edit it directly.
                              116 ;  Created on Wed Jun 18 11:53:38 2008 using resource.inc as input.
                              120 ;
                              121 ;  NOTE: This file was generated automatically by rscrenum.pl
                              122 ;  Do not edit it directly.
                              123 ;  Created on Wed Jun 18 10:45:13 2008 using resource.inc as input.
                              127 ;
                              128 ;  NOTE: This file was generated automatically by rscrenum.pl
                              129 ;  Do not edit it directly.
                              130 ;  Created on Wed Jun 18 09:54:56 2008 using resource.inc as input.
                              134 ;
                              135 ;  NOTE: This file was generated automatically by rscrenum.pl
                              136 ;  Do not edit it directly.
                              137 ;  Created on Tue Jun 17 16:47:21 2008 using resource.inc as input.
                              141 ;
                              142 ;  NOTE: This file was generated automatically by rscrenum.pl
                              143 ;  Do not edit it directly.
                              144 ;  Created on Tue Jun 17 11:30:49 2008 using resource.inc as input.
                              148 ;///////////////////////////////////////////////////////////////////////////////
                              149 ; Copyright(C) SigmaTel, Inc. 2001-2007
                              150 ; Reviews: DanhNguyen (06-2008) for X8iTF/STFM1000
                              151 ; LCD example resource listing
                              152 ;///////////////////////////////////////////////////////////////////////////////
                              155 resources equ 1
                              157 ;///////////////////////////////////////////////////////////////////////////////
                              158 ;  Player version number  no leading zeros in version number!!!!!
                              159 ;///////////////////////////////////////////////////////////////////////////////
                              161 VERSION_MAJOR               equ     3
                              162 VERSION_MIDDLE              equ     200
                              163 VERSION_MINOR               equ     910
                              165 LCD_SEG_OFFSET              equ     $000000
                              166 NUMBER_OF_PRESETS           equ     10
                              169 ;///////////////////////////////////////////////////////////////////////////////
                              170 ;  High usage resource. These have been moved here to take maximum advantage of
                              171 ;  the resource index cache if it was added.
                              172 ;  This block is sorted by frequency of use while loading a new song.
                              173 ;///////////////////////////////////////////////////////////////////////////////
                              175 RSRC_FUNCLET_SEARCHDIRECTORY    equ        1    ;$FILENAME searchdirectory.src
                              176 RSRC_FUNCLET_SHORTDIRMATCH    equ        2    ;$FILENAME shortdirmatch.src
                              177 RSRC_FUNCLET_FOPEN      equ        3    ;$FILENAME fopen.src
                              178 RSRC_MUSIC_MENU_CODE_BANK    equ        4    ;$FILENAME musicmenu.src
                              179 RSRC_FUNCLET_CHANGEPATH    equ        5    ;$FILENAME changepath.src
                              180 RSRC_FUNCLET__OPENANDVERIFYSLOT    equ        6    ;$FILENAME _openandverifyslot.src
                              181 RSRC_FUNCLET__LOADSLOT    equ        7    ;$FILENAME _loadslot.src
                              182 RSRC_FUNCLET_GETNAME    equ        8    ;$FILENAME getname.src
                              183 RSRC_FUNCLET_STEPPINGVOLTAGESET    equ        9    ;$FILENAME Funclet_SteppingVoltageSet.src
                              184 RSRC_FUNCLET_SETHANDLEFORSEARCH    equ       10    ;$FILENAME sethandleforsearch.src
                              185 RSRC_WMADEC_CODE        equ       11    ;$FILENAME wmaWrap.src
                              186 RSRC_FUNCLET_EXTRACTFILENAME    equ       12    ;$FILENAME extractfilename.src
                              187 RSRC_FUNCLET_OEM_GETGROUPCERTPRIVATEKEY    equ       13    ;$FILENAME oem_getgroupcertprivatekey.src
                              188 RSRC_SOFT_TIMER_MODULE_CODE    equ       14    ;$FILENAME SoftTimerMod.src
                              189 RSRC_FUNCLET_GETSHORTFILENAME    equ       15    ;$FILENAME GetShortfilename.src
                              190 RSRC_FUNCLET_DRM_DCP_LOADPROPERTIESCACHE    equ       16    ;$FILENAME drm_dcp_loadpropertiescache.src
                              191 RSRC_PLAY_STATE_MACHINE_CODE_BANK    equ       17    ;$FILENAME playerstatemachine.src
                              192 RSRC_SYSMOD_CODE        equ       18    ;$FILENAME SysMod.src
                              193 RSRC_FUNCLET_DRM_B64_DECODEW    equ       19    ;$FILENAME drm_b64_decodew.src
                              194 RSRC_FUNCLET_DISCARDTRAILIGPERIODS    equ       20    ;$FILENAME discardtrailigperiods.src
                              195 RSRC_FUNCLET_UPPERCASE    equ       21    ;$FILENAME uppercase.src
                              196 RSRC_FUNCLET_STRLENGTH    equ       22    ;$FILENAME strlength.src
                              197 RSRC_FUNCLET_CONVERTOSHORTNAME    equ       23    ;$FILENAME ConverToShortname.src
                              198 RSRC_FUNCLET_DRM_BBX_HASHVALUE    equ       24    ;$FILENAME drm_bbx_hashvalue.src
                              199 RSRC_FUNCLET_DRM_EXPR_EVALUATEEXPRESSION    equ       25    ;$FILENAME drm_expr_evaluateexpression.src
                              200 RSRC_FUNCLET_DRM_SST_CLOSEKEY    equ       26    ;$FILENAME drm_sst_closekey.src
                              201 RSRC_FUNCLET_SYSSETSPEED    equ       27    ;$FILENAME Funclet_SysSetSpeed.src
                              202 RSRC_FUNCLET_FREEHANDLE    equ       28    ;$FILENAME freehandle.src
                              203 RSRC_FUNCLET_SEARCHFREEHANDLEALLOCATE    equ       29    ;$FILENAME searchfreehandleallocate.src
                              204 RSRC_FUNCLET__PARSELICENSEATTRIBUTES    equ       30    ;$FILENAME _parselicenseattributes.src
                              205 RSRC_FUNCLET_VARIABLESECSTATEGETORSET    equ       31    ;$FILENAME variablesecstategetorset.src
                              206 RSRC_FUNCLET__SETUPLICEVALOBJECTTOSHARE    equ       32    ;$FILENAME _setuplicevalobjecttoshare.src
                              207 RSRC_FUNCLET_DRM_MGR_INITIALIZE    equ       33    ;$FILENAME drm_mgr_initialize.src
                              208 RSRC_DISPLAY_CODE_BANK    equ       34    ;$FILENAME display.src
                              209 RSRC_DISPLAY_MODULE     equ       35    ;$FILENAME DisplayModule.src
                              210 RSRC_FUNCLET_EXTRACTPATH    equ       36    ;$FILENAME extractpath.src
                              211 RSRC_FUNCLET_DRM_SST_CREATEGLOBALSTOREPASSWORD    equ       37    ;$FILENAME drm_sst_createglobalstorepassword.src
                              212 RSRC_FUNCLET__GETPRIVATEKEY    equ       38    ;$FILENAME _getprivatekey.src
                              213 RSRC_FUNCLET_DRM_HDS_OPENNAMESPACE    equ       39    ;$FILENAME drm_hds_opennamespace.src
                              214 RSRC_FUNCLET_DRM_HDS_OPENSLOT    equ       40    ;$FILENAME drm_hds_openslot.src
                              215 RSRC_FUNCLET_FCLOSE     equ       41    ;$FILENAME fclose.src
                              216 RSRC_FUNCLET_DRM_CPHR_INIT    equ       42    ;$FILENAME drm_cphr_init.src
                              217 RSRC_FUNCLET_DRM_PK_SYMMETRICCRYPT    equ       43    ;$FILENAME drm_pk_symmetriccrypt.src
                              218 RSRC_FUNCLET_DRM_MGR_BIND    equ       44    ;$FILENAME drm_mgr_bind.src
                              219 RSRC_FUNCLET__DECRYPTCONTENTKEY    equ       45    ;$FILENAME _decryptcontentkey.src
                              220 RSRC_FUNCLET_DRM_MAC_INV32    equ       46    ;$FILENAME drm_mac_inv32.src
                              221 RSRC_FUNCLET_DRM_LIC_GETATTRIBUTE    equ       47    ;$FILENAME drm_lic_getattribute.src
                              222 RSRC_FUNCLET_DRM_UTL_GETVERSIONASSTRING    equ       48    ;$FILENAME drm_utl_getversionasstring.src
                              223 RSRC_FUNCLET_DRM_DCP_GETATTRIBUTE    equ       49    ;$FILENAME drm_dcp_getattribute.src
                              224 RSRC_EFFECTS_MODULES_P    equ       50    ;$FILENAME effectsmodules.src
                              225 RSRC_JANUSX_CODE        equ       51    ;$FILENAME janusx.src
                              226 RSRC_FUNCLET_DRM_SST_OPENKEYTOKENS    equ       52    ;$FILENAME drm_sst_openkeytokens.src
                              227 RSRC_FUNCLET_EVAL       equ       53    ;$FILENAME eval.src
                              228 RSRC_FUNCLET__VERIFYSLOTHASH    equ       54    ;$FILENAME _verifyslothash.src
                              229 RSRC_JANUS_COMMON       equ       55    ;$FILENAME januscommon.src
                              230 RSRC_FUNCLET_CHANGECASE    equ       56    ;$FILENAME changecase.src
                              231 RSRC_FUNCLET_DRM_BBX_SYMMETRICVERIFY    equ       57    ;$FILENAME drm_bbx_symmetricverify.src
                              232 RSRC_FUNCLET__LOADLICENSEATTRIBUTES    equ       58    ;$FILENAME _loadlicenseattributes.src
                              233 RSRC_FUNCLET_DRM_HDS_SLOTSEEK    equ       59    ;$FILENAME drm_hds_slotseek.src
                              234 RSRC_FUNCLET_DRM_HDS_SLOTWRITE    equ       60    ;$FILENAME drm_hds_slotwrite.src
                              235 RSRC_FUNCLET_DRM_LEVL_PERFORMOPERATIONS    equ       61    ;$FILENAME drm_levl_performoperations.src
                              236 RSRC_FUNCLET_DRM_LIC_VERIFYSIGNATURE    equ       62    ;$FILENAME drm_lic_verifysignature.src
                              237 RSRC_FUNCLET_DRM_LST_GETLICENSE    equ       63    ;$FILENAME drm_lst_getlicense.src
                              238 RSRC_FUNCLET_DRM_UTL_NUMBERTOSTRING    equ       64    ;$FILENAME drm_utl_numbertostring.src
                              239 RSRC_FUNCLET_OEM_WRITEFILE    equ       65    ;$FILENAME oem_writefile.src
                              240 RSRC_FUNCLET_DRM_SST_GETDATA    equ       66    ;$FILENAME drm_sst_getdata.src
                              241 RSRC_FUNCLET_UPDATEHANDLEMODE    equ       67    ;$FILENAME updatehandlemode.src
                              242 RSRC_FUNCLET__GETLICENSEINFOANDSETUP    equ       68    ;$FILENAME _getlicenseinfoandsetup.src
                              243 RSRC_FUNCLET_DRM_LIC_COMPLETELICENSECHAIN    equ       69    ;$FILENAME drm_lic_completelicensechain.src
                              244 RSRC_DOPLAY_P           equ       70    ;$FILENAME doplay_p.src
                              245 RSRC_FATWRITE_P_CODE    equ       71    ;$FILENAME fatwritep.src
                              246 RSRC_FUNCLET_FINDFIRST    equ       72    ;$FILENAME findfirst.src
                              247 RSRC_FUNCLET_SYSLOADFATWRITE    equ       73    ;$FILENAME Funclet_SysLoadFatWrite.src
                              248 RSRC_FUNCLET_CHANGETOROOTDIRECTORY    equ       74    ;$FILENAME changetorootdirectory.src
                              249 RSRC_FUNCLET__FINDKEYPAIR    equ       75    ;$FILENAME _findkeypair.src
                              250 RSRC_FUNCLET_VARIABLEMACHINEGETORSET    equ       76    ;$FILENAME variablemachinegetorset.src
                              251 RSRC_FUNCLET__HDSSLOTENUMNEXT    equ       77    ;$FILENAME _hdsslotenumnext.src
                              252 RSRC_FUNCLET_GETLSPUBKEY    equ       78    ;$FILENAME getlspubkey.src
                              253 RSRC_FUNCLET_DRM_SST_GETTOKENVALUE    equ       79    ;$FILENAME drm_sst_gettokenvalue.src
                              254 RSRC_FUNCLET_DRM_UTL_DECODEKID    equ       80    ;$FILENAME drm_utl_decodekid.src
                              255 RSRC_FUNCLET_DRM_XML_GETNODECDATA    equ       81    ;$FILENAME drm_xml_getnodecdata.src
                              256 RSRC_FUNCLET__FREEDRMMANAGERINTERNALCONTEXTS    equ       82    ;$FILENAME _freedrmmanagerinternalcontexts.src
                              257 RSRC_FUNCLET_DRM_CLK_INITCHECKSECURECLOCK    equ       83    ;$FILENAME drm_clk_initchecksecureclock.src
                              258 RSRC_FUNCLET_DRM_SST_OPENANDLOCKSLOT    equ       84    ;$FILENAME drm_sst_openandlockslot.src
                              259 RSRC_AES_ENC            equ       85    ;$FILENAME aes_enc.src
                              260 RSRC_FUNCLET_GETPRIVKEY    equ       86    ;$FILENAME getprivkey.src
                              261 RSRC_FUNCLET_GET_UNICODE_CHARACTER_BITMAP    equ       87    ;$FILENAME Funclet_GetUnicodeCharacterBitmap.src
                              262 RSRC_PLAYLIST_CODEBANK    equ       88    ;$FILENAME playlist_codebank.src
                              263 RSRC_FUNCLET_DRM_LIC_GETENABLINGBITS    equ       89    ;$FILENAME drm_lic_getenablingbits.src
                              264 RSRC_FUNCLET_DRM_MGR_UNINITIALIZE    equ       90    ;$FILENAME drm_mgr_uninitialize.src
                              265 RSRC_FUNCLET__GETDEVICECERT    equ       91    ;$FILENAME _getdevicecert.src
                              266 RSRC_FUNCLET_DRM_LIC_REPORTACTIONS    equ       92    ;$FILENAME drm_lic_reportactions.src
                              267 RSRC_FUNCLET_DRMCRT_WCSNTOL    equ       93    ;$FILENAME drmcrt_wcsntol.src
                              268 RSRC_FUNCLET__BASICHEADERCHECKS    equ       94    ;$FILENAME _basicheaderchecks.src
                              269 RSRC_FUNCLET_DRM_HDR_GETATTRIBUTE    equ       95    ;$FILENAME drm_hdr_getattribute.src
                              270 RSRC_FUNCLET_DRM_HDS_SLOTENUMNEXT    equ       96    ;$FILENAME drm_hds_slotenumnext.src
                              271 RSRC_FUNCLET_DRM_LEVL_EVALUATEEXPRESSION    equ       97    ;$FILENAME drm_levl_evaluateexpression.src
                              272 RSRC_FUNCLET_DRM_LST_OPEN    equ       98    ;$FILENAME drm_lst_open.src
                              273 RSRC_FUNCLET_DRM_XML_GETNODEATTRIBUTE    equ       99    ;$FILENAME drm_xml_getnodeattribute.src
                              274 RSRC_FUNCLET__VERIFYSYMMERTICSIGNATURE    equ      100    ;$FILENAME _verifysymmerticsignature.src
                              275 RSRC_FUNCLET_OEM_OPENFILE    equ      101    ;$FILENAME oem_openfile.src
                              276 RSRC_FUNCLET__GETDRMFULLPATHNAME    equ      102    ;$FILENAME _getdrmfullpathname.src
                              277 RSRC_FUNCLET_OEM_GETSECURESTOREGLOBALPASSWORDSEED    equ      103    ;$FILENAME oem_getsecurestoreglobalpasswordseed.src
                              278 RSRC_FUNCLET__APPLYDIFFSTOSTORE    equ      104    ;$FILENAME _applydiffstostore.src
                              279 RSRC_FUNCLET_DRM_SST_SETDATA    equ      105    ;$FILENAME drm_sst_setdata.src
                              280 RSRC_FUNCLET_DRM_SST_GETLOCKEDDATA    equ      106    ;$FILENAME drm_sst_getlockeddata.src
                              281 RSRC_FUNCLET_DRM_SST_SETLOCKEDDATA    equ      107    ;$FILENAME drm_sst_setlockeddata.src
                              282 RSRC_PLAYERLIB_EXTRA_CODE_BANK    equ      108    ;$FILENAME playerlib_extra.src
                              283 RSRC_WMA_COMMON         equ      109    ;$FILENAME wmaCommon.src
                              284 RSRC_WMA_INIT           equ      110    ;$FILENAME wmainit.src
                              285 RSRC_PLAYLIST2TRAVERSE_CODEBANK    equ      111    ;$FILENAME playlist2traverse_codebank.src
                              286 RSRC_FUNCLET_DRM_BBX_CIPHERKEYSETUP    equ      112    ;$FILENAME drm_bbx_cipherkeysetup.src
                              287 RSRC_FUNCLET_DRM_LIC_CHECKCLOCKROLLBACK    equ      113    ;$FILENAME drm_lic_checkclockrollback.src
                              288 RSRC_FUNCLET_DRM_HDS_CLOSESTORE    equ      114    ;$FILENAME drm_hds_closestore.src
                              289 RSRC_FUNCLET__HDSLOADSRN    equ      115    ;$FILENAME _hdsloadsrn.src
                              290 RSRC_FUNCLET__LOADPRORITIZEDLIST    equ      116    ;$FILENAME _loadproritizedlist.src
                              291 RSRC_FUNCLET_DRM_LST_INITENUM    equ      117    ;$FILENAME drm_lst_initenum.src
                              292 RSRC_FUNCLET__LOADATTRIBUTESINTOCACHE    equ      118    ;$FILENAME _loadattributesintocache.src
                              293 RSRC_FUNCLET_DRM_PK_SYMMETRICVERIFY    equ      119    ;$FILENAME drm_pk_symmetricverify.src
                              295 ;///////////////////////////////////////////////////////////////////////////////
                              296 ;  Menu Modules (codebanks)
                              297 ;///////////////////////////////////////////////////////////////////////////////
                              298 RSRC_MAIN_MENU_CODE_BANK    equ      120    ;$FILENAME mainmenu.src
                              299 RSRC_DISPLAY_LISTS_CODE_BANK    equ      121    ;$FILENAME displaylists.src
                              301 RSRC_VOICE_MENU_CODE_BANK    equ      122    ;$FILENAME voicemenu.src
                              302 RSRC_FMTUNER_MENU_CODE_BANK    equ      123    ;$FILENAME fmtunermenu.src
                              303 RSRC_RECORDER_STATE_MACHINE_CODE_BANK    equ      124    ;$FILENAME recorderstatemachine.src
                              305 RSRC_EQ_MENU_CODE_BANK    equ      125    ;$FILENAME eqmenu.src
                              306 RSRC_PLAYMODE_MENU_CODE_BANK    equ      126    ;$FILENAME playmodemenu.src
                              307 RSRC_CONTRAST_MENU_CODE_BANK    equ      127    ;$FILENAME contrastmenu.src
                              308 RSRC_PWRSETTINGS_MENU_CODE_BANK    equ      128    ;$FILENAME pwrsettingsmenu.src
                              309 RSRC_TIMEDATE_MENU_CODE_BANK    equ      129    ;$FILENAME timedatemenu.src
                              310 RSRC_SETTIME_MENU_CODE_BANK    equ      130    ;$FILENAME settimemenu.src
                              311 RSRC_SETDATE_MENU_CODE_BANK    equ      131    ;$FILENAME setdatemenu.src
                              312 RSRC_SETTINGS_MENU_CODE_BANK    equ      132    ;$FILENAME settingsmenu.src
                              313 RSRC_SYSTEM_MENU_CODE_BANK    equ      133    ;$FILENAME string_system_menu.src
                              314 RSRC_DELETE_MENU_CODE_BANK    equ      134    ;$FILENAME deletemenu.src
                              315 RSRC_ABOUT_MENU_CODE_BANK    equ      135    ;$FILENAME aboutmenu.src
                              317 RSRC_SPECTROGRAM_MENU_CODE_BANK    equ      136    ;$FILENAME spectrogram.src
                              319 RSRC_MOTION_VIDEO_MENU_CODE_BANK    equ      137    ;$FILENAME motionvideomenu.src
                              320 RSRC_MOTION_VIDEO_MENU_INITSTATE_CODE_BANK    equ      138    ;$FILENAME motionvideomenuinitstate.src
                              321 RSRC_JPEG_DISPLAY_MENU_CODE_BANK    equ      139    ;$FILENAME jpegdisplaymenu.src
                              322 RSRC_JPEG_MANUAL_MENU_CODE_BANK    equ      140    ;$FILENAME jpegmanualmenu.src
                              323 RSRC_JPEG_THUMBNAIL_MENU_CODE_BANK    equ      141    ;$FILENAME jpegthumbnailmenu.src
                              324 RSRC_JPEG_SLIDESHOW_MENU_CODE_BANK    equ      142    ;$FILENAME jpegslideshowmenu.src
                              325 RSRC_ALBUM_ART_MENU_CODE_BANK    equ      143    ;$FILENAME albumartmenu.src
                              326 RSRC_JPEG_FILEUTIL_EXTRA_MENU_CODE_BANK    equ      144    ;$FILENAME jpegfileutilextra.src
                              328 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                              329 ; General Modules
                              330 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                              331 RSRC_MIXMOD_CODE        equ      145    ;$FILENAME MixMod.src
                              332 RSRC_TUNER_MODULE       equ      146    ;$FILENAME TunerModule.src
                              333 RSRC_GEQOVERLAY_CODE    equ      147    ;$FILENAME geqoverlay.src
                              335 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                              336 ; Decoders/Encoders
                              337 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                              338 RSRC_DECMOD_CODE        equ      148    ;$FILENAME DecMod.src
                              339 RSRC_MP3P_CODE          equ      149    ;$FILENAME mp3p.src
                              340 RSRC_MP3X_CODE          equ      150    ;$FILENAME mp3x.src
                              341 RSRC_MP3Y_CODE          equ      151    ;$FILENAME mp3y.src
                              342 RSRC_JANUSP_CODE        equ      152    ;$FILENAME janusp.src
                              343 ;RSRC_JANUSY_CODE        equ       29    ;$FILENAME janusy.src
                              345 RSRC_DEC_ADPCM_MOD_CODE    equ      153    ;$FILENAME decadpcmimamod.src
                              346 RSRC_DEC_ADPCMP_CODE    equ      154    ;$FILENAME dec_adpcmp.src
                              347 RSRC_DEC_ADPCMX_CODE    equ      155    ;$FILENAME dec_adpcmx.src
                              348 RSRC_DEC_ADPCMY_CODE    equ      156    ;$FILENAME dec_adpcmy.src
                              350 RSRC_DEC_SMVADPCM_MOD_CODE    equ      157    ;$FILENAME decadpcmsmvmod.src
                              351 RSRC_DEC_SMVADPCMP_CODE    equ      158    ;$FILENAME dec_smvadpcmp.src
                              352 RSRC_DEC_SMVADPCMX_CODE    equ      159    ;$FILENAME dec_smvadpcmx.src
                              353 RSRC_DEC_SMVADPCMY_CODE    equ      160    ;$FILENAME dec_smvadpcmy.src
                              355 RSRC_ENC_ADPCM_MOD_CODE    equ      161    ;$FILENAME encadpcmimamod.src
                              356 RSRC_ENC_ADPCMP_CODE    equ      162    ;$FILENAME enc_adpcmp.src
                              357 RSRC_ENC_ADPCMX_CODE    equ      163    ;$FILENAME enc_adpcmx.src
                              358 RSRC_ENC_ADPCMY_CODE    equ      164    ;$FILENAME enc_adpcmy.src
                              360 RSRC_JPEG_DECODER_P     equ      165    ;$FILENAME jpeg_p.src
                              361 RSRC_JPEG_DECODER_X     equ      166    ;$FILENAME jpeg_x.src
                              362 RSRC_JPEG_DECODER_Y     equ      167    ;$FILENAME jpeg_y.src
                              363 RSRC_JPEG_DECODER_Y_2    equ      168    ;$FILENAME jpeg2_y.src
                              364 RSRC_BMP_DECODER_Y_2    equ      169    ;$FILENAME bmp2_y.src
                              365 RSRC_BMP_DECODER_P      equ      170    ;$FILENAME bmp_p.src
                              367 ;RSRC_SMVJPEG_DECODER_P    equ       57    ;$FILENAME smvjpeg_p.src
                              368 RSRC_SMVJPEG_DECODER_X    equ      171    ;$FILENAME smvjpeg_x.src
                              369 RSRC_SMVJPEG_DECODER_Y    equ      172    ;$FILENAME smvjpeg_y.src
                              372 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                              373 ; System Settings
                              374 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                              375 RSRC_SETTINGS_COMMANDS    equ      173    ;$FILENAME settings.src
                              377 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                              378 ; Media Device Drivers
                              379 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                              380 ;This resource is filled with garbage unless it is the MMC build
                              381 RSRC_MMCDD_CODE         equ      174    ;$FILENAME null.src
                              382 RSRC_SMDD_HIGH_CODE     equ      175    ;$FILENAME null.src
                              384 ;///////////////////////////////////////////////////////////////////////////////
                              385 ;  PlayState resources
                              386 ;///////////////////////////////////////////////////////////////////////////////
                              387 RSRC_PLAY_ICON_WITH_BORDER    equ      176    ;$FILENAME play_icon_with_border.src
                              388 RSRC_PAUSE_ICON_WITH_BORDER    equ      177    ;$FILENAME pause_icon_with_border.src
                              389 RSRC_STOP_ICON_WITH_BORDER    equ      178    ;$FILENAME stop_icon_with_border.src
                              390 RSRC_RECORD_ICON_WITH_BORDER    equ      179    ;$FILENAME record_icon_with_border.src
                              391 RSRC_PAUSED_RECORD_ICON_BORDER    equ      180    ;$FILENAME paused_record_icon_with_border.src
                              392 RSRC_FFWD_ICON_WITH_BORDER    equ      181    ;$FILENAME ffwd_icon_with_border.src
                              393 RSRC_RWND_ICON_WITH_BORDER    equ      182    ;$FILENAME rwnd_icon_with_border.src
                              395 ;///////////////////////////////////////////////////////////////////////////////
                              396 ;  PlayMode resources
                              397 ;///////////////////////////////////////////////////////////////////////////////
                              398 RSRC_REPEAT_ALL_ICON    equ      183    ;$FILENAME repeatall_icon.src
                              399 RSRC_REPEAT_SONG_ICON    equ      184    ;$FILENAME repeatsong_icon.src
TASKING DSP2410 assembler v1.5r1 Build 138 SN 00100122
                                                                                                                                                                                                                                                       Page   6

M:ADDR CODE           CYCLES LINE SOURCELINE
                              400 RSRC_SHUFFLE_ICON       equ      185    ;$FILENAME shuffle_icon.src
                              401 RSRC_RANDOM_ICON        equ      186    ;$FILENAME random_icon.src
                              402 RSRC_REPEAT_ALL_CLEAR_ICON    equ      187    ;$FILENAME repeatallclear_icon.src
                              403 RSRC_REPEAT_SONG_CLEAR_ICON    equ      188    ;$FILENAME repeatsongclear_icon.src
                              404 RSRC_SHUFFLE_CLEAR_ICON    equ      189    ;$FILENAME shuffleclear_icon.src
                              406 ;///////////////////////////////////////////////////////////////////////////////
                              407 ;  Battery Status
                              408 ;///////////////////////////////////////////////////////////////////////////////
                              409 RSRC_BATTERY_00         equ      190    ;$FILENAME battery_00.src
                              410 RSRC_BATTERY_01         equ      191    ;$FILENAME battery_01.src
                              411 RSRC_BATTERY_02         equ      192    ;$FILENAME battery_02.src
                              412 RSRC_BATTERY_03         equ      193    ;$FILENAME battery_03.src
                              413 RSRC_BATTERY_04         equ      194    ;$FILENAME battery_04.src
                              414 RSRC_BATTERY_05         equ      195    ;$FILENAME battery_05.src
                              415 RSRC_BATTERY_06         equ      196    ;$FILENAME battery_06.src
                              416 RSRC_BATTERY_07         equ      197    ;$FILENAME battery_07.src
                              417 RSRC_BATTERY_08         equ      198    ;$FILENAME battery_08.src
                              418 RSRC_BATTERY_09         equ      199    ;$FILENAME battery_09.src
                              419 RSRC_BATTERY_10         equ      200    ;$FILENAME battery_10.src
                              421 ;///////////////////////////////////////////////////////////////////////////////
                              422 ;  System Icons
                              423 ;///////////////////////////////////////////////////////////////////////////////
                              424 RSRC_DISK_ICON          equ      201    ;$FILENAME disk_small.src
                              425 RSRC_LOCK_ICON          equ      202    ;$FILENAME lock_small.src
                              426 RSRC_MUSIC_MODE_ICON    equ      203    ;$FILENAME icon_music_mode.src
                              427 RSRC_VOICE_MODE_ICON    equ      204    ;$FILENAME icon_voice_mode.src
                              429 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                              430 ; Volume Bitmaps
                              431 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                              432 RSRC_ICON_VOL_00        equ      205    ;$FILENAME icon_vol_00.src
                              433 RSRC_ICON_VOL_01        equ      206    ;$FILENAME icon_vol_01.src
                              434 RSRC_ICON_VOL_02        equ      207    ;$FILENAME icon_vol_02.src
                              435 RSRC_ICON_VOL_03        equ      208    ;$FILENAME icon_vol_03.src
                              436 RSRC_ICON_VOL_04        equ      209    ;$FILENAME icon_vol_04.src
                              437 RSRC_ICON_VOL_05        equ      210    ;$FILENAME icon_vol_05.src
                              438 RSRC_ICON_VOL_06        equ      211    ;$FILENAME icon_vol_06.src
                              439 RSRC_ICON_VOL_07        equ      212    ;$FILENAME icon_vol_07.src
                              440 RSRC_ICON_VOL_08        equ      213    ;$FILENAME icon_vol_08.src
                              441 RSRC_ICON_VOL_09        equ      214    ;$FILENAME icon_vol_09.src
                              442 RSRC_ICON_VOL_10        equ      215    ;$FILENAME icon_vol_10.src
                              443 RSRC_ICON_VOL_11        equ      216    ;$FILENAME icon_vol_11.src
                              444 RSRC_ICON_VOL_12        equ      217    ;$FILENAME icon_vol_12.src
                              445 RSRC_ICON_VOL_13        equ      218    ;$FILENAME icon_vol_13.src
                              446 RSRC_ICON_VOL_14        equ      219    ;$FILENAME icon_vol_14.src
                              447 RSRC_ICON_VOL_15        equ      220    ;$FILENAME icon_vol_15.src
                              448 RSRC_ICON_VOL_16        equ      221    ;$FILENAME icon_vol_16.src
                              449 RSRC_ICON_VOL_17        equ      222    ;$FILENAME icon_vol_17.src
                              450 RSRC_ICON_VOL_18        equ      223    ;$FILENAME icon_vol_18.src
                              451 RSRC_ICON_VOL_19        equ      224    ;$FILENAME icon_vol_19.src
                              452 RSRC_ICON_VOL_20        equ      225    ;$FILENAME icon_vol_20.src
                              453 RSRC_ICON_VOL_21        equ      226    ;$FILENAME icon_vol_21.src
                              454 RSRC_ICON_VOL_22        equ      227    ;$FILENAME icon_vol_22.src
                              455 RSRC_ICON_VOL_23        equ      228    ;$FILENAME icon_vol_23.src
                              456 RSRC_ICON_VOL_24        equ      229    ;$FILENAME icon_vol_24.src
                              457 RSRC_ICON_VOL_25        equ      230    ;$FILENAME icon_vol_25.src
                              458 RSRC_ICON_VOL_26        equ      231    ;$FILENAME icon_vol_26.src
                              459 RSRC_ICON_VOL_27        equ      232    ;$FILENAME icon_vol_27.src
                              460 RSRC_ICON_VOL_28        equ      233    ;$FILENAME icon_vol_28.src
                              461 RSRC_ICON_VOL_29        equ      234    ;$FILENAME icon_vol_29.src
                              462 RSRC_ICON_VOL_30        equ      235    ;$FILENAME icon_vol_30.src
                              463 RSRC_ICON_VOL_31        equ      236    ;$FILENAME icon_vol_31.src
                              465 ;///////////////////////////////////////////////////////////////////////////////////////////////////
                              466 ; Splash Screen Stuff
                              467 ;///////////////////////////////////////////////////////////////////////////////////////////////////
                              468 RSRC_SPLASH_SCREEN      equ      237    ;$FILENAME st_bw1.src
                              469 RSRC_SPLASH_SCREEN_1    equ      238    ;$FILENAME siglogo1.src
                              470 RSRC_SPLASH_SCREEN_2    equ      239    ;$FILENAME siglogo2.src
                              471 RSRC_SPLASH_SCREEN_3    equ      240    ;$FILENAME siglogo3.src
                              472 RSRC_SPLASH_SCREEN_4    equ      241    ;$FILENAME siglogo4.src
                              473 RSRC_SPLASH_SCREEN_5    equ      242    ;$FILENAME siglogo5.src
                              474 RSRC_SPLASH_SCREEN_6    equ      243    ;$FILENAME siglogo6.src
                              475 RSRC_SPLASH_SCREEN_7    equ      244    ;$FILENAME siglogo7.src
                              476 RSRC_SPLASH_SCREEN_8    equ      245    ;$FILENAME siglogo8.src
                              477 RSRC_SPLASH_SCREEN_9    equ      246    ;$FILENAME siglogo9.src
                              478 RSRC_SPLASH_SCREEN_10    equ      247    ;$FILENAME siglogo10.src
                              479 RSRC_SPLASH_SCREEN_11    equ      248    ;$FILENAME siglogo11.src
                              480 RSRC_SPLASH_SCREEN_12    equ      249    ;$FILENAME siglogo12.src
                              481 RSRC_SPLASH_SCREEN_13    equ      250    ;$FILENAME siglogo13.src
                              482 RSRC_SPLASH_SCREEN_ALL    equ      251    ;$FILENAME siglogo.src
                              484 RSRC_LOCKED_SCREEN      equ      252    ;$FILENAME locked.src
                              486 ;///////////////////////////////////////////////////////////////////////////////
                              487 ;  Shutdown
                              488 ;///////////////////////////////////////////////////////////////////////////////
                              489 RSRC_PDOWN_HOLD_STRING    equ      253    ;$FILENAME string_arial_8_continue_holding_to_power_off.src
                              490 RSRC_PDOWN_STATUS_0     equ      254    ;$FILENAME status_16_6_steps_0.src
                              491 RSRC_PDOWN_STATUS_1     equ      255    ;$FILENAME status_16_6_steps_1.src
                              492 RSRC_PDOWN_STATUS_2     equ      256    ;$FILENAME status_16_6_steps_2.src
                              493 RSRC_PDOWN_STATUS_3     equ      257    ;$FILENAME status_16_6_steps_3.src
                              494 RSRC_PDOWN_STATUS_4     equ      258    ;$FILENAME status_16_6_steps_4.src
                              495 RSRC_PDOWN_STATUS_5     equ      259    ;$FILENAME status_16_6_steps_5.src
                              496 RSRC_PDOWN_STATUS_6     equ      260    ;$FILENAME status_16_6_steps_6.src
                              498 ;///////////////////////////////////////////////////////////////////////////////////////////////////
                              499 ; EQ
                              500 ;///////////////////////////////////////////////////////////////////////////////////////////////////
                              501 RSRC_EQ_CLEAR_ICON      equ      261    ;$FILENAME eq_clear_icon.src
                              502 RSRC_ROCK_ICON          equ      262    ;$FILENAME rock_icon.src
                              503 RSRC_JAZZ_ICON          equ      263    ;$FILENAME jazz_icon.src
                              504 RSRC_CLASSIC_ICON       equ      264    ;$FILENAME classic_icon.src
                              505 RSRC_POP_ICON           equ      265    ;$FILENAME pop_icon.src
                              506 RSRC_CUSTOM_ICON        equ      266    ;$FILENAME custom_icon.src
                              508 ;///////////////////////////////////////////////////////////////////////////////////////////////////
                              509 ; AB
                              510 ;///////////////////////////////////////////////////////////////////////////////////////////////////
                              511 RSRC_AB_MARK_A_ICON     equ      267    ;$FILENAME ab_mark_a.src
                              512 RSRC_AB_MARK_B_ICON     equ      268    ;$FILENAME ab_mark_b.src
                              514 ;///////////////////////////////////////////////////////////////////////////////////////////////////
                              515 ; Menu Display Resources
                              516 ;///////////////////////////////////////////////////////////////////////////////////////////////////
                              517 RSRC_STRING_MUSIC_MENU    equ      269    ;$FILENAME string_music_menu.src
                              518 RSRC_STRING_MVIDEO_MENU    equ      270    ;$FILENAME string_mvideo_menu.src
                              519 RSRC_STRING_JPEG_DISPLAY_MENU    equ      271    ;$FILENAME string_jpeg_display_menu.src
                              520 RSRC_STRING_JPEG_MANUAL_MENU    equ      272    ;$FILENAME string_jpeg_manual_menu.src
                              521 RSRC_STRING_JPEG_SLIDESHOW_MENU    equ      273    ;$FILENAME string_jpeg_slideshow_menu.src
                              522 RSRC_STRING_JPEG_THUMBNAIL_MENU    equ      274    ;$FILENAME string_jpeg_thumbnail_menu.src
                              523 RSRC_STRING_VOICE_MENU    equ      275    ;$FILENAME string_voice_menu.src
                              524 RSRC_STRING_AUDIBLE_MENU    equ      276    ;$FILENAME string_audible_menu.src
                              525 RSRC_STRING_FMTUNER_MENU    equ      277    ;$FILENAME string_fmtuner_menu.src
                              526 RSRC_STRING_SETTINGS_MENU    equ      278    ;$FILENAME string_settings_menu.src
                              527 RSRC_STRING_EQ_MENU     equ      279    ;$FILENAME string_eq_menu.src
                              528 RSRC_STRING_PLAYMODE_MENU    equ      280    ;$FILENAME string_playmode_menu.src
                              529 RSRC_STRING_CONTRAST_MENU    equ      281    ;$FILENAME string_contrast_menu.src
                              530 RSRC_STRING_PWRSAVINGS_MENU    equ      282    ;$FILENAME string_pwrsavings_menu.src
                              531 RSRC_STRING_TIME_DATE_MENU    equ      283    ;$FILENAME string_time_date_menu.src
                              532 RSRC_STRING_SET_TIME_MENU    equ      284    ;$FILENAME string_set_time_menu.src
                              533 RSRC_STRING_SET_DATE_MENU    equ      285    ;$FILENAME string_set_date_menu.src
                              534 RSRC_STRING_EXIT_MENU    equ      286    ;$FILENAME string_exit_menu.src
                              535 RSRC_STRING_ROCK_MENU    equ      287    ;$FILENAME string_rock_menu.src
                              536 RSRC_STRING_POP_MENU    equ      288    ;$FILENAME string_pop_menu.src
                              537 RSRC_STRING_CLASSIC_MENU    equ      289    ;$FILENAME string_classic_menu.src
                              538 RSRC_STRING_NORMAL_MENU    equ      290    ;$FILENAME string_normal_menu.src
                              539 RSRC_STRING_JAZZ_MENU    equ      291    ;$FILENAME string_jazz_menu.src
                              540 RSRC_STRING_REPEAT1_MENU    equ      292    ;$FILENAME string_repeat1_menu.src
                              541 RSRC_STRING_REPEATALL_MENU    equ      293    ;$FILENAME string_repeatall_menu.src
                              542 RSRC_STRING_SHUFFLE_MENU    equ      294    ;$FILENAME string_shuffle_menu.src
                              543 RSRC_STRING_SHUFFLEREPEAT_MENU    equ      295    ;$FILENAME string_repeatshuffle_menu.src
                              544 RSRC_STRING_DISABLE_MENU    equ      296    ;$FILENAME string_disable_menu.src
                              545 RSRC_STRING_1MIN_MENU    equ      297    ;$FILENAME string_1min_menu.src
                              546 RSRC_STRING_2MIN_MENU    equ      298    ;$FILENAME string_2min_menu.src
                              547 RSRC_STRING_5MIN_MENU    equ      299    ;$FILENAME string_5min_menu.src
                              548 RSRC_STRING_10MIN_MENU    equ      300    ;$FILENAME string_10min_menu.src
                              549 RSRC_STRING_SYSTEM_MENU    equ      301    ;$FILENAME string_system_menu.src
                              550 RSRC_STRING_ABOUT_MENU    equ      302    ;$FILENAME string_about_menu.src
                              551 RSRC_STRING_DELETE_MENU    equ      303    ;$FILENAME string_delete_menu.src
                              552 RSRC_STRING_RECORD_MENU    equ      304    ;$FILENAME string_record_menu.src
                              553 RSRC_STRING_SPECTROGRAM_MENU    equ      305    ;$FILENAME string_spectrogram_menu.src
                              555 RSRC_STRING_END_OF_SLIDE_SHOW    equ      306    ;$FILENAME string_end_of_slide_show.src
                              557 RSRC_STRING_MB          equ      307    ;$FILENAME string_mb.src
                              559 RSRC_INT_MEDIA          equ      308    ;$FILENAME internal_media.src
                              560 RSRC_EXT_MEDIA          equ      309    ;$FILENAME external_media.src
                              562 RSRC_ABOUT_TITLE        equ      310    ;$FILENAME about_title.src
                              563 RSRC_PLAYER_NAME_VER    equ      311    ;$FILENAME player_name.src
                              565 RSRC_SETTINGS_TITLE     equ      312    ;$FILENAME settings_title.src
                              566 RSRC_JPEG_DISPLAY_TITLE    equ      313    ;$FILENAME jpeg_display_title.src
                              567 RSRC_ERASE_TITLE        equ      314    ;$FILENAME erase_title.src
                              569 RSRC_DELETE_NO          equ      315    ;$FILENAME del_warning_no.src
                              570 RSRC_DELETE_YES         equ      316    ;$FILENAME del_warning_yes.src
                              571 RSRC_WARNING_MSG_LINE1    equ      317    ;$FILENAME del_warning_line1.src
                              572 RSRC_WARNING_MSG_LINE2    equ      318    ;$FILENAME del_warning_line2.src
                              573 RSRC_BROWNOUT_BITMAP    equ      319    ;$FILENAME lowbattery.src
                              574 RSRC_VBR_BITMAP         equ      320    ;$FILENAME vbr.src
                              576 RSRC_STRING_SONG_COLON    equ      321    ;$FILENAME string_song.src
                              577 RSRC_STRING_VOICE_COLON    equ      322    ;$FILENAME string_voice.src
                              579 RSRC_TIME_DATE_TITLE    equ      323    ;$FILENAME time_date_title.src
                              580 RSRC_SET_TIME_TITLE     equ      324    ;$FILENAME set_time_title.src
                              581 RSRC_SET_DATE_TITLE     equ      325    ;$FILENAME set_date_title.src
                              582 RSRC_STRING_SEARCHING    equ      326    ;$FILENAME string_searching.src
                              583 ;///////////////////////////////////////////////////////////////////////////////
                              584 ;  Save Changes
                              585 ;///////////////////////////////////////////////////////////////////////////////
                              586 RSRC_SAVE_CHANGES_YES    equ      327    ;$FILENAME save_changes_yes.src
                              587 RSRC_SAVE_CHANGES_NO    equ      328    ;$FILENAME save_changes_no.src
                              588 RSRC_SAVE_CHANGES_CANCEL    equ      329    ;$FILENAME save_changes_cancel.src
                              589 RSRC_SAVE_CHANGES_CLEAR    equ      330    ;$FILENAME save_changes_clear.src
                              590 ;///////////////////////////////////////////////////////////////////////////////
                              591 ;  Contrast
                              592 ;///////////////////////////////////////////////////////////////////////////////
                              593 RSRC_CONTRAST_TITLE     equ      331    ;$FILENAME contrast_title.src
                              594 RSRC_CONTRAST_FRAME     equ      332    ;$FILENAME contrast_frame.src
                              595 RSRC_CONTRAST_LEVEL_0    equ      333    ;$FILENAME contrast_level0.src
                              596 RSRC_CONTRAST_LEVEL_1    equ      334    ;$FILENAME contrast_level1.src
                              597 RSRC_CONTRAST_LEVEL_2    equ      335    ;$FILENAME contrast_level2.src
                              598 RSRC_CONTRAST_LEVEL_3    equ      336    ;$FILENAME contrast_level3.src
                              599 RSRC_CONTRAST_LEVEL_4    equ      337    ;$FILENAME contrast_level4.src
                              600 RSRC_CONTRAST_LEVEL_5    equ      338    ;$FILENAME contrast_level5.src
                              601 RSRC_CONTRAST_LEVEL_6    equ      339    ;$FILENAME contrast_level6.src
                              602 RSRC_CONTRAST_LEVEL_7    equ      340    ;$FILENAME contrast_level7.src
                              603 RSRC_CONTRAST_LEVEL_8    equ      341    ;$FILENAME contrast_level8.src
                              604 RSRC_CONTRAST_LEVEL_9    equ      342    ;$FILENAME contrast_level9.src
                              605 RSRC_CONTRAST_LEVEL_10    equ      343    ;$FILENAME contrast_level10.src
                              607 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                              608 ; Funclets
                              609 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                              610 RSRC_FUNCLET_SET_RTC    equ      344    ;$FILENAME Funclet_SetRTC.src
                              611 RSRC_FUNCLET_INIT_RTC    equ      345    ;$FILENAME Funclet_InitRTC.src
                              612 RSRC_FUNCLET_READ_RTC    equ      346    ;$FILENAME Funclet_ReadRTC.src
                              613 RSRC_FUNCLET_SYSRESETALLINT    equ      347    ;$FILENAME Funclet_SysResetAllInt.src
                              614 RSRC_FUNCLET_SYSSETUPDECVEC    equ      348    ;$FILENAME Funclet_SysSetupDecVec.src
                              615 RSRC_FUNCLET_SYSSETUPENCVEC    equ      349    ;$FILENAME Funclet_SysSetupEncVec.src
                              616 RSRC_FUNCLET_SYSTIMEINIT    equ      350    ;$FILENAME Funclet_SysTimeInit.src
                              617 RSRC_FUNCLET_ANALOGINIT    equ      351    ;$FILENAME Funclet_AnalogInit.src
                              618 RSRC_FUNCLET_USBCONNECTED    equ      352    ;$FILENAME Funclet_UsbConnected.src
                              619 RSRC_FUNCLET_BUTTONINIT    equ      353    ;$FILENAME Funclet_ButtonInit.src
                              620 RSRC_FUNCLET_POWERUPHEADPHONES    equ      354    ;$FILENAME Funclet_PowerUpHeadPhones.src
                              621 RSRC_FUNCLET_POWERDOWNHEADPHONES    equ      355    ;$FILENAME Funclet_PowerDownHeadPhones.src
                              622 RSRC_FUNCLET_STARTPROJECT    equ      356    ;$FILENAME Funclet_StartProject.src
                              623 RSRC_FUNCLET_MODULESETTIMER    equ      357    ;$FILENAME Funclet_ModuleSetTimer.src
                              624 RSRC_FUNCLET_MEDIADETECTION    equ      358    ;$FILENAME null.src
                              625 RSRC_FUNCLET_SYSSTOPDECODER    equ      359    ;$FILENAME Funclet_SysStopDecoder.src
                              626 RSRC_FUNCLET_SYSSTOPENCODER    equ      360    ;$FILENAME Funclet_SysStopEncoder.src
                              627 RSRC_FUNCLET_SYSSETDECODER    equ      361    ;$FILENAME Funclet_SysSetDecoder.src
                              628 RSRC_FUNCLET_SYSSETENCODER    equ      362    ;$FILENAME Funclet_SysSetEncoder.src
                              629 RSRC_FUNCLET_PROCESSPT    equ      363    ;$FILENAME null.src
                              630 RSRC_FUNCLET_DISPLAYSPLASHSCREEN    equ      364    ;$FILENAME Funclet_DisplaySplashScreen.src
                              631 RSRC_FUNCLET_SYSGETVOLUME    equ      365    ;$FILENAME Funclet_SysGetVolume.src
                              632 RSRC_FUNCLET_MMCENUMERATEPHYSICALDEVICE    equ      366    ;$FILENAME null.src
                              633 RSRC_FUNCLET_RESETDEVICE    equ      367    ;$FILENAME null.src
                              634 RSRC_FUNCLET_PROCESSCSD    equ      368    ;$FILENAME null.src
                              635 RSRC_FUNCLET_PROCESSPARTITION    equ      369    ;$FILENAME null.src
                              636 RSRC_FUNCLET_PARTITIONENTRYCOPY    equ      370    ;$FILENAME null.src
                              637 RSRC_FUNCLET_MIXER_MASTER_FADE_OUT    equ      371    ;$FILENAME Funclet_MixerMasterFadeOut.src
                              638 RSRC_FUNCLET_MIXER_MASTER_FADE_IN    equ      372    ;$FILENAME Funclet_MixerMasterFadeIn.src
                              639 RSRC_FUNCLET_ENCSETPROPERTIES    equ      373    ;$FILENAME Funclet_EncSetProperties.src
                              640 RSRC_FUNCLET_DOESMBREXIST    equ      374    ;$FILENAME null.src
                              641 RSRC_FUNCLET_EXTRACTPARTITIONPARAMETERS    equ      375    ;$FILENAME null.src
                              642 RSRC_FUNCLET_SYSSAVESETTINGS    equ      376    ;$FILENAME Funclet_SaveSettings.src
                              643 RSRC_FUNCLET_SYSLOADSETTINGS    equ      377    ;$FILENAME Funclet_LoadSettings.src
                              644 ;/////////////////////////////////////////////////////////////
                              645 ; Sanyo FM Tuner Fuclet
                              646 ;/////////////////////////////////////////////////////////////
                              647 ;RSRC_FUNCLET_TUNER_DRIVER_INIT    equ      334    ;$FILENAME Funclet_TunerDriverInit.src
                              648 ;RSRC_FUNCLET_TUNER_SCAN_STATIONS    equ      335    ;$FILENAME Funclet_TunerScanStations.src
                              649 ;RSRC_FUNCLET_TUNER_SET_TO_PRESET    equ      336    ;$FILENAME Funclet_TunerSetToPreset.src
                              650 ;RSRC_FUNCLET_TUNER_SET_MONO_STEREO    equ      337    ;$FILENAME Funclet_TunerSetMonoStereo.src
                              651 ;RSRC_FUNCLET_TUNER_SET_STANDBY    equ      338    ;$FILENAME Funclet_TunerSetStandby.src
                              652 ;RSRC_FUNCLET_TUNER_SET_PRESET    equ      339    ;$FILENAME Funclet_TunerSetPreset.src
                              653 ;RSRC_FUNCLET_TUNER_ERASE_PRESET    equ      340    ;$FILENAME Funclet_TunerErasePreset.src
                              654 ;RSRC_FUNCLET_TUNER_SET_IF    equ      341    ;$FILENAME Funclet_TunerSetIf.src
                              655 ;RSRC_FUNCLET_TUNER_WRITE_IF_OSC    equ      342    ;$FILENAME Funclet_TunerWriteIfOSc.src
                              656 ;RSRC_FUNCLET_TUNER_GET_FIELD_STRENGTH    equ      343    ;$FILENAME Funclet_TunerGetFieldStrength.src
                              657 ;RSRC_FUNCLET_TUNER_INIT_RF_CAP_OSC    equ      344    ;$FILENAME Funclet_TunerInitRfCapOsc.src
                              658 ;RSRC_FUNCLET_TUNER_STORE_FM_STATION    equ      345    ;$FILENAME Funclet_TunerStoreFmStation.src
                              659 ;RSRC_FUNCLET_TUNER_STORE_FM_PRESET    equ      346    ;$FILENAME Funclet_TunerStoreFmPreset.src
                              660 ;RSRC_FUNCLET_TUNER_SET_REGION    equ      347    ;$FILENAME Funclet_TunerSetRegion.src
                              662 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                              663 ; WMA Resources
                              664 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                              665 RSRC_WMA_CORE           equ      378    ;$FILENAME wmaCore.src
                              666 RSRC_WMA_MIDLOW         equ      379    ;$FILENAME wmaMidLow.src
                              667 RSRC_WMA_HIGH           equ      380    ;$FILENAME wmaHigh.src
                              668 RSRC_WMA_HIGHMID        equ      381    ;$FILENAME wmaHighMid.src
                              669 RSRC_WMA_MID            equ      382    ;$FILENAME wmaMid.src
TASKING DSP2410 assembler v1.5r1 Build 138 SN 00100122
                                                                                                                                                                                                                                                       Page   7

M:ADDR CODE           CYCLES LINE SOURCELINE
                              670 RSRC_WMA_LOW            equ      383    ;$FILENAME wmaLow.src
                              671 RSRC_WMA_DATA_X1        equ      384    ;$FILENAME wmaX1mem.src
                              672 RSRC_WMA_DATA_Y         equ      385    ;$FILENAME wmaYmem.src
                              673 RSRC_WMA_DATA_L_X       equ      386    ;$FILENAME wmaLXmem.src
                              674 RSRC_WMA_DATA_L_Y       equ      387    ;$FILENAME wmaLYmem.src
                              675 RSRC_WMA_HUFF44QB       equ      388    ;$FILENAME wmaHuff44Qb.src
                              676 RSRC_WMA_HUFF44OB       equ      389    ;$FILENAME wmaHuff44Ob.src
                              677 RSRC_WMA_HUFF16OB       equ      390    ;$FILENAME wmaHuff16Ob.src
                              678 RSRC_DRMPD_COMMON       equ      391    ;$FILENAME drmpdcommon.src
                              679 RSRC_JANUS_WMASUPPORT    equ      392    ;$FILENAME januswmasupport.src
                              680 RSRC_WMA_LICENSEINIT    equ      393    ;$FILENAME wmalicenseinit.src
                              681 RSRC_WMA_TABLES         equ      394    ;$FILENAME wma_tables.src
                              682 RSRC_JANUS_TABLES       equ      395    ;$FILENAME janus_tables.src
                              683 RSRC_WMA_CONSTANTS      equ      396    ;$FILENAME wma_constants.src
                              684 RSRC_JANUS_CONSTANTS    equ      397    ;$FILENAME janus_constants.src
                              685 RSRC_JANUS_X            equ      398    ;$FILENAME janus_xmem.src
                              686 RSRC_JANUSY_DATA        equ      399    ;$FILENAME janusy_data.src
                              688 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                              689 ; Fonts -- these are last because they are very large
                              690 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                              691 RSRC_FONT_TABLE         equ      400    ;$FILENAME font_table.src
                              692 RSRC_PGM_8              equ      401    ;$FILENAME font_PGM.src
                              693 RSRC_SGMS_8             equ      402    ;$FILENAME font_SGMs.src
                              694 RSRC_SCRIPT_00_8        equ      403    ;$FILENAME font_script_00.src
                              695 RSRC_SCRIPTS_8          equ      404    ;$FILENAME font_scripts.src
                              696 RSRC_PDM                equ      405    ;$FILENAME font_PDM.src
                              697 RSRC_SDMS               equ      406    ;$FILENAME font_SDMs.src
                              698 RSRC_WARNING            equ      407    ;$FILENAME bitmap_warning.src
                              699 RSRC_DEVICE_FULL        equ      408    ;$FILENAME bitmap_device_full.src
                              702 RSRC_LCD_INIT_SEQ       equ      409    ;$FILENAME lcd_controller_init.src
                              704 RSRC_FUNCLET_DBCS_TO_UNICODE    equ      410    ;$FILENAME Funclet_DBCSToUnicode.src
                              705 RSRC_FUNCLET_DBCS_TO_UNICODE_DSTX_SRCY    equ      411    ;$FILENAME Funclet_DBCSToUnicodeDstXSrcY.src
                              706 RSRC_FUNCLET_SET_FONT    equ      412    ;$FILENAME Funclet_LCDSetFont.src
                              707 RSRC_FUNCLET_GET_TEXT_WIDTH_ADDRESS_UNICODE    equ      413    ;$FILENAME Funclet_GetTextWidthAddressUnicode.src
                              708 RSRC_FUNCLET_GET_TEXT_WIDTH_RESOURCE_UNICODE    equ      414    ;$FILENAME Funclet_GetTextWidthResourceUnicode.src
                              709 RSRC_FUNCLET_GET_TEXT_WIDTH_ADDRESS_DBCS    equ      415    ;$FILENAME Funclet_GetTextWidthAddressDBCS.src
                              710 RSRC_FUNCLET_GET_TEXT_WIDTH_RESOURCE_DBCS    equ      416    ;$FILENAME Funclet_GetTextWidthResourceDBCS.src
                              711 RSRC_FUNCLET_CHIPSERIALNUMBERINIT    equ      417    ;$FILENAME Funclet_ChipSerialNumberInit.src
                              712 RSRC_FUNCLET_INTERNALMEDIASERIALNUMBERINIT    equ      418    ;$FILENAME Funclet_InternalMediaSerialNumberInit.src
                              713 RSRC_FUNCLET_CHIPGETSERIALNUMBER    equ      419    ;$FILENAME Funclet_ChipGetSerialNumber.src
                              714 RSRC_FUNCLET_CREATENULLSERIALNUMBER    equ      420    ;$FILENAME Funclet_CreateNullSerialNumber.src
                              715 RSRC_FUNCLET_CONVERTHEXTOASCII    equ      421    ;$FILENAME Funclet_ConvertHexToASCII.src
                              716 RSRC_FUNCLET_LOWRESOLUTIONADCINIT    equ      422    ;$FILENAME Funclet_LowResolutionAdcInit.src
                              719 RSRC_SYSRECORD_CODE     equ      423    ;$FILENAME sysrecord.src
                              721 RSRC_STRING_RECORD_SETTINGS    equ      424    ;$FILENAME string_record_settings.src
                              722 RSRC_STRING_SAMPLE_RATE    equ      425    ;$FILENAME string_sample_rate.src
                              723 RSRC_STRING_ENCODER     equ      426    ;$FILENAME string_encoder.src
                              724 RSRC_STRING_ADPCM       equ      427    ;$FILENAME string_adpcm.src
                              725 RSRC_STRING_MSADPCM     equ      428    ;$FILENAME string_msadpcm.src
                              726 RSRC_STRING_IMADPCM     equ      429    ;$FILENAME string_imadpcm.src
                              727 RSRC_STRING_PCM         equ      430    ;$FILENAME string_pcm.src
                              728 RSRC_STRING_INTERNAL    equ      431    ;$FILENAME string_internal.src
                              729 RSRC_STRING_EXTERNAL    equ      432    ;$FILENAME string_external.src
                              730 RSRC_STRING_DEVICE      equ      433    ;$FILENAME string_device.src
                              731 RSRC_STRING_SOURCE      equ      434    ;$FILENAME string_source.src
                              732 RSRC_STRING_MICROPHONE    equ      435    ;$FILENAME string_microphone.src
                              733 RSRC_STRING_LINEIN      equ      436    ;$FILENAME string_linein.src
                              734 RSRC_STRING_BITS        equ      437    ;$FILENAME string_bits.src
                              735 RSRC_STRING_4           equ      438    ;$FILENAME string_4.src
                              736 RSRC_STRING_8           equ      439    ;$FILENAME string_8.src
                              737 RSRC_STRING_16          equ      440    ;$FILENAME string_16.src
                              738 RSRC_STRING_24          equ      441    ;$FILENAME string_24.src
                              739 RSRC_STRING_FM          equ      442    ;$FILENAME string_fm.src
                              740 RSRC_STRING_MONO        equ      443    ;$FILENAME string_mono.src
                              741 RSRC_STRING_STEREO      equ      444    ;$FILENAME string_stereo.src
                              742 RSRC_STRING_8000HZ      equ      445    ;$FILENAME string_8000hz.src
                              743 RSRC_STRING_11025HZ     equ      446    ;$FILENAME string_11025hz.src
                              744 RSRC_STRING_16000HZ     equ      447    ;$FILENAME string_16000hz.src
                              745 RSRC_STRING_22050HZ     equ      448    ;$FILENAME string_22050hz.src
                              746 RSRC_STRING_32000HZ     equ      449    ;$FILENAME string_32000hz.src
                              747 RSRC_STRING_44100HZ     equ      450    ;$FILENAME string_44100hz.src
                              748 RSRC_STRING_48000HZ     equ      451    ;$FILENAME string_48000hz.src
                              749 RSRC_STRING_CHANNELS    equ      452    ;$FILENAME string_channels.src
                              750 RSRC_STRING_SPACES      equ      453    ;$FILENAME string_spaces.src
                              751 RSRC_SLIDER_BAR         equ      454    ;$FILENAME slider_bar.src
                              752 RSRC_SLIDER_BAR_INV     equ      455    ;$FILENAME slider_bar_inv.src
                              753 RSRC_SLIDER_TRACK       equ      456    ;$FILENAME slider_track.src
                              754 RSRC_STRING_NO_FILES    equ      457    ;$FILENAME string_no_files.src
                              756 ;///////////////////////////////////////////////////////////////////
                              757 ;  Time and Date Resource Strings
                              758 ;///////////////////////////////////////////////////////////////////
                              759 RSRC_STRING_SUNDAY      equ      458    ;$FILENAME string_sunday.src
                              760 RSRC_STRING_MONDAY      equ      459    ;$FILENAME string_monday.src
                              761 RSRC_STRING_TUESDAY     equ      460    ;$FILENAME string_tuesday.src
                              762 RSRC_STRING_WEDNESDAY    equ      461    ;$FILENAME string_wednesday.src
                              763 RSRC_STRING_THURSDAY    equ      462    ;$FILENAME string_thursday.src
                              764 RSRC_STRING_FRIDAY      equ      463    ;$FILENAME string_friday.src
                              765 RSRC_STRING_SATURDAY    equ      464    ;$FILENAME string_saturday.src
                              766 RSRC_STRING_AM          equ      465    ;$FILENAME string_am.src
                              767 RSRC_STRING_PM          equ      466    ;$FILENAME string_pm.src
                              768 RSRC_STRING_AMCLEAR     equ      467    ;$FILENAME string_amclear.src
                              769 RSRC_STRING_SLASH       equ      468    ;$FILENAME string_slash.src
                              770 RSRC_STRING_COLON       equ      469    ;$FILENAME string_colon.src
                              771 RSRC_STRING_12HOUR      equ      470    ;$FILENAME string_12hour.src
                              772 RSRC_STRING_24HOUR      equ      471    ;$FILENAME string_24hour.src
                              773 RSRC_STRING_FORMAT      equ      472    ;$FILENAME string_format.src
                              774 RSRC_STRING_MMDDYYYY    equ      473    ;$FILENAME string_mmddyyyy.src
                              775 RSRC_STRING_DDMMYYYY    equ      474    ;$FILENAME string_ddmmyyyy.src
                              776 RSRC_STRING_YYYYMMDD    equ      475    ;$FILENAME string_yyyymmdd.src
                              777 RSRC_STRING_OK          equ      476    ;$FILENAME string_ok.src
                              778 RSRC_STRING_CANCEL      equ      477    ;$FILENAME string_cancel.src
                              779 RSRC_NEGATIVE_SIGN      equ      478    ;$FILENAME negative_sign.src
                              780 RSRC_DEC_PT5_STRING     equ      479    ;$FILENAME string_dec_pt5.src
                              781 RSRC_DEC_PT0_STRING     equ      480    ;$FILENAME string_dec_pt0.src
                              782 RSRC_DB_STRING          equ      481    ;$FILENAME string_db.src
                              783 RSRC_HZ2_STRING         equ      482    ;$FILENAME string_hz2.src
                              786 RSRC_RECORD_SETTINGS_MENU_CODE_BANK    equ      483    ;$FILENAME record_settings_menu_code_bank.src
                              787 RSRC_METADATA_CODEBANK    equ      484    ;$FILENAME metadata_codebank.src
                              788 RSRC_MP3_METADATA_CODEBANK    equ      485    ;$FILENAME mp3metadata_codebank.src
                              789 RSRC_WMA_METADATA_CODEBANK    equ      486    ;$FILENAME wmametadata_codebank.src
                              790 RSRC_WAV_METADATA_CODEBANK    equ      487    ;$FILENAME wavmetadata_codebank.src
                              791 RSRC_SMV_METADATA_CODEBANK    equ      488    ;$FILENAME smvmetadata_codebank.src
                              792 RSRC_PLAYLIST2INIT_CODEBANK    equ      489    ;$FILENAME playlist2init_codebank.src
                              794 RSRC_DELETE_SUCCESSFUL    equ      490    ;$FILENAME delete_successful.src
                              795 RSRC_DELETE_ERROR       equ      491    ;$FILENAME delete_error.src
                              796 RSRC_LIC_EXPIRED        equ      492    ;$FILENAME lic_expired.src
                              797 RSRC_ID3V2_CODEBANK     equ      493    ;$FILENAME id3v2_codebank.src
                              798 RSRC_ID3V2_LYRICS_CODEBANK    equ      494    ;$FILENAME id3v2lyrics_codebank.src
                              799 RSRC_LYRICS3_CODEBANK    equ      495    ;$FILENAME lyrics3_codebank.src
                              800 RSRC_LRC_CODEBANK       equ      496    ;$FILENAME lrc_codebank.src
                              801 RSRC_LYRICS_API_CODEBANK    equ      497    ;$FILENAME lyrics_api_codebank.src
                              802 RSRC_WMA_LYRICS_CODEBANK    equ      498    ;$FILENAME wmalyrics_codebank.src
                              803 RSRC_APIC_FRAME_CODEBANK    equ      499    ;$FILENAME apicframe_codebank.src
                              805 RSRC_EXTERNAL_MEDIA_ERROR1    equ      500    ;$FILENAME exmediaerror1.src
                              806 RSRC_EXTERNAL_MEDIA_ERROR2    equ      501    ;$FILENAME exmediaerror2.src
                              807 RSRC_INTERNAL_MEDIA_ERROR1    equ      502    ;$FILENAME inmediaerror1.src
                              809 RSRC_BACKLIGHT_TITLE    equ      503    ;$FILENAME backlight_title.src
                              810 RSRC_BACKLIGHT_STATE_ON    equ      504    ;$FILENAME backlight_state_on.src
                              811 RSRC_BACKLIGHT_STATE_OFF    equ      505    ;$FILENAME backlight_state_off.src
                              812 RSRC_BACKLIGHT_MENU_CODE_BANK    equ      506    ;$FILENAME backlightmenu.src
                              813 RSRC_STRING_BACKLIGHT_MENU    equ      507    ;$FILENAME string_backlight_menu.src
                              815 RSRC_ENC_MP3_MOD_CODE    equ      508    ;$FILENAME enc_mp3mod.src
                              816 RSRC_ENC_MP3P_CODE      equ      509    ;$FILENAME enc_mp3p.src
                              817 RSRC_ENC_MP3X_CODE      equ      510    ;$FILENAME enc_mp3x.src
                              818 RSRC_ENC_MP3Y_CODE      equ      511    ;$FILENAME enc_mp3y.src
                              819 RSRC_MP3_IMPLEMENTATION    equ      512    ;$FILENAME mp3_implementation.src
                              820 RSRC_STRING_MP3         equ      513    ;$FILENAME string_mp3.src
                              821 RSRC_STRING_ALL         equ      514    ;$FILENAME string_all.src
                              823 RSRC_NANDMEDIAINIT      equ      515    ;$FILENAME mediastartup.src
                              824 RSRC_NANDMEDIAALLOCATE                  equ     0
                              825 RSRC_NANDMEDIADISCOVERALLOCATION        equ     0
                              826 RSRC_NANDMEDIAGETMEDIATABLE             equ     RSRC_NANDMEDIAINIT
                              827 RSRC_NANDMEDIAGETINFO                   equ     RSRC_NANDMEDIAINIT
                              828 RSRC_NANDMEDIAERASE                     equ     0
                              830 RSRC_NANDDATADRIVEINIT    equ      516    ;$FILENAME nanddatadriveinit.src
                              831 RSRC_NANDDATADRIVEGETINFO               equ     RSRC_NANDDATADRIVEREADSECTOR
                              832 RSRC_NANDDATADRIVESETINFO               equ     0
                              833 RSRC_NANDDATADRIVEREADSECTOR    equ      517    ;$FILENAME nanddatadrivereadsector.src
                              834 RSRC_NANDDATADRIVEWRITESECTOR           equ     RSRC_NANDDATADRIVEREADSECTOR
                              835 RSRC_NANDDATADRIVEDUMBMULTIWRITESETUP   equ     0
                              836 RSRC_NANDDATADRIVEDUMBMULTIWRITESECTOR  equ     0
                              837 RSRC_NANDDATADRIVECACHEMULTIWRITESETUP  equ     0
                              838 RSRC_NANDDATADRIVECACHEMULTIWRITESECTOR equ     0
                              839 RSRC_NANDDATADRIVEERASE                 equ     0
                              840 RSRC_NANDDATADRIVEFLUSH                 equ     RSRC_NANDDATADRIVEREADSECTOR
                              842 RSRC_NANDSYSTEMDRIVEINIT                equ     RSRC_NANDMEDIAINIT
                              843 RSRC_NANDSYSTEMDRIVEGETINFO             equ     RSRC_NANDMEDIAINIT
                              844 RSRC_NANDSYSTEMDRIVESETINFO             equ     0
                              845 RSRC_NANDSYSTEMDRIVEREADSECTOR          equ     0
                              846 RSRC_NANDSYSTEMDRIVEWRITESECTOR         equ     0
                              847 RSRC_NANDSYSTEMDRIVEMULTIWRITESETUP     equ     0
                              848 RSRC_NANDSYSTEMDRIVEMULTIWRITESECTOR    equ     0
                              849 RSRC_NANDSYSTEMDRIVEERASE               equ     0
                              850 RSRC_NANDSYSTEMDRIVEFLUSH               equ     0
                              852 RSRC_VBR_CODEBANK       equ      518    ;$FILENAME vbr_codebank.src
                              854 RSRC_STRING_RECORDTEST_MENU    equ      519    ;$FILENAME string_recordtest_menu.src
                              855 RSRC_STRING_DURATION    equ      520    ;$FILENAME string_recordtest_duration.src
                              856 RSRC_STRING_TIME5       equ      521    ;$FILENAME string_recordtest_time5.src
                              857 RSRC_STRING_TIME10      equ      522    ;$FILENAME string_recordtest_time10.src
                              858 RSRC_STRING_TIME30      equ      523    ;$FILENAME string_recordtest_time30.src
                              859 RSRC_STRING_TIME60      equ      524    ;$FILENAME string_recordtest_time60.src
                              860 RSRC_STRING_TIME300     equ      525    ;$FILENAME string_recordtest_time300.src
                              861 RSRC_STRING_TIME600     equ      526    ;$FILENAME string_recordtest_time600.src
                              863 RSRC_TEST_TITLE         equ      527    ;$FILENAME test_title.src
                              864 RSRC_TEST_MENU_CODE_BANK    equ      528    ;$FILENAME testmenu.src
                              867 RSRC_MMCDATADRIVEINIT    equ      529    ;$FILENAME mmcmediastartup.src
                              868 RSRC_MMCMEDIAALLOCATE                  equ     RSRC_MMCDATADRIVEINIT
                              869 RSRC_MMCMEDIADISCOVERALLOCATION        equ     RSRC_MMCDATADRIVEINIT
                              870 RSRC_MMCMEDIAGETINFO    equ      530    ;$FILENAME mmcinfo.src
                              871 RSRC_MMCMEDIAGETMEDIATABLE             equ     RSRC_MMCMEDIAGETINFO
                              872 RSRC_MMCMEDIAERASE      equ      531    ;$FILENAME mmcerase.src
                              875 RSRC_MMCDATADRIVEFLUSH                 equ     RSRC_MMCDATADRIVEINIT
                              877 RSRC_MMCENUMERATE       equ      532    ;$FILENAME mmcenumerate.src
                              878 RSRC_MMC_RESETDEVICE    equ      533    ;$FILENAME mmcresetdevice.src
                              879 RSRC_MMC_PROCESSCSD     equ      534    ;$FILENAME mmcprocesscsd.src
                              880 RSRC_MMC_PROCESSCID     equ      535    ;$FILENAME mmcprocesscid.src
                              881 RSRC_FUNCLET_MMCPROCESSCID2    equ      536    ;$FILENAME mmcprocesscid2.src
                              882 RSRC_MMC_DETECTPRESENCE    equ      537    ;$FILENAME mmcdetectpresence.src
                              883 RSRC_MMCSERIALNUMBERINIT    equ      538    ;$FILENAME mmcserialnumberinit.src
                              884 RSRC_MMC_CHECKWRITEPROTECT    equ      539    ;$FILENAME mmccheckwriteprotect.src
                              886 RSRC_MMCDATADRIVEREADSECTOR    equ      540    ;$FILENAME mmcread.src
                              887 RSRC_MMCMEDIAINIT       equ      541    ;$FILENAME mmcmediainit.src
                              888 RSRC_MMCDATADRIVESETINFO    equ      542    ;$FILENAME mmcdatadriveinfo.src
                              889 RSRC_MMCDATADRIVEGETINFO    equ      RSRC_MMCDATADRIVESETINFO
                              890 RSRC_MMCDATADRIVEERASE    equ      543    ;$FILENAME mmcdatadriveerase.src
                              892 RSRC_MMCDATADRIVEWRITESECTOR    equ      RSRC_MMCDATADRIVEREADSECTOR
                              893 RSRC_MMCDATADRIVEMULTIWRITESETUP       equ     RSRC_MMCDATADRIVEWRITESECTOR
                              894 RSRC_MMCDATADRIVEMULTIWRITESECTOR      equ     RSRC_MMCDATADRIVEWRITESECTOR
                              897 ;///////////////////////////////////////////////////////////////////////////////
                              898 ;  File system
                              899 ;///////////////////////////////////////////////////////////////////////////////
                              900 RSRC_FUNCLET_ARRANGEFILENAME    equ      544    ;$FILENAME arrangefilename.src
                              901 RSRC_FUNCLET_CLEARCLUSTER    equ      545    ;$FILENAME clearcluster.src
                              902 RSRC_FUNCLET_CREATEDIRECTORY    equ      546    ;$FILENAME createdirectory.src
                              903 RSRC_FUNCLET_DELETECONTENT    equ      547    ;$FILENAME deletecontent.src
                              904 RSRC_FUNCLET_DELETERECORD    equ      548    ;$FILENAME deleterecord.src
                              905 RSRC_FUNCLET_FASTOPEN    equ      549    ;$FILENAME fastopen.src
                              906 RSRC_FUNCLET_FCREATE    equ      550    ;$FILENAME fcreate.src
                              907 RSRC_FUNCLET_FILEGETATTRIB    equ      551    ;$FILENAME filegetattrib.src
                              908 RSRC_FUNCLET_FILEGETDATE    equ      552    ;$FILENAME filegetdate.src
                              909 RSRC_FUNCLET_FILESETATTRIB    equ      553    ;$FILENAME filesetattrib.src
                              910 RSRC_FUNCLET_FILESETDATE    equ      554    ;$FILENAME filesetdate.src
                              911 RSRC_FUNCLET_FSINIT     equ      555    ;$FILENAME fsinit.src
                              912 RSRC_FUNCLET_FSSHUTDOWN    equ      556    ;$FILENAME fsshutdown.src
                              913 RSRC_FUNCLET_READDEVICERECORD    equ      557    ;$FILENAME readdevicerecord.src
                              914 RSRC_FUNCLET_CHECKSPACEINROOTDIR    equ      558    ;$FILENAME checkspaceinrootdir.src
                              915 RSRC_FUNCLET_SETCWDHANDLE    equ      559    ;$FILENAME setcwdhandle.src
                              916 RSRC_FUNCLET_FSDRIVEINIT    equ      560    ;$FILENAME fsdriveinit.src
                              917 RSRC_FUNCLET_FSCLEARDRIVEBUF    equ      561    ;$FILENAME fsclearBuf.src
                              918 ;RSRC_FUNCLET_TOTALFREECLUSTER    equ      328    ;$FILENAME totalfreecluster.src
                              919 ;RSRC_FUNCLET_TOTALFREECLUSTERFAT16    equ      328    ;$FILENAME totalfreeclusterfat16.src
                              920 RSRC_FUNCLET_FGETFASTHANDLE    equ      562    ;$FILENAME fgetfasthandle.src
                              921 RSRC_FUNCLET_ISHANDLEWRITEALLOCATED    equ      563    ;$FILENAME ishandlewriteallocated.src
                              922 RSRC_FUNCLET_ISFILEOPEN    equ      564    ;$FILENAME isfileopen.src
                              923 RSRC_FUNCLET_ISCURRWORKDIR    equ      565    ;$FILENAME iscurrworkdir.src
                              924 RSRC_FUNCLET_CHDIR      equ      566    ;$FILENAME chdir.src
                              925 RSRC_FUNCLET_CHDIR_FROM_OFFSET    equ      567    ;$FILENAME chdirFromOffset.src
                              926 RSRC_FUNCLET_DELETETREE    equ      568    ;$FILENAME deletetree.src
                              927 RSRC_FUNCLET_DELETEALLRECORDS    equ      569    ;$FILENAME deleteallrecords.src
                              928 RSRC_FUNCLET_CLEARDATA    equ      570    ;$FILENAME cleardata.src
                              929 RSRC_FUNCLET_CHANGETOLOWLEVELDIR    equ      571    ;$FILENAME changetolowleveldir.src
                              930 RSRC_FUNCLET_GETRECORDNUMBER    equ      572    ;$FILENAME getrecordnumber.src
                              931 RSRC_FUNCLET_FILEREMOVE    equ      573    ;$FILENAME fileremove.src
                              932 RSRC_FUNCLET_CHARACTERSEARCH    equ      574    ;$FILENAME charactersearch.src
                              933 RSRC_FUNCLET_STRINGCOMPARE    equ      575    ;$FILENAME stringcompare.src
                              934 RSRC_FUNCLET_FOPENW     equ      576    ;$FILENAME fopenw.src
                              935 RSRC_FUNCLET_FREMOVE    equ      577    ;$FILENAME fremove.src
                              936 RSRC_FUNCLET_FREMOVEW    equ      578    ;$FILENAME fremovew.src
                              937 RSRC_FUNCLET_MKDIR      equ      579    ;$FILENAME mkdir.src
                              938 RSRC_FUNCLET_MKDIRW     equ      580    ;$FILENAME mkdirw.src
                              939 RSRC_FUNCLET_RMDIR      equ      581    ;$FILENAME rmdir.src
                              940 RSRC_FUNCLET_RMDIRW     equ      582    ;$FILENAME rmdirw.src
                              941 RSRC_FUNCLET_FGETC      equ      583    ;$FILENAME fgetc.src
                              942 RSRC_FUNCLET_FGETS      equ      584    ;$FILENAME fgets.src
                              943 RSRC_FUNCLET_FPUTC      equ      585    ;$FILENAME fputc.src
                              944 RSRC_FUNCLET_FPUTS      equ      586    ;$FILENAME fputs.src
                              945 RSRC_FUNCLET_ARRANGELONGFILENAME    equ      587    ;$FILENAME arrangelongfilename.src
                              946 RSRC_FUNCLET_CONVERT_ITOA    equ      588    ;$FILENAME convert_itoa.src
                              947 RSRC_FUNCLET_CREATEDIRRECORD    equ      589    ;$FILENAME createdirrecord.src
                              948 RSRC_FUNCLET_CHKSUM     equ      590    ;$FILENAME chksum.src
                              949 RSRC_FUNCLET_CREATESHORTDIRRECORD    equ      591    ;$FILENAME createshortdirrecord.src
TASKING DSP2410 assembler v1.5r1 Build 138 SN 00100122
                                                                                                                                                                                                                                                       Page   8

M:ADDR CODE           CYCLES LINE SOURCELINE
                              950 RSRC_FUNCLET_DISCARDTRAILIGPERIODSUCS3    equ      592    ;$FILENAME discardtrailigperiodsucs3.src
                              951 RSRC_FUNCLET_DISCARDTRAILIGPERIODSW    equ      593    ;$FILENAME discardtrailigperiodsw.src
                              952 RSRC_FUNCLET_EXTRACTFILENAMEW    equ      594    ;$FILENAME extractfilenamew.src
                              953 RSRC_FUNCLET_EXTRACTPATHW    equ      595    ;$FILENAME extractpathw.src
                              954 RSRC_FUNCLET_FINDFREERECORD    equ      596    ;$FILENAME findfreerecord.src
                              955 RSRC_FUNCLET_GETNAMEW    equ      597    ;$FILENAME getnamew.src
                              956 RSRC_FUNCLET_ISDIRECTORYEMPTY    equ      598    ;$FILENAME isdirectoryempty.src
                              957 RSRC_FUNCLET_ISSHORTNAMEVALID    equ      599    ;$FILENAME isshortnamevalid.src
                              958 RSRC_FUNCLET_LONGDIRMATCH    equ      600    ;$FILENAME longdirmatch.src
                              959 RSRC_FUNCLET_UNICODETOOEM    equ      601    ;$FILENAME unicodetooem.src
                              960 RSRC_FUNCLET_MATCHDIRRECORDW    equ      602    ;$FILENAME matchdirrecordw.src
                              961 RSRC_FUNCLET_SETCWD     equ      603    ;$FILENAME setcwd.src
                              962 RSRC_FUNCLET_SETSHORTFILENAME    equ      604    ;$FILENAME setshortfilename.src
                              963 RSRC_FUNCLET_GENERATEFILENAMETAIL    equ      605    ;$FILENAME generatefilenametail.src
                              964 RSRC_FUNCLET_DBCSTOUNICODE    equ      606    ;$FILENAME dbcstounicode.src
                              965 RSRC_FUNCLET_STRCPY     equ      607    ;$FILENAME strcpy.src
                              966 RSRC_FUNCLET_STRCPYW    equ      608    ;$FILENAME strcpyw.src
                              967 RSRC_FUNCLET_STRLENGTHW    equ      609    ;$FILENAME strlengthw.src
                              968 RSRC_FUNCLET_FILESYSTEMPRESENT    equ      610    ;$FILENAME filesystempresent.src
                              969 RSRC_FUNCLET_DATADRIVEINIT    equ      611    ;$FILENAME DataDriveInit.src
                              970 RSRC_FUNCLET_FSGETDATADRIVEPBSLOCATION    equ      612    ;$FILENAME FSGetDataDrivePbsLocation.src
                              971 RSRC_FUNCLET_FSPARTITIONENTRYCOPYFSDD    equ      613    ;$FILENAME FSPartitionEntryCopy.src
                              972 RSRC_FUNCLET_DATADRIVEGETSIZE    equ      614    ;$FILENAME DataDriveGetSize.src
                              973 RSRC_FUNCLET_CONSTRUCTLONGFILENAME    equ      615    ;$FILENAME ConstructLongFileName.src
                              974 RSRC_FUNCLET_STRCPYUCS3_2    equ      616    ;$FILENAME strcpyucs3_2.src
                              975 RSRC_FUNCLET_GETVOLUMELABEL    equ      617    ;$FILENAME getvolumelabel.src
                              976 RSRC_FUNCLET_SETVOLUMELABEL    equ      618    ;$FILENAME setvolumelabel.src
                              977 RSRC_DISK_FULL          equ      619    ;$FILENAME disk_full.src
                              978 RSRC_CHECKDISK          equ      620    ;$FILENAME chkdskstartup.src
                              979 RSRC_CHKDSK_YMEM        equ      621    ;$FILENAME chkdskstartupy.src
                              980 RSRC_LOW_PWR_EXT_DEV_LINE1    equ      622    ;$FILENAME low_level_pwr_line1.src
                              981 RSRC_LOW_PWR_EXT_DEV_LINE2    equ      623    ;$FILENAME low_level_pwr_line2.src
                              982 RSRC_STRING_BIT_RATE    equ      624    ;$FILENAME string_bit_rate.src
                              983 RSRC_STRING_96KBPS      equ      625    ;$FILENAME string_96000hz.src
                              984 RSRC_STRING_112KBPS     equ      626    ;$FILENAME string_112000hz.src
                              985 RSRC_STRING_128KBPS     equ      627    ;$FILENAME string_128000hz.src
                              986 RSRC_STRING_160KBPS     equ      628    ;$FILENAME string_160000hz.src
                              987 RSRC_STRING_192KBPS     equ      629    ;$FILENAME string_192000hz.src
                              988 RSRC_STRING_224KBPS     equ      630    ;$FILENAME string_224000hz.src
                              989 RSRC_STRING_256KBPS     equ      631    ;$FILENAME string_256000hz.src
                              990 RSRC_STRING_320KBPS     equ      632    ;$FILENAME string_320000hz.src
                              991 RSRC_STRING_HZ          equ      633    ;$FILENAME string_hz.src
                              992 RSRC_ENCODERCOMMON_P_CODE    equ      634    ;$FILENAME EncCommonp.src
                              993 RSRC_ADC_ADCX_CODE      equ      635    ;$FILENAME adc_adcx.src
                              994 RSRC_ADC_ADCY_CODE      equ      636    ;$FILENAME adc_adcy.src
                              995 RSRC_FUNCLET_LOADENCODERCOMMON    equ      637    ;$FILENAME Funclet_encodercommon.src
                              996 RSRC_STRING_ALBUM       equ      638    ;$FILENAME string_album.src
                              997 RSRC_STRING_SONG        equ      639    ;$FILENAME string_encoder_song.src
                              998 RSRC_STRING_MODE        equ      640    ;$FILENAME string_mode.src
                             1000 ;////////////////////////////////////////////////////////////////////////////////
                             1001 ; display related
                             1002 ;////////////////////////////////////////////////////////////////////////////////
                             1003 RSRC_FUNCLET_HAL_DISPLAY_INIT    equ      641    ;$FILENAME Funclet_HalDisplayInit.src
                             1004 RSRC_FUNCLET_SAL_DISPLAY_INIT    equ      642    ;$FILENAME Funclet_SalDisplayInit.src
                             1005 RSRC_FUNCLET_SAL_HANDLE_MSG    equ      643    ;$FILENAME Funclet_SalHandleMessage.src
                             1006 RSRC_FUNCLET_FIXBITMAPHEADER    equ      644    ;$FILENAME Funclet_FixBitmapHeader.src
                             1007 RSRC_FUNCLET_BITMAPREADHEADER    equ      645    ;$FILENAME Funclet_BitmapReadHeader.src
                             1008 RSRC_FUNCLET_BITMAPREADPALETTE    equ      646    ;$FILENAME Funclet_BitmapReadPalette.src
                             1009 RSRC_FUNCLET_BITMAPREADBITMASK    equ      647    ;$FILENAME Funclet_BitmapReadBitMask.src
                             1010 RSRC_FUNCLET_BITMAPPRINTNONPALETTE    equ      648    ;$FILENAME Funclet_BitmapPrintNonPalette.src
                             1011 RSRC_FUNCLET_BITMAPPRINTPALETTE    equ      649    ;$FILENAME Funclet_BitmapPrintPalette.src
                             1012 RSRC_FUNCLET_DISPLAYPRINTBITMAPFILE    equ      650    ;$FILENAME Funclet_DisplayPrintBitmapFile.src
                             1013 RSRC_FUNCLET_DISPLAYPRINTBITMAPRESOURCE    equ      651    ;$FILENAME Funclet_DisplayPrintBitmapResource.src
                             1015 ;////////////////////////////////////////////////////////////////////////////////
                             1016 ;WMDRM Related
                             1017 ;////////////////////////////////////////////////////////////////////////////////
                             1018 RSRC_FUNCLET_LEGACY_DECRYPTCONTENTKEY    equ      652    ;$FILENAME legacy_decryptcontentkey.src
                             1019 RSRC_FUNCLET_DRM_BBX_LEGACYCIPHERKEYSETUP    equ      653    ;$FILENAME drm_bbx_legacycipherkeysetup.src
                             1020 RSRC_FUNCLET_DRM_BBX_INITIALIZE    equ      654    ;$FILENAME drm_bbx_initialize.src
                             1021 RSRC_FUNCLET_DRM_BBX_CANBIND    equ      655    ;$FILENAME drm_bbx_canbind.src
                             1022 RSRC_FUNCLET_VERIFYCHECKSUM    equ      656    ;$FILENAME verifychecksum.src
                             1023 RSRC_FUNCLET_DRM_B64_ENCODEW    equ      657    ;$FILENAME drm_b64_encodew.src
                             1024 RSRC_FUNCLET__PERFORMACTIONS    equ      658    ;$FILENAME _performactions.src
                             1025 RSRC_FUNCLET__PROCESSENDOFCHAIN    equ      659    ;$FILENAME _processendofchain.src
                             1026 RSRC_FUNCLET_DRMCRT_ISWXDIGIT    equ      660    ;$FILENAME drmcrt_iswxdigit.src
                             1027 RSRC_FUNCLET_DRMCRT_TOWLOWER    equ      661    ;$FILENAME drmcrt_towlower.src
                             1028 RSRC_FUNCLET_DRMCRT_WCSLEN    equ      662    ;$FILENAME drmcrt_wcslen.src
                             1029 RSRC_FUNCLET_DRMCRT_WCSNCPY    equ      663    ;$FILENAME drmcrt_wcsncpy.src
                             1030 RSRC_FUNCLET_DRMCRT_MEMMOVE    equ      664    ;$FILENAME drmcrt_memmove.src
                             1031 RSRC_FUNCLET_PERFORMOPERATION_PART1    equ      665    ;$FILENAME performoperation_part1.src
                             1032 RSRC_FUNCLET_PERFORMOPERATION_PART2    equ      666    ;$FILENAME performoperation_part2.src
                             1033 RSRC_FUNCLET_PERFORMOPERATION_PART3    equ      667    ;$FILENAME performoperation_part3.src
                             1034 RSRC_FUNCLET_PERFORMOPERATION_PART4    equ      668    ;$FILENAME performoperation_part4.src
                             1035 RSRC_FUNCLET_PERFORMOPERATION_PART5    equ      669    ;$FILENAME performoperation_part5.src
                             1036 RSRC_FUNCLET_PERFORMOPERATION_PART6    equ      670    ;$FILENAME performoperation_part6.src
                             1037 RSRC_FUNCLET_ISVALIDFUNCTION    equ      671    ;$FILENAME isvalidfunction.src
                             1038 RSRC_FUNCLET_FUNCTIONGETVALUE    equ      672    ;$FILENAME functiongetvalue.src
                             1039 RSRC_FUNCLET_GLOBALSETVARIABLE    equ      673    ;$FILENAME globalsetvariable.src
                             1040 RSRC_FUNCLET_VARIABLEDRMKGETORSET    equ      674    ;$FILENAME variabledrmkgetorset.src
                             1041 RSRC_FUNCLET_VARIABLEDRMGETORSET    equ      675    ;$FILENAME variabledrmgetorset.src
                             1042 RSRC_FUNCLET_VARIABLEAPPGETORSET    equ      676    ;$FILENAME variableappgetorset.src
                             1043 RSRC_FUNCLET_VARIABLELICENSEGETORSET    equ      677    ;$FILENAME variablelicensegetorset.src
                             1044 RSRC_FUNCLET_VARIABLECONTENTGETORSET    equ      678    ;$FILENAME variablecontentgetorset.src
                             1045 RSRC_FUNCLET_VARIABLEDEVICEGETORSET    equ      679    ;$FILENAME variabledevicegetorset.src
                             1046 RSRC_FUNCLET_VARIABLEPMLICENSEGETORSET    equ      680    ;$FILENAME variablepmlicensegetorset.src
                             1047 RSRC_FUNCLET_DRM_HDS_CREATESTORE    equ      681    ;$FILENAME drm_hds_createstore.src
                             1048 RSRC_FUNCLET_DRM_HDS_INIT    equ      682    ;$FILENAME drm_hds_init.src
                             1049 RSRC_FUNCLET_DRM_HDS_UNINIT    equ      683    ;$FILENAME drm_hds_uninit.src
                             1050 RSRC_FUNCLET_DRM_HDS_OPENSTORE    equ      684    ;$FILENAME drm_hds_openstore.src
                             1051 RSRC_FUNCLET_DRM_HDS_DELETESLOT    equ      685    ;$FILENAME drm_hds_deleteslot.src
                             1052 RSRC_FUNCLET_DRM_HDS_SLOTRESIZE    equ      686    ;$FILENAME drm_hds_slotresize.src
                             1053 RSRC_FUNCLET_DRM_HDS_INITSLOTENUM    equ      687    ;$FILENAME drm_hds_initslotenum.src
                             1054 RSRC_FUNCLET_DRM_HDS_CLEANUPSTORE    equ      688    ;$FILENAME drm_hds_cleanupstore.src
                             1055 RSRC_FUNCLET__HDSCOPYSLOT_CHILD2CHILD    equ      689    ;$FILENAME _hdscopyslot_child2child.src
                             1056 RSRC_FUNCLET__HDSCOPYCHILDPAYLOAD    equ      690    ;$FILENAME _hdscopychildpayload.src
                             1057 RSRC_FUNCLET__HDSDEFRAGMENTFILE    equ      691    ;$FILENAME _hdsdefragmentfile.src
                             1058 RSRC_FUNCLET__HDSCLEANUPNAMESPACE    equ      692    ;$FILENAME _hdscleanupnamespace.src
                             1059 RSRC_FUNCLET__HDSCLEANUPSTORE    equ      693    ;$FILENAME _hdscleanupstore.src
                             1060 RSRC_FUNCLET_DRM_LST_CLEAN    equ      694    ;$FILENAME drm_lst_clean.src
                             1061 RSRC_FUNCLET__HDSLOCATEFREEBLOCKFORSLOT    equ      695    ;$FILENAME _hdslocatefreeblockforslot.src
                             1062 RSRC_FUNCLET__HDSLOCKBLOCK2DELETESLOT    equ      696    ;$FILENAME _hdslockblock2deleteslot.src
                             1063 RSRC_FUNCLET__HDSUNLOCKBLOCK2DELETESLOT    equ      697    ;$FILENAME _hdsunlockblock2deleteslot.src
                             1064 RSRC_FUNCLET__HDSCREATENAMESPACE    equ      698    ;$FILENAME _hdscreatenamespace.src
                             1065 RSRC_FUNCLET__HDSFILEPOS2BLOCKNUM    equ      699    ;$FILENAME _hdsfilepos2blocknum.src
                             1066 RSRC_FUNCLET__WRITESRN    equ      700    ;$FILENAME _writesrn.src
                             1067 RSRC_FUNCLET__WRITECOMMONBLOCKHEADER    equ      701    ;$FILENAME _writecommonblockheader.src
                             1068 RSRC_FUNCLET__WRITECHILDBLOCKHEADER    equ      702    ;$FILENAME _writechildblockheader.src
                             1069 RSRC_FUNCLET__READDATABLOCKHEADER    equ      703    ;$FILENAME _readdatablockheader.src
                             1070 RSRC_FUNCLET__WRITEDATABLOCKHEADER    equ      704    ;$FILENAME _writedatablockheader.src
                             1071 RSRC_FUNCLET__HDSEXPANDSTORE    equ      705    ;$FILENAME _hdsexpandstore.src
                             1072 RSRC_FUNCLET__HDSALLOCBLOCK    equ      706    ;$FILENAME _hdsallocblock.src
                             1073 RSRC_FUNCLET__HDSFREEBLOCK    equ      707    ;$FILENAME _hdsfreeblock.src
                             1074 RSRC_FUNCLET__HDSCREATEOVERSIZEDSLOT    equ      708    ;$FILENAME _hdscreateoversizedslot.src
                             1075 RSRC_FUNCLET__HDSALLOCSLOTINFILE    equ      709    ;$FILENAME _hdsallocslotinfile.src
                             1076 RSRC_FUNCLET__HDSWRITEBLOCKHDR    equ      710    ;$FILENAME _hdswriteblockhdr.src
                             1077 RSRC_FUNCLET__HDSADJUSTCHILDPAYLOAD    equ      711    ;$FILENAME _hdsadjustchildpayload.src
                             1078 RSRC_FUNCLET__HDSFINDLEFTMOSTLEAFBLOCK    equ      712    ;$FILENAME _hdsfindleftmostleafblock.src
                             1079 RSRC_FUNCLET__HDSCREATEANDOPENSLOT    equ      713    ;$FILENAME _hdscreateandopenslot.src
                             1080 RSRC_FUNCLET__HDSREMOVESLOT    equ      714    ;$FILENAME _hdsremoveslot.src
                             1081 RSRC_FUNCLET__HDSCOPYANDLOCKNEWSLOT    equ      715    ;$FILENAME _hdscopyandlocknewslot.src
                             1082 RSRC_FUNCLET__HDSRELOCATESLOTANDKEEPCURRLOCK    equ      716    ;$FILENAME _hdsrelocateslotandkeepcurrlock.src
                             1083 RSRC_FUNCLET__HDSTRAVERSENEXTRIGHTSIBLINGBLOCK    equ      717    ;$FILENAME _hdstraversenextrightsiblingblock.src
                             1084 RSRC_FUNCLET__HDSTRAVERSEBLOCKSINPOSTORDER    equ      718    ;$FILENAME _hdstraverseblocksinpostorder.src
                             1085 RSRC_FUNCLET__HDSSLOTRESIZE    equ      719    ;$FILENAME _hdsslotresize.src
                             1086 RSRC_FUNCLET__ISNULL    equ      720    ;$FILENAME _isnull.src
                             1087 RSRC_FUNCLET__HDSGENSRNHASH    equ      721    ;$FILENAME _hdsgensrnhash.src
                             1088 RSRC_FUNCLET__HDSALLOCBLOCKBUFFER    equ      722    ;$FILENAME _hdsallocblockbuffer.src
                             1089 RSRC_FUNCLET__READSRN    equ      723    ;$FILENAME _readsrn.src
                             1090 RSRC_FUNCLET__HDSGETPUTCHILDBLOCKNUM    equ      724    ;$FILENAME _hdsgetputchildblocknum.src
                             1091 RSRC_FUNCLET__HDSHASHKEYTOINDEX    equ      725    ;$FILENAME _hdshashkeytoindex.src
                             1092 RSRC_FUNCLET__HDSSLOTWRITE    equ      726    ;$FILENAME _hdsslotwrite.src
                             1093 RSRC_FUNCLET__HDSINITSLOTENUM    equ      727    ;$FILENAME _hdsinitslotenum.src
                             1094 RSRC_FUNCLET_DRM_LST_CLOSE    equ      728    ;$FILENAME drm_lst_close.src
                             1095 RSRC_FUNCLET_DRM_LST_ENUMNEXT    equ      729    ;$FILENAME drm_lst_enumnext.src
                             1096 RSRC_FUNCLET_DRM_LST_ENUMDELETE    equ      730    ;$FILENAME drm_lst_enumdelete.src
                             1097 RSRC_FUNCLET__PROCESSEXTENSIONS    equ      731    ;$FILENAME _processextensions.src
                             1098 RSRC_FUNCLET__PROCESSIDLIST    equ      732    ;$FILENAME _processidlist.src
                             1099 RSRC_FUNCLET__PROCESSEXCLUSIONS    equ      733    ;$FILENAME _processexclusions.src
                             1100 RSRC_FUNCLET__PROCESSINCLUSIONS    equ      734    ;$FILENAME _processinclusions.src
                             1101 RSRC_FUNCLET_DRM_OPL_PROCESSCOPYOUTPUTLEVELDATA    equ      735    ;$FILENAME drm_opl_processcopyoutputleveldata.src
                             1102 RSRC_FUNCLET__GETOPLLEVEL    equ      736    ;$FILENAME _getopllevel.src
                             1103 RSRC_FUNCLET_DRM_OPL_PROCESSPLAYOUTPUTLEVELDATA    equ      737    ;$FILENAME drm_opl_processplayoutputleveldata.src
                             1104 RSRC_FUNCLET__UPDATEATTRIBUTETOKENINSLOT    equ      738    ;$FILENAME _updateattributetokeninslot.src
                             1105 RSRC_FUNCLET_DRM_SST_SETTOKENVALUE    equ      739    ;$FILENAME drm_sst_settokenvalue.src
                             1106 RSRC_FUNCLET_DRM_SST_CREATELICENSESTATEPASSWORD    equ      740    ;$FILENAME drm_sst_createlicensestatepassword.src
                             1107 RSRC_FUNCLET_DRM_UTL_PROMOTEANSITOUNICODE    equ      741    ;$FILENAME drm_utl_promoteansitounicode.src
                             1108 RSRC_FUNCLET_DRM_PK_SYMMETRICSIGN    equ      742    ;$FILENAME drm_pk_symmetricsign.src
                             1109 RSRC_FUNCLET_DRM_UTL_GETVERSIONFROMSTRING    equ      743    ;$FILENAME drm_utl_getversionfromstring.src
                             1110 RSRC_FUNCLET_DRM_UTL_STRINGINSERTBLANKSUBSTRING    equ      744    ;$FILENAME drm_utl_stringinsertblanksubstring.src
                             1111 RSRC_FUNCLET_DRM_UTL_STRINGREMOVESUBSTRING    equ      745    ;$FILENAME drm_utl_stringremovesubstring.src
                             1112 RSRC_FUNCLET_DRM_UTL_DSTRSEARCH    equ      746    ;$FILENAME drm_utl_dstrsearch.src
                             1113 RSRC_FUNCLET_DRM_UTL_DSTRSEARCHREVERSE    equ      747    ;$FILENAME drm_utl_dstrsearchreverse.src
                             1114 RSRC_FUNCLET_DRM_UTL_STRINGTOGUID    equ      748    ;$FILENAME drm_utl_stringtoguid.src
                             1115 RSRC_FUNCLET_DRM_UTL_ENSUREDATAALIGNMENT    equ      749    ;$FILENAME drm_utl_ensuredataalignment.src
                             1116 RSRC_FUNCLET_OVERLAPPINGDATES    equ      750    ;$FILENAME overlappingdates.src
                             1117 RSRC_FUNCLET_DRM_ASD_PARSEV2LICENSE    equ      751    ;$FILENAME drm_asd_parsev2license.src
                             1118 RSRC_FUNCLET_NEGINFDATE    equ      752    ;$FILENAME neginfdate.src
                             1119 RSRC_FUNCLET_INFDATE    equ      753    ;$FILENAME infdate.src
                             1120 RSRC_FUNCLET_ISEXPIRED    equ      754    ;$FILENAME isexpired.src
                             1121 RSRC_FUNCLET_GETSECSTATEATTR    equ      755    ;$FILENAME getsecstateattr.src
                             1122 RSRC_FUNCLET_SETEXPIRYCATEGORY    equ      756    ;$FILENAME setexpirycategory.src
                             1123 RSRC_FUNCLET_GETV2LICENSEINFO    equ      757    ;$FILENAME getv2licenseinfo.src
                             1124 RSRC_FUNCLET_GETNEXTLICENSE    equ      758    ;$FILENAME getnextlicense.src
                             1125 RSRC_FUNCLET_AGGREGATE    equ      759    ;$FILENAME aggregate.src
                             1126 RSRC_FUNCLET_DRM_ASD_GETLICENSEAGGREGATEDATA    equ      760    ;$FILENAME drm_asd_getlicenseaggregatedata.src
                             1127 RSRC_FUNCLET__SCANNODEFORATTRIBUTEW    equ      761    ;$FILENAME _scannodeforattributew.src
                             1128 RSRC_FUNCLET__GETXMLNODECDATAW    equ      762    ;$FILENAME _getxmlnodecdataw.src
                             1129 RSRC_FUNCLET_DRM_DDC_GETDEVICECERTIFICATE    equ      763    ;$FILENAME drm_ddc_getdevicecertificate.src
                             1130 RSRC_FUNCLET__CREATEDEVICESTORE    equ      764    ;$FILENAME _createdevicestore.src
                             1131 RSRC_FUNCLET__MAPDRMERROR    equ      765    ;$FILENAME _mapdrmerror.src
                             1132 RSRC_FUNCLET__COMPAREMACHINEID    equ      766    ;$FILENAME _comparemachineid.src
                             1133 RSRC_FUNCLET_INITMGRCONTEXT    equ      767    ;$FILENAME initmgrcontext.src
                             1134 RSRC_FUNCLET_DRM_MGR_SETV2HEADER    equ      768    ;$FILENAME drm_mgr_setv2header.src
                             1135 RSRC_FUNCLET_DRM_MGR_COMMIT    equ      769    ;$FILENAME drm_mgr_commit.src
                             1136 RSRC_FUNCLET_DRM_MGR_CLEANUPLICENSESTORE    equ      770    ;$FILENAME drm_mgr_cleanuplicensestore.src
                             1137 RSRC_FUNCLET_JANUSCLEANDATASTORE    equ      771    ;$FILENAME januscleandatastore.src
                             1138 RSRC_FUNCLET_DRM_MTR_OPENID    equ      772    ;$FILENAME drm_mtr_openid.src
                             1139 RSRC_FUNCLET_DRM_MTR_INCREMENTCOUNT    equ      773    ;$FILENAME drm_mtr_incrementcount.src
                             1140 RSRC_FUNCLET_DRM_MTR_CLOSECONTEXT    equ      774    ;$FILENAME drm_mtr_closecontext.src
                             1141 RSRC_FUNCLET_OEM_SETENDOFFILE    equ      775    ;$FILENAME oem_setendoffile.src
                             1142 RSRC_FUNCLET_OEM_GENRANDOMBYTES    equ      776    ;$FILENAME oem_genrandombytes.src
                             1143 RSRC_FUNCLET_OEM_GETFALLBACKSIGNINGKEY    equ      777    ;$FILENAME oem_getfallbacksigningkey.src
                             1144 RSRC_FUNCLET_OEM_GETDEVICECERTTEMPLATE    equ      778    ;$FILENAME oem_getdevicecerttemplate.src
                             1145 RSRC_FUNCLET_OEM_SETDEVICECERT    equ      779    ;$FILENAME oem_setdevicecert.src
                             1146 RSRC_FUNCLET_OEM_GETCLOCKRESETSTATE    equ      780    ;$FILENAME oem_getclockresetstate.src
                             1147 RSRC_FUNCLET_OEM_SETCLOCKRESETSTATE    equ      781    ;$FILENAME oem_setclockresetstate.src
                             1148 RSRC_FUNCLET_OEM_GETUNIQUEID    equ      782    ;$FILENAME oem_getuniqueid.src
                             1149 RSRC_FUNCLET_OEM_GETDEVICECERT    equ      783    ;$FILENAME oem_getdevicecert.src
                             1150 RSRC_FUNCLET_DRM_SNC_OPENSTORE    equ      784    ;$FILENAME drm_snc_openstore.src
                             1151 RSRC_FUNCLET_DRM_SNC_CLOSESTORE    equ      785    ;$FILENAME drm_snc_closestore.src
                             1152 RSRC_FUNCLET__SETKIDSTOREDATA    equ      786    ;$FILENAME _setkidstoredata.src
                             1153 RSRC_FUNCLET_DRM_SNC_DELETEKID    equ      787    ;$FILENAME drm_snc_deletekid.src
                             1154 RSRC_FUNCLET_DRM_SNC_UPDATEKID    equ      788    ;$FILENAME drm_snc_updatekid.src
                             1155 RSRC_FUNCLET_DRM_MGR_SETV1HEADER    equ      789    ;$FILENAME drm_mgr_setv1header.src
                             1156 RSRC_FUNCLET_FUNCTIONGETVALUE_PART1    equ      790    ;$FILENAME functiongetvalue_part1.src
                             1157 RSRC_FUNCLET_FUNCTIONGETVALUE_FN_DATEDIFF    equ      791    ;$FILENAME functiongetvalue_fn_datediff.src
                             1158 RSRC_FUNCLET__HDSCREATENAMESPACESTORE    equ      792    ;$FILENAME _hdscreatenamespacestore.src
                             1159 RSRC_FUNCLET_DRM_HDS_CREATESTORE2    equ      793    ;$FILENAME drm_hds_createstore2.src
                             1160 RSRC_FUNCLET_DRM_HDS_OPENSTORE2    equ      794    ;$FILENAME drm_hds_openstore2.src
                             1161 RSRC_FUNCLET__HDSPREALLOC    equ      795    ;$FILENAME _hdsprealloc.src
                             1162 RSRC_FUNCLET_OEM_SYSTEMTIMETOFILETIME    equ      796    ;$FILENAME oem_systemtimetofiletime.src
                             1163 RSRC_FUNCLET_OEM_FILETIMETOSYSTEMTIME    equ      797    ;$FILENAME oem_filetimetosystemtime.src
                             1164 RSRC_FUNCLET_GENDEVICECERTIFICATE    equ      798    ;$FILENAME gendevicecertificate.src
                             1165 RSRC_FUNCLET_DRMCRT_MEMMOVE_MEM    equ      799    ;$FILENAME drmcrt_memmove_mem.src
                             1166 RSRC_FUNCLET_COPYHDSDTORE    equ      800    ;$FILENAME copyhdsdtore.src
                             1167 RSRC_FUNCLET_GENERATEDEVICECERT    equ      801    ;$FILENAME generatedevicecert.src
                             1168 RSRC_FUNCLET_OEM_GETDEVICEDATETIME    equ      802    ;$FILENAME oem_getdevicedatetime.src
                             1169 RSRC_FUNCLET_DRM_MTR_UPDATEDATA    equ      803    ;$FILENAME drm_mtr_updatedata.src
                             1170 RSRC_FUNCLET__HDSUPDATESRN    equ      804    ;$FILENAME _hdsupdatesrn.src
                             1171 RSRC_FUNCLET_DRM_B64_DECODEW_INPLACE    equ      805    ;$FILENAME drm_b64_decodew_inplace.src
                             1172 RSRC_FUNCLET__CHECKSECURECLOCK    equ      806    ;$FILENAME _checksecureclock.src
                             1173 RSRC_FUNCLET__PREPARESECURECLOCKDATAFORWRITING    equ      807    ;$FILENAME _preparesecureclockdataforwriting.src
                             1174 RSRC_FUNCLET__PREPARESECURECLOCKDATAFORREADING    equ      808    ;$FILENAME _preparesecureclockdataforreading.src
                             1175 RSRC_FUNCLET_DRM_SST_CLOSELOCKEDSLOT    equ      809    ;$FILENAME drm_sst_closelockedslot.src
                             1176 RSRC_FUNCLET_VARIABLESECURETIMEGETORSET    equ      810    ;$FILENAME variablesecuretimegetorset.src
                             1177 RSRC_FUNCLET_STRTOL     equ      811    ;$FILENAME strtol.src
                             1178 RSRC_FUNCLET_MKTIME     equ      812    ;$FILENAME mktime.src
                             1179 RSRC_FUNCLET_GMTIME     equ      813    ;$FILENAME gmtime.src
                             1180 RSRC_FUNCLET_LOCALTIME    equ      814    ;$FILENAME localtime.src
                             1181 RSRC_FUNCLET__STRUCT_TM_TO_SYSTEMTIME    equ      815    ;$FILENAME _struct_tm_to_systemtime.src
                             1182 RSRC_FUNCLET__SYSTEMTIME_TO_STRUCT_TM    equ      816    ;$FILENAME _systemtime_to_struct_tm.src
                             1183 RSRC_FUNCLET__SYSTEMTIMETOTIME_T    equ      817    ;$FILENAME _systemtimetotime_t.src
                             1184 RSRC_FUNCLET_OEM_SETSYSTEMTIME    equ      818    ;$FILENAME oem_setsystemtime.src
                             1185 RSRC_CONST_PKCRYPTO     equ      819    ;$FILENAME const_pkcrypto.src
                             1186 RSRC_CONST_Y            equ      820    ;$FILENAME const_y.src
                             1187 RSRC_AES_DEC_TABLE      equ      821    ;$FILENAME aes_dec_table.src
                             1188 RSRC_AES_KEY_TABLE      equ      822    ;$FILENAME aes_key_table.src
                             1189 RSRC_AES_ENC_TABLE      equ      823    ;$FILENAME aes_enc_table.src
                             1190 RSRC_DEVCERT            equ      824    ;$FILENAME device_cert.src
                             1191 RSRC_DEVCERT_TEMPLATE    equ      825    ;$FILENAME devcert_template.src
                             1192 RSRC_FUNCLET_GETBASE64DECODEDKEY    equ      826    ;$FILENAME getbase64decodedkey.src
                             1193 RSRC_FUNCLET__INITSLOT    equ      827    ;$FILENAME _initslot.src
                             1194 RSRC_HDSIMPLCOMMON_P    equ      828    ;$FILENAME hdsimplcommon.src
                             1195 RSRC_HDSIMPL_P          equ      829    ;$FILENAME hdsimpl_p.src
                             1198 ;////////////////////////////////////////////////////////////////////////////////
                             1199 ;pkcrypto Related
                             1200 ;////////////////////////////////////////////////////////////////////////////////
                             1201 RSRC_FUNCLET_TWO_ADIC_INVERSE    equ      830    ;$FILENAME two_adic_inverse.src
                             1202 RSRC_FUNCLET_MP_SHIFT    equ      831    ;$FILENAME mp_shift.src
                             1203 RSRC_FUNCLET_MP_SIGNIFICANT_BIT_COUNT    equ      832    ;$FILENAME mp_significant_bit_count.src
                             1204 RSRC_FUNCLET_SET_IMMEDIATE    equ      833    ;$FILENAME set_immediate.src
TASKING DSP2410 assembler v1.5r1 Build 138 SN 00100122
                                                                                                                                                                                                                                                       Page   9

M:ADDR CODE           CYCLES LINE SOURCELINE
                             1205 RSRC_FUNCLET_MULTIPLY_IMMEDIATE    equ      834    ;$FILENAME multiply_immediate.src
                             1206 RSRC_FUNCLET_MULTIPLY    equ      835    ;$FILENAME multiply.src
                             1207 RSRC_FUNCLET_DIVIDE_PRECONDITION_1    equ      836    ;$FILENAME divide_precondition_1.src
                             1208 RSRC_FUNCLET_DIVIDE_IMMEDIATE    equ      837    ;$FILENAME divide_immediate.src
                             1209 RSRC_FUNCLET_ECAFFINE_EXPONENTIATION_TABULAR    equ      838    ;$FILENAME ecaffine_exponentiation_tabular.src
                             1210 RSRC_FUNCLET_ECAFFINE_TABLE_CONSTRUCTION    equ      839    ;$FILENAME ecaffine_table_construction.src
                             1211 RSRC_FUNCLET_ECPROJ5_TO_ECAFFINE    equ      840    ;$FILENAME ecproj5_to_ecaffine.src
                             1212 RSRC_FUNCLET_ECPROJ5_SET_INFINITE    equ      841    ;$FILENAME ecproj5_set_infinite.src
                             1213 RSRC_FUNCLET_ECAFFINE_ON_CURVE    equ      842    ;$FILENAME ecaffine_on_curve.src
                             1214 RSRC_FUNCLET_ECAFFINE_ADDITION    equ      843    ;$FILENAME ecaffine_addition.src
                             1215 RSRC_FUNCLET_ECAFFINE_ADDITION_SUBTRACTION    equ      844    ;$FILENAME ecaffine_addition_subtraction.src
                             1216 RSRC_FUNCLET_ECAFFINE_ATTRIBUTES2    equ      845    ;$FILENAME ecaffine_attributes2.src
                             1217 RSRC_FUNCLET_KFDESC_INITIALIZE    equ      846    ;$FILENAME kfdesc_initialize.src
                             1218 RSRC_FUNCLET_KIMMEDIATE    equ      847    ;$FILENAME kimmediate.src
                             1219 RSRC_FUNCLET_KPRIME_IMMEDIATER    equ      848    ;$FILENAME kprime_immediater.src
                             1220 RSRC_FUNCLET_KPRIME_SQRTER    equ      849    ;$FILENAME kprime_sqrter.src
                             1221 RSRC_FUNCLET_KINITIALIZE_PRIME    equ      850    ;$FILENAME kinitialize_prime.src
                             1222 RSRC_FUNCLET_MOD_LUCASUV    equ      851    ;$FILENAME mod_lucasuv.src
                             1223 RSRC_FUNCLET_MOD_LUCAS    equ      852    ;$FILENAME mod_lucas.src
                             1224 RSRC_FUNCLET_BUCKET_MULTIPLY    equ      853    ;$FILENAME bucket_multiply.src
                             1225 RSRC_FUNCLET_MOD_EXP2000    equ      854    ;$FILENAME mod_exp2000.src
                             1226 RSRC_FUNCLET_MOD_EXP    equ      855    ;$FILENAME mod_exp.src
                             1227 RSRC_FUNCLET_MODMUL_CHOICES1    equ      856    ;$FILENAME modmul_choices1.src
                             1228 RSRC_FUNCLET_MOD_SQRT    equ      857    ;$FILENAME mod_sqrt.src
                             1229 RSRC_FUNCLET_CREATE_MODULUS    equ      858    ;$FILENAME create_modulus.src
                             1230 RSRC_FUNCLET_FROM_MODULAR    equ      859    ;$FILENAME from_modular.src
                             1231 RSRC_FUNCLET_ADD_IMMEDIATE    equ      860    ;$FILENAME add_immediate.src
                             1232 RSRC_FUNCLET_ADD_DIFF    equ      861    ;$FILENAME add_diff.src
                             1233 RSRC_FUNCLET_ADD_FULL    equ      862    ;$FILENAME add_full.src
                             1234 RSRC_FUNCLET_COMPARE_SUM_SAME    equ      863    ;$FILENAME compare_sum_same.src
                             1235 RSRC_FUNCLET_SUB_IMMEDIATE    equ      864    ;$FILENAME sub_immediate.src
                             1236 RSRC_FUNCLET_MP_INITIALIZATION    equ      865    ;$FILENAME mp_initialization.src
                             1237 RSRC_FUNCLET_NEW_RANDOM_BYTES    equ      866    ;$FILENAME new_random_bytes.src
                             1238 RSRC_FUNCLET_NEW_RANDOM_DWORD_INTERVAL    equ      867    ;$FILENAME new_random_dword_interval.src
                             1239 RSRC_FUNCLET_NEW_RANDOM_DIGIT_INTERVAL    equ      868    ;$FILENAME new_random_digit_interval.src
                             1240 RSRC_FUNCLET_NEW_RANDOM_MOD    equ      869    ;$FILENAME new_random_mod.src
                             1241 RSRC_FUNCLET_NEW_RANDOM_MOD_NONZERO    equ      870    ;$FILENAME new_random_mod_nonzero.src
                             1242 RSRC_FUNCLET_NEW_RANDOM_DIGITS    equ      871    ;$FILENAME new_random_digits.src
                             1243 RSRC_FUNCLET_WORDS_TO_ECAFFINE    equ      872    ;$FILENAME words_to_ecaffine.src
                             1244 RSRC_FUNCLET_ECAFFINE_TO_DWORDS    equ      873    ;$FILENAME ecaffine_to_dwords.src
                             1245 RSRC_FUNCLET__THREADUNSAFEPKINIT    equ      874    ;$FILENAME _threadunsafepkinit.src
                             1246 RSRC_FUNCLET_PKINIT     equ      875    ;$FILENAME pkinit.src
                             1247 RSRC_FUNCLET_DRM_PK_GENKEYPAIR    equ      876    ;$FILENAME drm_pk_genkeypair.src
                             1248 RSRC_FUNCLET_DRM_PK_ENCRYPT    equ      877    ;$FILENAME drm_pk_encrypt.src
                             1249 RSRC_FUNCLET_DRM_PK_DECRYPT    equ      878    ;$FILENAME drm_pk_decrypt.src
                             1250 RSRC_FUNCLET_BYTE_ARRAY_MOD_BIGNUM    equ      879    ;$FILENAME byte_array_mod_bignum.src
                             1251 RSRC_FUNCLET_FE2IPMOD    equ      880    ;$FILENAME fe2ipmod.src
                             1252 RSRC_FUNCLET_DRM_PK_SIGN    equ      881    ;$FILENAME drm_pk_sign.src
                             1253 RSRC_FUNCLET_DRM_PK_VERIFY    equ      882    ;$FILENAME drm_pk_verify.src
                             1254 RSRC_FUNCLET_RANDOM_BYTES    equ      883    ;$FILENAME random_bytes.src
                             1255 RSRC_FUNCLET_MP_GCDEX    equ      884    ;$FILENAME mp_gcdex.src
                             1256 RSRC_FUNCLET_MP_GCDEX_SPLIT1    equ      885    ;$FILENAME mp_gcdex_split1.src
                             1257 RSRC_PKCRYPTO_P         equ      886    ;$FILENAME pkcrypto_p.src
                             1258 RSRC_PKCRYPTO_OVL_P     equ      887    ;$FILENAME pkcrypto_ovl_p.src
                             1259 RSRC_WARNING_MSG_ALL_LINE2    equ      888    ;$FILENAME del_all_warning_line2.src
                             1260 RSRC_FILE_DELETE_STAR    equ      889    ;$FILENAME del_all_file_star.src
                             1261 RSRC_STRING_VOICE_MENU_DELETE_ALL    equ      890    ;$FILENAME string_voice_menu_delete_all.src
                             1262 RSRC_FUNCLET_INIT5VSENSE    equ      891    ;$FILENAME Funclet_Init5VSense.src
                             1263 RSRC_FUNCLET_UPDATEDCDCDUTYCYCLE    equ      892    ;$FILENAME Funclet_UpdateDCDCDutyCycle.src
                             1264 RSRC_FUNCLET_CHANGE_PLAYSET    equ      893    ;$FILENAME Funclet_changeplayset.src
                             1266 RSRC_FUNCLET_MMC_TEST_ERASE    equ      894    ;$FILENAME Funclet_mmctesterase.src
                             1267 RSRC_FUNCLET_MMC_HALINIT    equ      895    ;$FILENAME Funclet_mmchalinit.src
                             1270 ; Added to allow rechargeable battery configurations to build
                             1271 RSRC_BATTERY_CHARGING    equ      896    ;$FILENAME battery_charging.src
                             1272 RSRC_BATTERY_CHARGE_CODEBANK    equ      897    ;$FILENAME batterychargecodebank.src
                             1273 RSRC_FUNCLET_SYSUPDATEVOLUME    equ      898    ;$FILENAME updatevolume.src
                             1274 RSRC_FUNCLET_TESTSKIPCHECKDISK    equ      899    ;$FILENAME Funclet_TestSkipCheckDisk.src
                             1275 RSRC_FUNCLET_DISABLE_STMP_GENERATED_MICBIAS    equ      900    ;$FILENAME Funclet_DisableStmpGeneratedMicBias.src
                             1276 RSRC_FUNCLET_ENABLE_STMP_GENERATED_MICBIAS    equ      901    ;$FILENAME Funclet_EnableStmpGeneratedMicBias.src
                             1277 RSRC_FUNCLET_SETSKIPCHECKDISK    equ      902    ;$FILENAME Funclet_SetSkipCheckDisk.src
                             1278 RSRC_FUNCLET_DRM_EXPR_EVALUATEEXPRESSION_NO_MORE_TOKENS    equ      903    ;$FILENAME drm_expr_evaluateexpression_no_more_tokens.src
                             1279 RSRC_FUNCLET__ISCACHEDEVENT    equ      904    ;$FILENAME _iscachedevent.src
                             1280 RSRC_FUNCLET_SETCOUNTEDEXPIRYCATEGORY    equ      905    ;$FILENAME setcountedexpirycategory.src
                             1281 RSRC_OEM_DATA           equ      906    ;$FILENAME oem_data.src
                             1282 RSRC_GPK_P              equ      907    ;$FILENAME gpk_p.src
                             1283 RSRC_KEY_DATA           equ      908    ;$FILENAME key_data.src
                             1284 RSRC_DEFRAGMENT_STORE_STRING    equ      909    ;$FILENAME string_arial_8_defragmenting_store.src
                             1285 RSRC_STRING_WORKING     equ      910    ;$FILENAME string_working.src
                             1286 RSRC_FUNCLET_LOADUSERTIME    equ      911    ;$FILENAME Funclet_loadusertime.src
                             1287 RSRC_FUNCLET_SAVEUSERTIME    equ      912    ;$FILENAME Funclet_saveusertime.src
                             1289 RSRC_FUNCLET_SYSLRADCBROWNOUTINIT    equ      913    ;$FILENAME Funclet_SysLRADCBrownoutInit.src
                             1290 RSRC_FUNCLET_SYSBATTERYGETLEVEL    equ      914    ;$FILENAME Funclet_SysBatteryGetLevel.src
                             1292 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                             1293 ; Audible ACELP Resources
                             1294 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                             1295 RSRC_AUDIBLE_ACELPDEC_CODE    equ      915    ;$FILENAME AudibleAcelpDec.src
                             1296 RSRC_AUDIBLE_ACELP_CODE_P    equ      916    ;$FILENAME AudibleAcelpP.src
                             1297 RSRC_AUDIBLE_ACELP_DATA_X    equ      917    ;$FILENAME AudibleAcelpX.src
                             1298 RSRC_AUDIBLE_ACELP_DATA_Y    equ      918    ;$FILENAME AudibleAcelpY.src
                             1300 RSRC_AUDIBLE_DECMOD_CODE    equ      919    ;$FILENAME AudibleDecMod.src
                             1301 RSRC_AUDIBLE_MP3P_CODE    equ      920    ;$FILENAME audiblemp3p.src
                             1302 RSRC_AUDIBLE_MP3X_CODE    equ      921    ;$FILENAME audiblemp3x.src
                             1303 RSRC_AUDIBLE_MP3Y_CODE    equ      922    ;$FILENAME audiblemp3y.src
                             1305 RSRC_AUDIBLE_METADATA_P    equ      923    ;$FILENAME audiblemetadata_p.src
                             1306 RSRC_AUDIBLE_METADATA_Y    equ      924    ;$FILENAME audiblemetadata_y.src
                             1307 RSRC_AUDIBLE_SONG_POSITION_P    equ      925    ;$FILENAME audiblesongposition_p.src
                             1308 RSRC_AUDIBLE_TARGET_CHECK_P    equ      926    ;$FILENAME audibletargetcheck_p.src
                             1309 RSRC_AUDIBLE_FILLFILEINFO_P    equ      927    ;$FILENAME audiblefillfileinfo_p.src
                             1310 RSRC_AUDIBLE_DSA_P      equ      928    ;$FILENAME audibledsa_p.src
                             1311 RSRC_AUDIBLE_FILLMETADATA_P    equ      929    ;$FILENAME audiblefillmetadata_p.src
                             1312 RSRC_AUDIBLE_METASTRINGS_P    equ      930    ;$FILENAME audiblemetastrings_p.src
                             1313 RSRC_AUDIBLE_ACTIVATION_P    equ      931    ;$FILENAME aaactivationrecords_p.src
                             1315 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                             1316 ; Effects and SRS Resources
                             1317 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                             1318 RSRC_SRS_EFFECTS_MODULES_P    equ      932    ;$FILENAME srs_effectsmodules_p.src
                             1319 RSRC_SRS_EFFECTS_MODULES_X    equ      933    ;$FILENAME srs_effectsmodules_x.src
                             1320 RSRC_WOW_CTRL           equ      934    ;$FILENAME wowctrl.src
                             1322 RSRC_WOW_MENU_CODE_BANK    equ      935    ;$FILENAME wowmenu.src
                             1323 RSRC_STRING_WOW_BRIGHTNESS    equ      936    ;$FILENAME string_wowbrightness_menu.src
                             1324 RSRC_STRING_WOW_MENU    equ      937    ;$FILENAME string_wow_menu.src
                             1325 RSRC_STRING_WOW_TRUBASS    equ      938    ;$FILENAME string_wowtrubass_menu.src
                             1326 RSRC_STRING_WOW_VOLUME    equ      939    ;$FILENAME string_wowvolume_menu.src
                             1327 RSRC_STRING_WOW_BRIGHT_LOW    equ      940    ;$FILENAME string_wowbrightness_low_menu.src
                             1328 RSRC_STRING_WOW_BRIGHT_MID    equ      941    ;$FILENAME string_wowbrightness_mid_menu.src
                             1329 RSRC_STRING_WOW_BRIGHT_HIGH    equ      942    ;$FILENAME string_wowbrightness_high_menu.src
                             1330 RSRC_WOW_ICON           equ      943    ;$FILENAME wow_icon.src
                             1332 RSRC_WOW16K             equ      944    ;$FILENAME wow16k.src
                             1333 RSRC_WOW32K             equ      945    ;$FILENAME wow32k.src
                             1334 RSRC_WOW8K              equ      946    ;$FILENAME wow8k.src
                             1335 RSRC_WOW11K             equ      947    ;$FILENAME wow11k.src
                             1336 RSRC_WOW22K             equ      948    ;$FILENAME wow22k.src
                             1337 RSRC_WOW24K             equ      949    ;$FILENAME wow24k.src
                             1338 RSRC_WOW44K             equ      950    ;$FILENAME wow44k.src
                             1339 RSRC_WOW48K             equ      951    ;$FILENAME wow48k.src
                             1341 RSRC_WOW16K_Y           equ      952    ;$FILENAME wow16k_Y.src
                             1342 RSRC_WOW32K_Y           equ      953    ;$FILENAME wow32k_Y.src
                             1343 RSRC_WOW8K_Y            equ      954    ;$FILENAME wow8k_Y.src
                             1344 RSRC_WOW11K_Y           equ      955    ;$FILENAME wow11k_Y.src
                             1345 RSRC_WOW22K_Y           equ      956    ;$FILENAME wow22k_Y.src
                             1346 RSRC_WOW24K_Y           equ      957    ;$FILENAME wow24k_Y.src
                             1347 RSRC_WOW44K_Y           equ      958    ;$FILENAME wow44k_Y.src
                             1348 RSRC_WOW48K_Y           equ      959    ;$FILENAME wow48k_Y.src
                             1350 ;///////////////////////////////////////////////////////////////////////////////////////////////////
                             1351 ; Audible Section Navigation
                             1352 ;///////////////////////////////////////////////////////////////////////////////////////////////////
                             1353 RSRC_AUDIBLE_SECNAV_ICON    equ      960    ;$FILENAME audible_secnav.src
                             1355 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                             1356 ; PLAYLIST3 and Music Library
                             1357 ;//////////////////////////////////////////////////////////////////////////////////////////////////
                             1359 RSRC_BUILD_ML           equ      961    ;$FILENAME build_ml.src
                             1360 RSRC_BUILD_ML_WARNING    equ      962    ;$FILENAME build_ml_warning.src
                             1361 RSRC_BUILD_ML_WARNING2    equ      963    ;$FILENAME build_ml_warning2.src
                             1362 RSRC_BUILD_FLASH1       equ      964    ;$FILENAME build_flash1.src
                             1363 RSRC_BUILD_FLASH2       equ      965    ;$FILENAME build_flash2.src
                             1364 RSRC_BUILD_FLASH3       equ      966    ;$FILENAME build_flash3.src
                             1365 RSRC_BUILD_SD1          equ      967    ;$FILENAME build_sd1.src
                             1366 RSRC_BUILD_SD2          equ      968    ;$FILENAME build_sd2.src
                             1367 RSRC_BUILD_SD3          equ      969    ;$FILENAME build_sd3.src
                             1368 RSRC_BUILD_NEWMUSIC     equ      970    ;$FILENAME build_newmusic.src
                             1369 RSRC_SDMD_MENU_CODE_BANK    equ      971    ;$FILENAME sdmd.src
                             1370 RSRC_MUSICLIB_BUILD_FUNCTION_SEC    equ      972    ;$FILENAME musiclib_build_function_sec.src
                             1371 RSRC_MUSICLIB_BUILD_FUNCTION_FLUSH    equ      973    ;$FILENAME musiclib_build_function_flush.src
                             1372 RSRC_MUSICLIB_BUILD_MODULE    equ      974    ;$FILENAME MusicLibBuildModule.src
                             1373 RSRC_MUSICLIB_BUILD_GENRE_TABLE    equ      975    ;$FILENAME MusicLibBuildGenreTable.src
                             1374 RSRC_MUSICLIB_BUILD_FLUSH_MEM    equ      976    ;$FILENAME MusicLibBuildFlushMem.src
                             1375 RSRC_MUSICLIB_BROWSE_MODULE    equ      977    ;$FILENAME MusicLibBrowseModule.src
                             1376 RSRC_MUSICLIB_PLAY_MODULE    equ      978    ;$FILENAME MusicLibPlayModule.src
                             1377 RSRC_MUSICLIB_PLAYALLNEXT_MODULE    equ      979    ;$FILENAME MusicLibPlayAllNextModule.src
                             1378 RSRC_MUSICLIB_PLAYALLPREV_MODULE    equ      980    ;$FILENAME MusicLibPlayAllPrevModule.src
                             1379 RSRC_MUSICLIB_SHUFFLE_MODULE    equ      981    ;$FILENAME MusicLibShuffleModule.src
                             1380 RSRC_FUNCLET_WRITE_DETECTION_ACCESS    equ      982    ;$FILENAME Funclet_write_detection_access.src
                             1381 RSRC_FUNCLET_LOCAL_GET_LVL_ONE_ITEM_INFO    equ      983    ;$FILENAME Funclet_LOCAL_GetLvlOneItem_info.src
                             1382 RSRC_FUNCLET_LOCAL_GET_FLASH_ASSOCIATED_LIST_INFO    equ      984    ;$FILENAME Funclet_LOCAL_GetFlashAssociatedList_info.src
                             1383 RSRC_FUNCLET_ML_RESUMEPLAYSTATE    equ      985    ;$FILENAME Funclet_ML_ResumePlayState.src
                             1384 RSRC_FUNCLET_ML_UPDATE_ON_THE_GO    equ      986    ;$FILENAME Funclet_ML_UpdateOnTheGo.src
                             1385 RSRC_FUNCLET_ML_CH_ON_THE_GO    equ      987    ;$FILENAME Funclet_ML_ChOnTheGo.src
                             1386 RSRC_FUNCLET_ML_LOAD_ON_THE_GO    equ      988    ;$FILENAME Funclet_ML_LoadOnTheGo.src
                             1387 RSRC_FUNCLET_BUILD_INIT_AND_USE_CACHE    equ      989    ;$FILENAME Funclet_Build_InitandUseCache.src
                             1388 RSRC_FUNCLET_BUILD_FLUSH_AND_CLOSE_CACHE    equ      990    ;$FILENAME Funclet_Build_FlushAndCloseCache.src
                             1389 RSRC_FUNCLET_ML_MOVE_POINTER_BACKWARD    equ      991    ;$FILENAME Funclet_ML_movePointerBackward.src
                             1390 RSRC_FUNCLET_ML_FIND_LAST_ITEM_POINTER    equ      992    ;$FILENAME Funclet_ML_findLastItemPointer.src
                             1391 RSRC_FUNCLET_ML_START_SHUFFLE    equ      993    ;$FILENAME Funclet_ML_startShuffle.src
                             1392 RSRC_FUNCLET_ML_GET_FLASH_DIR_ASSOC_LIST_ID    equ      994    ;$FILENAME Funclet_ML_GetFlashDirAssocListId.src
                             1393 RSRC_FUNCLET_ML_GET_FLASH_DIR_ASSOC_LIST_ROOT_ID    equ      995    ;$FILENAME Funclet_ML_GetFlashDirAssocListRootId.src
                             1394 RSRC_FUNCLET_ML_GET_FLASH_DIR_ASSOC_LIST_SIZE    equ      996    ;$FILENAME Funclet_ML_GetFlashDirAssocListSize.src
                             1395 RSRC_FUNCLET_ML_GET_ID_BY_STATE_AND_POSITION    equ      997    ;$FILENAME Funclet_ML_GetIdByStateAndPosition.src
                             1396 RSRC_FUNCLET_ML_START_PLAY_DIR_SONG_INIT    equ      998    ;$FILENAME Funclet_ML_StartPlayDirSongInit.src
                             1397 RSRC_FUNCLET_ML_SHUFFLE_NEXT_DIR_SONG    equ      999    ;$FILENAME Funclet_ML_ShuffleNextDirSong.src
                             1398 RSRC_FUNCLET_ML_BROWSE_MENU    equ     1000    ;$FILENAME Funclet_ML_BrowseMenu.src
                             1399 RSRC_FUNCLET_ML_START_PLAY_ALL_SONG    equ     1001    ;$FILENAME Funclet_ML_StartPlayAllSong.src
                             1400 RSRC_FUNCLET_ML_PLAY_ALL_NEXT_SONG    equ     1002    ;$FILENAME Funclet_ML_PlayAllNextSong.src
                             1401 RSRC_FUNCLET_ML_PLAY_ALL_PREVIOUS_SONG    equ     1003    ;$FILENAME Funclet_ML_PlayAllPreviousSong.src
                             1402 RSRC_FUNCLET_ML_PLAY_PREVIOUS_DIR_SONG    equ     1004    ;$FILENAME Funclet_ML_PlayPreviousDirSong.src
                             1403 RSRC_FUNCLET_ML_SHUFFLE_NEXT_SONG    equ     1005    ;$FILENAME Funclet_ML_ShuffleNextSong.src
                             1404 RSRC_FUNCLET_ML_PLAY_NEXT_SONG    equ     1006    ;$FILENAME Funclet_ML_PlayNextSong.src
                             1405 RSRC_FUNCLET_ML_PLAY_PREVIOUS_SONG    equ     1007    ;$FILENAME Funclet_ML_PlayPreviousSong.src
                             1406 RSRC_FUNCLET_BUILDVOICEFILEPATH    equ     1008    ;$FILENAME Funclet_BuildVoiceFilePath.src
                             1407 RSRC_FUNCLET_BUILDFMFILEPATH    equ     1009    ;$FILENAME Funclet_BuildFMFilePath.src
                             1408 RSRC_FUNCLET_BUILDLINEINFILEPATH    equ     1010    ;$FILENAME Funclet_BuildLINEINFilePath.src
                             1409 RSRC_FUNCLET_GETVOICEFASTKEY    equ     1011    ;$FILENAME Funclet_GetVoiceFastKey.src
                             1410 RSRC_MUSICLIB_VOICE_APP    equ     1012    ;$FILENAME MusicLibVoiceApp.src
                             1411 RSRC_MUSICLIB_VOICE_MODULE    equ     1013    ;$FILENAME MusicLibVoiceModule.src
                             1412 RSRC_MUSICLIB_VOICEPLAY_MODULE    equ     1014    ;$FILENAME MusicLibVoicePlayModule.src
                             1413 RSRC_MUSICLIB_MERGE_FUNCTION    equ     1015    ;$FILENAME MusicLibMergeFunction.src
                             1414 RSRC_MUSICLIB_MERGE_MODULE    equ     1016    ;$FILENAME MusicLibMergeModule.src
                             1415 RSRC_MUSICLIB_BROWSE_APP    equ     1017    ;$FILENAME MusicLibBrowseApp.src
                             1416 RSRC_PLAYMUSIC_MENU_CODE_BANK    equ     1018    ;$FILENAME playmusicmenu.src
                             1417 RSRC_BROWSE_MENU_CODE_BANK    equ     1019    ;$FILENAME browsemenu.src
                             1418 RSRC_BROWSE_MENU_EXTRA_CODE_BANK    equ     1020    ;$FILENAME browsemenu_extra.src
                             1419 RSRC_STRING_PLAY_ALL    equ     1021    ;$FILENAME string_play_all.src
                             1420 RSRC_STRING_PLAY        equ     1022    ;$FILENAME string_play.src
                             1421 RSRC_STRING_UNKNOWN_YEAR    equ     1023    ;$FILENAME string_unknown_year.src
                             1422 RSRC_STRING_YEAR_WIDTH    equ     1024    ;$FILENAME string_year_width.src
                             1423 RSRC_STRING_ARTIST      equ     1025    ;$FILENAME string_artist.src
                             1424 RSRC_STRING_SONGS       equ     1026    ;$FILENAME string_songs.src
                             1425 RSRC_STRING_ON_THE_FLY    equ     1027    ;$FILENAME string_on_the_fly.src
                             1426 RSRC_STRING_NEW_MUSIC_MENU    equ     1028    ;$FILENAME string_new_music.src
                             1427 RSRC_STRING_GENRE       equ     1029    ;$FILENAME string_genre.src
                             1428 RSRC_STRING_YEAR        equ     1030    ;$FILENAME string_year.src
                             1429 RSRC_STRING_PLAYLIST    equ     1031    ;$FILENAME string_playlist.src
                             1430 RSRC_STRING_FM_REC      equ     1032    ;$FILENAME string_fm_rec.src
                             1431 RSRC_STRING_LINEIN_REC    equ     1033    ;$FILENAME string_linein_rec.src
                             1432 RSRC_STRING_PLAY_MUSIC    equ     1034    ;$FILENAME string_play_music.src
                             1433 RSRC_HIGHLIGHT_BACK     equ     1035    ;$FILENAME highlight_back.src
                             1434 RSRC_NEW_MUSIC_MENU_CODE_BANK    equ     1036    ;$FILENAME newmusicmenu.src
                             1435 RSRC_STRING_1_DAY       equ     1037    ;$FILENAME string_1_day.src
                             1436 RSRC_STRING_1_WEEK      equ     1038    ;$FILENAME string_1_week.src
                             1437 RSRC_STRING_1_MONTH     equ     1039    ;$FILENAME string_1_month.src
                             1438 RSRC_LIST_FULL_MESSAGE    equ     1040    ;$FILENAME on_the_fly_full.src
                             1439 RSRC_LIST_FREE_MESSAGE    equ     1041    ;$FILENAME on_the_fly_free1.src
                             1440 RSRC_LIST_FREE_MESSAGE2    equ     1042    ;$FILENAME on_the_fly_free2.src
                             1441 RSRC_LIST_DELETE_MESSAGE    equ     1043    ;$FILENAME on_the_fly_delete1.src
                             1442 RSRC_LIST_DELETE_MESSAGE2    equ     1044    ;$FILENAME on_the_fly_delete2.src
                             1443 RSRC_EMPTY_FAVOURITE    equ     1045    ;$FILENAME empty_favourite.src
                             1444 RSRC_SD_REMOVE          equ     1046    ;$FILENAME sd_remove.src
                             1445 RSRC_SD_INSERT          equ     1047    ;$FILENAME sd_insert.src
                             1446 RSRC_CHECK_DISK_1       equ     1048    ;$FILENAME check_disk_1.src
                             1447 RSRC_CHECK_DISK_2       equ     1049    ;$FILENAME check_disk_2.src
                             1448 RSRC_CHECK_DISK_3       equ     1050    ;$FILENAME check_disk_3.src
                             1449 RSRC_FLASH_ERROR        equ     1051    ;$FILENAME flash_error.src
                             1451 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             1452 ; STFM1000 Tuner funclet
                             1453 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             1454 RSRC_FUNCLET_TUNER_DRIVER_INIT    equ     1052    ;$FILENAME Funclet_TunerDriverInit.src
                             1455 RSRC_FUNCLET_TUNER_DRIVER_INC_UP    equ     1053    ;$FILENAME Funclet_TunerDriverIncUp.src
                             1456 RSRC_FUNCLET_TUNER_DRIVER_INC_DOWN    equ     1054    ;$FILENAME Funclet_TunerDriverIncDown.src
                             1457 RSRC_FUNCLET_TUNER_DRIVER_SET_STANDBY    equ     1055    ;$FILENAME Funclet_TunerDriverStandyby.src
                             1458 RSRC_FUNCLET_TUNER_DRIVER_REPLACE_PRESET    equ     1056    ;$FILENAME Funclet_TunerDriverReplacePreset.src
                             1459 RSRC_FUNCLET_TUNER_DRIVER_ERASE_PRESET    equ     1057    ;$FILENAME Funclet_TunerDriverErasePreset.src
                             1460 RSRC_FUNCLET_TUNER_DRIVER_TUNE_TO_PRESET    equ     1058    ;$FILENAME Funclet_TunerDriverTuneToPreset.src
                             1461 RSRC_FUNCLET_TUNER_DRIVER_SEARCH_DOWN    equ     1059    ;$FILENAME Funclet_TunerDriverSearchDown.src
                             1462 RSRC_FUNCLET_TUNER_SAFE_POWER_DOWN    equ     1060    ;$FILENAME Funclet_TunerSTFM1000SafePowerDown.src
                             1463 RSRC_FUNCLET_STFM1000_TUNER_OPTIMIZE_CHANNEL    equ     1061    ;$FILENAME Funclet_TunerSTFM1000OptimizeChannel.src
                             1464 RSRC_DEC_STFM_MOD_CODE    equ     1062    ;$FILENAME decstfmmod.src
                             1465 RSRC_DEC_STFMP_CODE     equ     1063    ;$FILENAME dec_stfmp.src
                             1466 RSRC_DEC_STFMX_CODE     equ     1064    ;$FILENAME dec_stfmx.src
                             1467 RSRC_DEC_STFMY_CODE     equ     1065    ;$FILENAME dec_stfmy.src
                             1468 RSRC_FUNCLET_STFM1000_I2C_INIT    equ     1066    ;$FILENAME Funclet_TunerSTFM1000I2CInit.src
                             1469 RSRC_FUNCLET_TUNER_DRIVER_SCAN_STATION    equ     1067    ;$FILENAME Funclet_TunerDriverScanStations.src
                             1470 RSRC_FUNCLET_TUNER_DRIVER_SET_MONO_STEREO_MODE    equ     1068    ;$FILENAME Funclet_TunerDriverSetMonoStereoMode.src
TASKING DSP2410 assembler v1.5r1 Build 138 SN 00100122
                                                                                                                                                                                                                                                       Page  10

M:ADDR CODE           CYCLES LINE SOURCELINE
                             1471 RSRC_FUNCLET_STFM1000_TEST_PRESENCE    equ     1069    ;$FILENAME Funclet_STFM1000TestPresence.src
                             1472 RSRC_FUNCLET_I2C_WRITE_TUNER_REGISTER    equ     1070    ;$FILENAME Funclet_I2CWriteTunerRegister.src
                             1473 RSRC_FUNCLET_I2C_RESET    equ     1071    ;$FILENAME Funclet_I2CReset.src
                             1474 RSRC_FM_TUNER_SECOND_RSRC    equ     1072    ;$FILENAME fmtunersecondrsrc.src
                             1475 RSRC_FUNCLET_STFM1000_REG_POWER_UP1    equ     1073    ;$FILENAME Funclet_TunerSTFM1000RegPowerUp1.src
                             1476 RSRC_FUNCLET_STFM1000_REG_POWER_UP2    equ     1074    ;$FILENAME Funclet_TunerSTFM1000RegPowerUp2.src
                             1477 RSRC_FUNCLET_STFM1000_FIND_RSSI_THRESHOLD    equ     1075    ;$FILENAME Funclet_TunerSTFM1000FindRssiThreshold.src
                             1478 RSRC_FUNCLET_STFM1000_DATA_PATH_OFF    equ     1076    ;$FILENAME Funclet_TunerSTFM1000DataPathOff.src
                             1479 RSRC_FUNCLET_STFM1000_CONTINUE_SEARCHING    equ     1077    ;$FILENAME Funclet_TunerSTFM1000ContinueSearching.src
                             1480 ;RSRC_FUNCLET_STFM1000_SET_LNA_BIAS    equ      975    ;$FILENAME Funclet_STFM1000SetLnaBias.src
                             1481 ;RSRC_FUNCLET_STFM1000_LOOK_FOR_PILOT    equ      976    ;$FILENAME Funclet_STFM1000LookForPilot.src
                             1482 RSRC_FUNCLET_STFM1000_TUNER_SEARCH_ENDED    equ     1078    ;$FILENAME Funclet_STFM1000TunerSearchEnded.src
                             1483 ; for RestoreDriveFromBackup
                             1484 RSRC_RESTORESYSDRIVE_P_CODE    equ     1079    ;$FILENAME restoresysdrive.src
                             1486 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             1487 ; Playlist5 sources
                             1488 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             1489 RSRC_PL5BROWSE_MENU_CODEBANK    equ     1080    ;$FILENAME playlist5_browsemenu.src
                             1490 RSRC_PL5_BROWSEMENU_EXTRA    equ     1081    ;$FILENAME playlist5_browsemenu_extra.src
                             1491 RSRC_PL5BROWSE_SUBMENU_CODEBANK    equ     1082    ;$FILENAME playlist5_browse_submenu.src
                             1492 RSRC_PLAYLIST5_PLAYBACK_MODULE    equ     1083    ;$FILENAME playlist5_playback_module.src
                             1493 RSRC_PLAYLIST5_BROWSE_MODULE    equ     1084    ;$FILENAME playlist5_browse_module.src
                             1495 RSRC_FUNCLET_GET_LRC_DIR_NAME_PL5    equ     1085    ;$FILENAME Funclet_Get_LRCDirName_PL5.src
                             1496 RSRC_FUNCLET_PL5_PL_QUEUEPUSHBACK    equ     1086    ;$FILENAME Funclet_PL5_PL_QueuePushBack.src   
                             1497 RSRC_FUNCLET_PL5_PL_QUEUEPUSHFRONT    equ     1087    ;$FILENAME Funclet_PL5_PL_QueuePushFront.src 
                             1499 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             1500 ; DanhNguyen added bitmaps
                             1501 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                             1502 RSRC_ICON_FOLDER        equ     1088    ;$FILENAME icon_folder.src
                             1503 RSRC_ICON_SONG          equ     1089    ;$FILENAME icon_song.src
                             1505 RSRC_MENU_MUSIC         equ     1090    ;$FILENAME menu_music.src
                             1506 RSRC_VIE_MENU_MUSIC     equ     1091    ;$FILENAME vie_menu_music.src
                             1508 RSRC_MENU_VOICE         equ     1092    ;$FILENAME menu_voice.src
                             1509 RSRC_VIE_MENU_VOICE     equ     1093    ;$FILENAME vie_menu_voice.src
                             1511 RSRC_MENU_FMTUNER       equ     1094    ;$FILENAME menu_fmtuner.src
                             1512 RSRC_VIE_MENU_FMTUNER    equ     1095    ;$FILENAME vie_menu_fmtuner.src
                             1514 RSRC_MENU_RECORD        equ     1096    ;$FILENAME menu_record.src
                             1515 RSRC_VIE_MENU_RECORD    equ     1097    ;$FILENAME vie_menu_record.src
                             1517 RSRC_MENU_SETTINGS      equ     1098    ;$FILENAME menu_settings.src
                             1518 RSRC_VIE_MENU_SETTINGS    equ     1099    ;$FILENAME vie_menu_settings.src
                             1520 RSRC_MENU_SHUTDOWN      equ     1100    ;$FILENAME menu_shutdown.src
                             1521 RSRC_VIE_MENU_SHUTDOWN    equ     1101    ;$FILENAME vie_menu_shutdown.src
                             1523 RSRC_MENU_CLOCK         equ     1102    ;$FILENAME menu_clock.src
                             1524 RSRC_VIE_MENU_CLOCK     equ     1103    ;$FILENAME vie_menu_clock.src
                             1526 RSRC_MENU_AB            equ     1104    ;$FILENAME menu_ab.src
                             1527 RSRC_VIE_MENU_AB        equ     1105    ;$FILENAME vie_menu_ab.src
                             1529 RSRC_MENU_DELETE        equ     1106    ;$FILENAME menu_delete.src
                             1530 RSRC_VIE_MENU_DELETE    equ     1107    ;$FILENAME vie_menu_delete.src
                             1532 RSRC_MENU_ABOUT         equ     1108    ;$FILENAME menu_about.src
                             1533 RSRC_VIE_MENU_ABOUT     equ     1109    ;$FILENAME vie_menu_about.src
                             1535 RSRC_MENU_EXIT          equ     1110    ;$FILENAME menu_exit.src
                             1536 RSRC_VIE_MENU_EXIT      equ     1111    ;$FILENAME vie_menu_exit.src
                             1538 RSRC_MUSIC_PLAY_ALL     equ     1112    ;$FILENAME music_play_all.src
                             1539 RSRC_VIE_MUSIC_PLAY_ALL    equ     1113    ;$FILENAME vie_music_play_all.src
                             1541 RSRC_MUSIC_FOLDER_INTERNAL    equ     1114    ;$FILENAME music_folder_internal.src
                             1542 RSRC_VIE_MUSIC_FOLDER_INTERNAL    equ     1115    ;$FILENAME vie_music_folder_internal.src
                             1544 RSRC_MUSIC_FOLDER_EXTERNAL    equ     1116    ;$FILENAME music_folder_external.src
                             1545 RSRC_VIE_MUSIC_FOLDER_EXTERNAL    equ     1117    ;$FILENAME vie_music_folder_external.src
                             1547 RSRC_MUSIC_SONGS        equ     1118    ;$FILENAME music_songs.src
                             1548 RSRC_VIE_MUSIC_SONGS    equ     1119    ;$FILENAME vie_music_songs.src
                             1550 RSRC_MUSIC_FAVORITES    equ     1120    ;$FILENAME music_favorites.src
                             1551 RSRC_VIE_MUSIC_FAVORITES    equ     1121    ;$FILENAME vie_music_favorites.src
                             1553 RSRC_MUSIC_FM_RECORD    equ     1122    ;$FILENAME music_fm_record.src
                             1554 RSRC_VIE_MUSIC_FM_RECORD    equ     1123    ;$FILENAME vie_music_fm_record.src
                             1556 RSRC_MUSIC_EXIT         equ     1124    ;$FILENAME music_exit.src
                             1557 RSRC_VIE_MUSIC_EXIT     equ     1125    ;$FILENAME vie_music_exit.src
                             1559 RSRC_BROWSE_MUSIC_FOLDER_INTERNAL    equ     1126    ;$FILENAME browse_music_folder_internal.src
                             1560 RSRC_VIE_BROWSE_MUSIC_FOLDER_INTERNAL    equ     1127    ;$FILENAME vie_browse_music_folder_internal.src
                             1562 RSRC_BROWSE_MUSIC_FOLDER_EXTERNAL    equ     1128    ;$FILENAME browse_music_folder_external.src
                             1563 RSRC_VIE_BROWSE_MUSIC_FOLDER_EXTERNAL    equ     1129    ;$FILENAME vie_browse_music_folder_external.src
                             1565 RSRC_BROWSE_MUSIC_LIST_SONGS    equ     1130    ;$FILENAME browse_music_list_songs.src
                             1566 RSRC_VIE_BROWSE_MUSIC_LIST_SONGS    equ     1131    ;$FILENAME vie_browse_music_list_songs.src
                             1568 RSRC_BROWSE_MUSIC_FAVOURITES    equ     1132    ;$FILENAME browse_music_favourites.src
                             1569 RSRC_VIE_BROWSE_MUSIC_FAVOURITES    equ     1133    ;$FILENAME vie_browse_music_favourites.src
                             1571 RSRC_BROWSE_MUSIC_FM_FILES    equ     1134    ;$FILENAME browse_music_fm_files.src
                             1572 RSRC_VIE_BROWSE_MUSIC_FM_FILES    equ     1135    ;$FILENAME vie_browse_music_fm_files.src
                             1574 RSRC_BROWSE_VOICE       equ     1136    ;$FILENAME browse_voice.src
                             1575 RSRC_VIE_BROWSE_VOICE    equ     1137    ;$FILENAME vie_browse_voice.src
                             1577 RSRC_FAVOURITES_LIST_ADD    equ     1138    ;$FILENAME favourites_list_add.src
                             1578 RSRC_VIE_FAVOURITES_LIST_ADD    equ     1139    ;$FILENAME vie_favourites_list_add.src
                             1580 RSRC_FAVOURITES_LIST_REMOVE    equ     1140    ;$FILENAME favourites_list_remove.src
                             1581 RSRC_VIE_FAVOURITES_LIST_REMOVE    equ     1141    ;$FILENAME vie_favourites_list_remove.src
                             1583 RSRC_FAVOURITES_LIST_IS_FULL    equ     1142    ;$FILENAME favourites_list_is_full.src
                             1584 RSRC_VIE_FAVOURITES_LIST_IS_FULL    equ     1143    ;$FILENAME vie_favourites_list_is_full.src
                             1586 RSRC_ABOUT_SCREEN_1     equ     1144    ;$FILENAME about_screen_1.src
                             1587 RSRC_VIE_ABOUT_SCREEN_1    equ     1145    ;$FILENAME vie_about_screen_1.src
                             1589 RSRC_ABOUT_SCREEN_2     equ     1146    ;$FILENAME about_screen_2.src
                             1590 RSRC_VIE_ABOUT_SCREEN_2    equ     1147    ;$FILENAME vie_about_screen_2.src
                             1592 RSRC_ABOUT_SCREEN_3     equ     1148    ;$FILENAME about_screen_3.src
                             1593 RSRC_VIE_ABOUT_SCREEN_3    equ     1149    ;$FILENAME vie_about_screen_3.src
                             1595 RSRC_ABOUT_SCREEN_4     equ     1150    ;$FILENAME about_screen_4.src
                             1596 RSRC_VIE_ABOUT_SCREEN_4    equ     1151    ;$FILENAME vie_about_screen_4.src
                             1598 RSRC_TIME_DATE_EXIT_TITLE    equ     1152    ;$FILENAME time_date_exit_title.src
                             1599 RSRC_VIE_TIME_DATE_EXIT_TITLE    equ     1153    ;$FILENAME vie_time_date_exit_title.src
                             1601 RSRC_TIME_CLEAN_DESKTOP    equ     1154    ;$FILENAME time_clean_desktop.src
                             1602 RSRC_TIME_DASH          equ     1155    ;$FILENAME time_dash.src
                             1604 RSRC_TIME_DAY_SAT       equ     1156    ;$FILENAME time_day_7.src
                             1605 RSRC_VIE_TIME_DAY_SAT    equ     1157    ;$FILENAME vie_time_day_7.src
                             1606 RSRC_TIME_DAY_SUN       equ     1158    ;$FILENAME time_day_cn.src
                             1607 RSRC_VIE_TIME_DAY_SUN    equ     1159    ;$FILENAME vie_time_day_cn.src
                             1608 RSRC_TIME_DAY_MON       equ     1160    ;$FILENAME time_day_2.src
                             1609 RSRC_VIE_TIME_DAY_MON    equ     1161    ;$FILENAME vie_time_day_2.src
                             1610 RSRC_TIME_DAY_TUE       equ     1162    ;$FILENAME time_day_3.src
                             1611 RSRC_VIE_TIME_DAY_TUE    equ     1163    ;$FILENAME vie_time_day_3.src
                             1612 RSRC_TIME_DAY_WED       equ     1164    ;$FILENAME time_day_4.src
                             1613 RSRC_VIE_TIME_DAY_WED    equ     1165    ;$FILENAME vie_time_day_4.src
                             1614 RSRC_TIME_DAY_THU       equ     1166    ;$FILENAME time_day_5.src
                             1615 RSRC_VIE_TIME_DAY_THU    equ     1167    ;$FILENAME vie_time_day_5.src
                             1616 RSRC_TIME_DAY_FRI       equ     1168    ;$FILENAME time_day_6.src
                             1617 RSRC_VIE_TIME_DAY_FRI    equ     1169    ;$FILENAME vie_time_day_6.src
                             1619 RSRC_TIME_MONTH_1       equ     1170    ;$FILENAME time_month_1.src
                             1620 RSRC_VIE_TIME_MONTH_1    equ     1171    ;$FILENAME vie_time_month_1.src
                             1621 RSRC_TIME_MONTH_2       equ     1172    ;$FILENAME time_month_2.src
                             1622 RSRC_VIE_TIME_MONTH_2    equ     1173    ;$FILENAME vie_time_month_2.src
                             1623 RSRC_TIME_MONTH_3       equ     1174    ;$FILENAME time_month_3.src
                             1624 RSRC_VIE_TIME_MONTH_3    equ     1175    ;$FILENAME vie_time_month_3.src
                             1625 RSRC_TIME_MONTH_4       equ     1176    ;$FILENAME time_month_4.src
                             1626 RSRC_VIE_TIME_MONTH_4    equ     1177    ;$FILENAME vie_time_month_4.src
                             1627 RSRC_TIME_MONTH_5       equ     1178    ;$FILENAME time_month_5.src
                             1628 RSRC_VIE_TIME_MONTH_5    equ     1179    ;$FILENAME vie_time_month_5.src
                             1629 RSRC_TIME_MONTH_6       equ     1180    ;$FILENAME time_month_6.src
                             1630 RSRC_VIE_TIME_MONTH_6    equ     1181    ;$FILENAME vie_time_month_6.src
                             1631 RSRC_TIME_MONTH_7       equ     1182    ;$FILENAME time_month_7.src
                             1632 RSRC_VIE_TIME_MONTH_7    equ     1183    ;$FILENAME vie_time_month_7.src
                             1633 RSRC_TIME_MONTH_8       equ     1184    ;$FILENAME time_month_8.src
                             1634 RSRC_VIE_TIME_MONTH_8    equ     1185    ;$FILENAME vie_time_month_8.src
                             1635 RSRC_TIME_MONTH_9       equ     1186    ;$FILENAME time_month_9.src
                             1636 RSRC_VIE_TIME_MONTH_9    equ     1187    ;$FILENAME vie_time_month_9.src
                             1637 RSRC_TIME_MONTH_10      equ     1188    ;$FILENAME time_month_10.src
                             1638 RSRC_VIE_TIME_MONTH_10    equ     1189    ;$FILENAME vie_time_month_10.src
                             1639 RSRC_TIME_MONTH_11      equ     1190    ;$FILENAME time_month_11.src
                             1640 RSRC_VIE_TIME_MONTH_11    equ     1191    ;$FILENAME vie_time_month_11.src
                             1641 RSRC_TIME_MONTH_12      equ     1192    ;$FILENAME time_month_12.src
                             1642 RSRC_VIE_TIME_MONTH_12    equ     1193    ;$FILENAME vie_time_month_12.src
                             1644 RSRC_TIME_NUM_AM        equ     1194    ;$FILENAME time_num_am.src
                             1645 RSRC_TIME_NUM_PM        equ     1195    ;$FILENAME time_num_am.src
                             1646 RSRC_SETTIME_FORMAT_12H    equ     1196    ;$FILENAME settime_format_12h.src
                             1647 RSRC_SETTIME_FORMAT_24H    equ     1197    ;$FILENAME settime_format_24h.src
                             1648 RSRC_SETDATE_FORMAT_DMY    equ     1198    ;$FILENAME setdate_format_dmy.src
                             1649 RSRC_SETDATE_FORMAT_MDY    equ     1199    ;$FILENAME setdate_format_mdy.src
                             1650 RSRC_SETDATE_FORMAT_YMD    equ     1200    ;$FILENAME setdate_format_ymd.src
                             1652 RSRC_TIME_NUM_LARGE_0    equ     1201    ;$FILENAME time_num_large_0.src
                             1653 RSRC_TIME_NUM_LARGE_1    equ     1202    ;$FILENAME time_num_large_1.src
                             1654 RSRC_TIME_NUM_LARGE_2    equ     1203    ;$FILENAME time_num_large_2.src
                             1655 RSRC_TIME_NUM_LARGE_3    equ     1204    ;$FILENAME time_num_large_3.src
                             1656 RSRC_TIME_NUM_LARGE_4    equ     1205    ;$FILENAME time_num_large_4.src
                             1657 RSRC_TIME_NUM_LARGE_5    equ     1206    ;$FILENAME time_num_large_5.src
                             1658 RSRC_TIME_NUM_LARGE_6    equ     1207    ;$FILENAME time_num_large_6.src
                             1659 RSRC_TIME_NUM_LARGE_7    equ     1208    ;$FILENAME time_num_large_7.src
                             1660 RSRC_TIME_NUM_LARGE_8    equ     1209    ;$FILENAME time_num_large_8.src
                             1661 RSRC_TIME_NUM_LARGE_9    equ     1210    ;$FILENAME time_num_large_9.src
                             1663 RSRC_TIME_NUM_MEDIUM_0    equ     1211    ;$FILENAME time_num_medium_0.src
                             1664 RSRC_TIME_NUM_MEDIUM_1    equ     1212    ;$FILENAME time_num_medium_1.src
                             1665 RSRC_TIME_NUM_MEDIUM_2    equ     1213    ;$FILENAME time_num_medium_2.src
                             1666 RSRC_TIME_NUM_MEDIUM_3    equ     1214    ;$FILENAME time_num_medium_3.src
                             1667 RSRC_TIME_NUM_MEDIUM_4    equ     1215    ;$FILENAME time_num_medium_4.src
                             1668 RSRC_TIME_NUM_MEDIUM_5    equ     1216    ;$FILENAME time_num_medium_5.src
                             1669 RSRC_TIME_NUM_MEDIUM_6    equ     1217    ;$FILENAME time_num_medium_6.src
                             1670 RSRC_TIME_NUM_MEDIUM_7    equ     1218    ;$FILENAME time_num_medium_7.src
                             1671 RSRC_TIME_NUM_MEDIUM_8    equ     1219    ;$FILENAME time_num_medium_8.src
                             1672 RSRC_TIME_NUM_MEDIUM_9    equ     1220    ;$FILENAME time_num_medium_9.src
                             1674 RSRC_TIME_COLON         equ     1221    ;$FILENAME time_colon.src
                             1676 RSRC_SETTINGS_BACKLIGHT_TITLE    equ     1222    ;$FILENAME settings_backlight_title.src
                             1677 RSRC_SETTINGS_AUTO_SHUTDOWN_TITLE    equ     1223    ;$FILENAME settings_auto_shutdown_title.src
                             1678 RSRC_SETTINGS_PLAYMODE_TITLE    equ     1224    ;$FILENAME settings_playmode_title.src
                             1680 RSRC_SETTINGS_CONTRAST_TITLE    equ     1225    ;$FILENAME settings_contrast_title.src
                             1681 RSRC_VIE_SETTINGS_CONTRAST_TITLE    equ     1226    ;$FILENAME vie_settings_contrast_title.src
                             1683 RSRC_SETTINGS_EQ_TITLE    equ     1227    ;$FILENAME settings_eq_title.src
                             1684 RSRC_VIE_SETTINGS_EQ_TITLE    equ     1228    ;$FILENAME vie_settings_eq_title.src
                             1686 RSRC_SETTINGS_EXIT_TITLE    equ     1229    ;$FILENAME settings_exit_title.src
                             1687 RSRC_VIE_SETTINGS_EXIT_TITLE    equ     1230    ;$FILENAME vie_settings_exit_title.src
                             1689 RSRC_SETTINGS_SET_DATE_TITLE    equ     1231    ;$FILENAME settings_set_date_title.src
                             1690 RSRC_VIE_SETTINGS_SET_DATE_TITLE    equ     1232    ;$FILENAME vie_settings_set_date_title.src
                             1692 RSRC_SETTINGS_SET_TIME_TITLE    equ     1233    ;$FILENAME settings_set_time_title.src
                             1693 RSRC_VIE_SETTINGS_SET_TIME_TITLE    equ     1234    ;$FILENAME vie_settings_set_time_title.src
                             1695 RSRC_SETTINGS_PLAYMODE_NORMAL    equ     1235    ;$FILENAME settings_playmode_normal.src
                             1696 RSRC_VIE_SETTINGS_PLAYMODE_NORMAL    equ     1236    ;$FILENAME vie_settings_playmode_normal.src
                             1698 RSRC_SETTINGS_PLAYMODE_REPEATONE    equ     1237    ;$FILENAME settings_playmode_repeatone.src
                             1699 RSRC_VIE_SETTINGS_PLAYMODE_REPEATONE    equ     1238    ;$FILENAME vie_settings_playmode_repeatone.src
                             1701 RSRC_SETTINGS_PLAYMODE_REPEATALL    equ     1239    ;$FILENAME settings_playmode_repeatall.src
                             1702 RSRC_VIE_SETTINGS_PLAYMODE_REPEATALL    equ     1240    ;$FILENAME vie_settings_playmode_repeatall.src
                             1704 RSRC_SETTINGS_PLAYMODE_SHUFFLE    equ     1241    ;$FILENAME settings_playmode_shuffle.src
                             1705 RSRC_VIE_SETTINGS_PLAYMODE_SHUFFLE    equ     1242    ;$FILENAME vie_settings_playmode_shuffle.src
                             1707 RSRC_SETTINGS_PLAYMODE_SHUFFLE_REPEAT    equ     1243    ;$FILENAME settings_playmode_shuffle_repeat.src
                             1708 RSRC_VIE_SETTINGS_PLAYMODE_SHUFFLE_REPEAT    equ     1244    ;$FILENAME vie_settings_playmode_shuffle_repeat.src
                             1710 RSRC_SETTINGS_BACKLIGHT_ON    equ     1245    ;$FILENAME settings_backlight_on.src
                             1711 RSRC_VIE_SETTINGS_BACKLIGHT_ON    equ     1246    ;$FILENAME vie_settings_backlight_on.src
                             1713 RSRC_SETTINGS_BACKLIGHT_10S    equ     1247    ;$FILENAME settings_backlight_10s.src
                             1714 RSRC_VIE_SETTINGS_BACKLIGHT_10S    equ     1248    ;$FILENAME vie_settings_backlight_10s.src
                             1716 RSRC_SETTINGS_BACKLIGHT_20S    equ     1249    ;$FILENAME settings_backlight_20s.src
                             1717 RSRC_VIE_SETTINGS_BACKLIGHT_20s    equ     1250    ;$FILENAME vie_settings_backlight_20s.src
                             1719 RSRC_SETTINGS_BACKLIGHT_30S    equ     1251    ;$FILENAME settings_backlight_30s.src
                             1720 RSRC_VIE_SETTINGS_BACKLIGHT_30S    equ     1252    ;$FILENAME vie_settings_backlight_30s.src
                             1722 RSRC_SETTINGS_AUTO_SHUTDOWN_DISABLE    equ     1253    ;$FILENAME settings_auto_shutdown_disable.src
                             1723 RSRC_VIE_SETTINGS_AUTO_SHUTDOWN_DISABLE    equ     1254    ;$FILENAME vie_settings_auto_shutdown_disable.src
                             1725 RSRC_SETTINGS_AUTO_SHUTDOWN_1MINUTE    equ     1255    ;$FILENAME settings_auto_shutdown_1minute.src
                             1726 RSRC_VIE_SETTINGS_AUTO_SHUTDOWN_1MINUTE    equ     1256    ;$FILENAME vie_settings_auto_shutdown_1min.src
                             1728 RSRC_SETTINGS_AUTO_SHUTDOWN_2MINUTES    equ     1257    ;$FILENAME settings_auto_shutdown_2minutes.src
                             1729 RSRC_VIE_SETTINGS_AUTO_SHUTDOWN_2MINUTES    equ     1258    ;$FILENAME vie_settings_auto_shutdown_2min.src
                             1731 RSRC_SETTINGS_AUTO_SHUTDOWN_5MINUTES    equ     1259    ;$FILENAME settings_auto_shutdown_5minutes.src
                             1732 RSRC_VIE_SETTINGS_AUTO_SHUTDOWN_5MINUTES    equ     1260    ;$FILENAME vie_settings_auto_shutdown_5min.src
                             1734 RSRC_SETTINGS_AUTO_SHUTDOWN_10MINUTES    equ     1261    ;$FILENAME settings_auto_shutdown_10minutes.src
                             1735 RSRC_VIE_SETTINGS_AUTO_SHUTDOWN_10MINUTES    equ     1262    ;$FILENAME vie_settings_auto_shutdown_10min.src
                             1737 RSRC_SETTINGS_LANGUAGES_ENG    equ     1263    ;$FILENAME settings_languages_eng.src
                             1738 RSRC_SETTINGS_LANGUAGES_VIE    equ     1264    ;$FILENAME settings_languages_vie.src
                             1740 RSRC_FRACTION_DOT       equ     1265    ;$FILENAME fraction_dot.src
                             1742 RSRC_FM_BACKGROUND      equ     1266    ;$FILENAME fm_background.src
                             1743 RSRC_VIE_FM_BACKGROUND    equ     1267    ;$FILENAME vie_fm_background.src
                             1745 RSRC_SEARCHING_PLEASE_WAIT    equ     1268    ;$FILENAME searching_please_wait.src
                             1746 RSRC_VIE_SEARCHING_PLEASE_WAIT    equ     1269    ;$FILENAME vie_searching_please_wait.src
                             1748 RSRC_FM_AUTO_SEARCH     equ     1270    ;$FILENAME fm_auto_search.src
                             1749 RSRC_VIE_FM_AUTO_SEARCH    equ     1271    ;$FILENAME vie_fm_auto_search.src
                             1751 RSRC_JVJ_SHUTDOWN_PLAYER    equ     1272    ;$FILENAME jvj_shutdown_player.src
                             1752 RSRC_VIE_JVJ_SHUTDOWN_PLAYER    equ     1273    ;$FILENAME vie_jvj_shutdown_player.src
                               17     include "sysresources.inc"
                                1 ;///////////////////////////////////////////////////////////////////////////////
                                2 ; Copyright(C) SigmaTel, Inc. 2000
                                3 ;
                                4 ; System Resource stuff
                                5 ;///////////////////////////////////////////////////////////////////////////////
                                8 SYSRESOURCES_INC equ 1
                               10 ;///////////////////////////////////////////////////////////////////////////////
                               11 ; Resource Structs
                               12 ;///////////////////////////////////////////////////////////////////////////////
                               14 ; Standard resource header
                               15 RSRC_HEADER_SIZE                equ     3
                               16 RSRC_HEADER_RESOURCE_NUMBER     equ     0
                               17 RSRC_HEADER_BYTE_COUNT          equ     1
                               18 RSRC_HEADER_RESOURCE_TYPE       equ     2
                               20 ; Button resource
                               21 RSRC_BUTTON_NUM_MSGS            equ     0
                               22 RSRC_BUTTON_START_MSGS          equ     RSRC_BUTTON_NUM_MSGS+1
                               24 ; Button timing resource
                               25 RSRC_BUTTON_TIMING_SIZE         equ     2
                               26 RSRC_BUTTON_TIMING_START        equ     0
                               27 RSRC_BUTTON_TIMING_DEBOUNCE     equ     0
                               28 RSRC_BUTTON_TIMING_HOLD         equ     RSRC_BUTTON_TIMING_DEBOUNCE+1
                               30 ; ButtonPhysicalMap resource
                               31 RSRC_BUTTON_PHYS_MAP_NUM_ROWS   equ     0
                               32 RSRC_BUTTON_PHYS_MAP_OFF_ROWS   equ     RSRC_BUTTON_PHYS_MAP_NUM_ROWS+1
                               33 RSRC_BUTTON_PHYS_MAP_NUM_COLS   equ     RSRC_BUTTON_PHYS_MAP_OFF_ROWS+1
                               34 RSRC_BUTTON_PHYS_MAP_OFF_COLS   equ     RSRC_BUTTON_PHYS_MAP_NUM_COLS+1
                               35 RSRC_BUTTON_PHYS_MAP_OFF_BNUM   equ     RSRC_BUTTON_PHYS_MAP_OFF_COLS+1
                               36 RSRC_BUTTON_PHYS_MAP_NUM_NSBS   equ     RSRC_BUTTON_PHYS_MAP_OFF_BNUM+1
                               37 RSRC_BUTTON_PHYS_MAP_OFF_NSBS   equ     RSRC_BUTTON_PHYS_MAP_NUM_NSBS+1
                               38 RSRC_BUTTON_PHYS_MAP_OFF_NSBN   equ     RSRC_BUTTON_PHYS_MAP_OFF_NSBS+1
                               39 RSRC_BUTTON_PHYS_MAP_HOLD_SPT   equ     RSRC_BUTTON_PHYS_MAP_OFF_NSBN+1
                               40 RSRC_BUTTON_PHYS_MAP_HOLD_MASK  equ     RSRC_BUTTON_PHYS_MAP_HOLD_SPT+1
                               42 ; ButtonEventMap resource
                               43 RSRC_BUTTON_EVENT_MAP_NUM_EVNT  equ     0
                               45 ; Timer resource
TASKING DSP2410 assembler v1.5r1 Build 138 SN 00100122
                                                                                                                                                                                                                                                       Page  11

M:ADDR CODE           CYCLES LINE SOURCELINE
                               46 RSRC_TIMER_SIZE                 equ     5
                               47 RSRC_TIMER_START                equ     0
                               48 RSRC_TIMER_NUMBER               equ     0
                               49 RSRC_TIMER_COUNT_VALUE          equ     RSRC_TIMER_NUMBER+1
                               50 RSRC_TIMER_CONTROL_VALUE        equ     RSRC_TIMER_COUNT_VALUE+1
                               51 RSRC_TIMER_CONTROL_REG          equ     RSRC_TIMER_CONTROL_VALUE+1
                               52 RSRC_TIMER_COUNT_REG            equ     RSRC_TIMER_CONTROL_REG+1
                               54 ; Interrupt resource
                               55 RSRC_INTERRUPT_SIZE                     equ     12
                               56 RSRC_INTERRUPT_START                    equ     0
                               57 RSRC_INTERRUPT_ICL_EN                   equ     0
                               58 RSRC_INTERRUPT_ICL_EN_MASK              equ     RSRC_INTERRUPT_ICL_EN+1
                               59 RSRC_INTERRUPT_ICL_PRIOR                equ     RSRC_INTERRUPT_ICL_EN_MASK+1
                               60 RSRC_INTERRUPT_ICL_PRIOR_MASK           equ     RSRC_INTERRUPT_ICL_PRIOR+1
                               61 RSRC_INTERRUPT_ICL_PRIOR_CLEAR_MASK     equ     RSRC_INTERRUPT_ICL_PRIOR_MASK+1
                               62 RSRC_INTERRUPT_ICL_STEER                equ     RSRC_INTERRUPT_ICL_PRIOR_CLEAR_MASK+1
                               63 RSRC_INTERRUPT_ICL_STEER_MASK           equ     RSRC_INTERRUPT_ICL_STEER+1
                               64 RSRC_INTERRUPT_ICL_STEER_CLEAR_MASK     equ     RSRC_INTERRUPT_ICL_STEER_MASK+1
                               65 RSRC_INTERRUPT_ICL_STATUS               equ     RSRC_INTERRUPT_ICL_STEER_CLEAR_MASK+1
                               66 RSRC_INTERRUPT_ICL_STATUS_MASK          equ     RSRC_INTERRUPT_ICL_STATUS+1
                               67 RSRC_INTERRUPT_VECTOR_ADDRESS           equ     RSRC_INTERRUPT_ICL_STATUS_MASK+1
                               68 RSRC_INTERRUPT_ISR_ADDRESS              equ     RSRC_INTERRUPT_VECTOR_ADDRESS+1
                               71 ;///////////////////////////////////////////////////////////////////////////////
                               72 ; Resource Types
                               73 ;///////////////////////////////////////////////////////////////////////////////
                               74 RSRC_TYPE_NULL                  equ     $000000
                               75 RSRC_TYPE_STRING                equ     $000001
                               76 RSRC_TYPE_DATA                  equ     $000002
                               77 RSRC_TYPE_BITMAP                equ     $000003
                               78 RSRC_TYPE_BUTTON                equ     $000004
                               79 RSRC_TYPE_BUTTON_TIMING         equ     $000005
                               80 RSRC_TYPE_TIMER                 equ     $000006
                               81 RSRC_TYPE_INTERRUPT             equ     $000007
                               82 RSRC_TYPE_SYSTEM_INTERRUPT      equ     $000008
                               83 RSRC_TYPE_NESTED_RESOURCE       equ     $000009
                               85 ;///////////////////////////////////////////////////////////////////////////////
                               86 ; Pre-defined resources
                               87 ;///////////////////////////////////////////////////////////////////////////////
                               88 RSRC_NULL                       equ     $000000     ; RSRC_TYPE_NULL
                               18     include "sysequ.inc"
                                1 ;///////////////////////////////////////////////////////////////////////////////
                                2 ; Copyright(C) SigmaTel, Inc. 2000
                                3 ;
                                4 ; System defs
                                5 ;///////////////////////////////////////////////////////////////////////////////
                                8 SYSEQU_INC equ 1
                               10 SOFTTIMER_CONTINUOUS_EVENT equ  0
                               13 HOLD_BUTTON_REPORTED_BITMASK  equ  4
                               16 ; Decoder types
                               17 DECODER_TYPE_MP3        equ     0
                               18 DECODER_TYPE_WMA        equ     1
                               19 DECODER_TYPE_AAC        equ     2
                               20 DECODER_TYPE_ADPCM_IMA  equ     3
                               21 DECODER_TYPE_ADPCM_MS   equ     4
                               22 DECODER_TYPE_PCM        equ     5
                               23 DECODER_TYPE_STFM       equ     6
                               25 ; Encoder types
                               26 ENCODER_TYPE_ADPCM_IMA  equ     0
                               27 ENCODER_TYPE_PCM        equ     1
                               28 ENCODER_TYPE_MP3        equ     2
                               30 ; EncoderSR/EncoderCSR bit equates.  Also uses Stop & Play below.
                               31 EncNotEnoughSpace       equ     0
                               32 EncRanOutOfSpace        equ     1
                               33 EncRecordError          equ     2
                               34 EncToldToStop           equ     3
                               35 EncAlreadyRecording  equ     4
                               36 ; ENCODER_STOPPED       equ     6   ; As RecorderStateMachine.h
                               37 EncWarnLowSpace         equ     7
                               38 EncWarningSent          equ     8
                               39 ; ENCODER_RECORDING     equ     12
                               41 ; DecoderSR/DecoderCSR bit equates
                               42 DecoderIgnoreMessages  equ     0   ;  This bit is set when the decoder sends a message to the parser and is 
                               43                                     ;  waiting for a response.
                               44 VBRFlag              equ     1
                               45 RepeatSong           equ     2
                               46 RepeatAll            equ     3
                               47 Random               equ     4
                               48 Pause                equ     5
                               49 Stop                 equ     6
                               50 Rwnd                 equ     7
                               51 Ffwd                 equ     8
                               52 TimeMode             equ     9
                               53 DecSync              equ     10    ; set when Fstatus_o = 1 for mp3 
                               54 Play                 equ     12
                               55 EndOfSong            equ     13    ; starting with sdk2.105: changed to set when decoder done instead of when file reads done 
                               56 EndOfList            equ     14
                               57 SongInfo             equ     15
                               58 FileIsOpen           equ     16    ; set when a song file is currently opened by the decoder
                               59 SkipBlockHeader      equ     17    ; used by parser
                               60 ABMode_A             equ     18
                               61 ABMode_B             equ     19
                               62 ABQuiet              equ     20
                               63 BadFile              equ     21    ; set if bad file encountered
                               64 SyncWait             equ     22    ; mp3 decoder looking for sync
                               65 FileReadError        equ     23    ; error reading file, duh
                               67 ; DecoderCSR2 bit equates
                               68 EndOfFileReached         equ     0  ;Set when EOF reached, prevent freads beyond EOF 
                               69 TimeNeedsUpdate      equ     1  ; Set when need to allow LCD to update time
                               72 ; ParserVoiceCSR bits (specific to voice files)
                               73 RepeatOneFile        equ     0     ; repeat playing current file
                               74 RepeatAllFiles       equ     1     ; continuously loop through files
                               75 LoopOnce             equ     2     ; start at current file, play all files, then stop
                               77 ; DecAdpcmFlags bits (used by ADPCM decoders)
                               78 WaveHeaderFound      equ     0       ; Set to '1' when header unpacked, cleared during StopCurrentSong
                               85     
                               86 ; Scratch area stuff
                               88 SCRATCH_USER_Y_SIZE             equ 512
                               89 SCRATCH_USER_X_SIZE             equ 256
                              100 SCRATCH_USER_X_SIZE_BYTES   equ     SCRATCH_USER_X_SIZE*3
                              101 SCRATCH_USER_X_MODULO       equ     SCRATCH_USER_X_SIZE-1
                              102 SCRATCH_USER_Y_SIZE_BYTES   equ     SCRATCH_USER_Y_SIZE*3
                              103 SCRATCH_USER_Y_MODULO       equ     SCRATCH_USER_Y_SIZE-1
                              105 ; Boot ROM execute location
                              106 BootExecuteCommand      equ     $012B
                              108 BOOT_USB            equ     $000002
                              109 BOOT_SMARTMEDIA     equ     $000004
                              110 BOOT_COMPACTFLASH   equ     $000005
                              111 BOOT_I2C_SLAVE      equ     $000009
                              112 BOOT_I2C_MASTER     equ     $00000A
                              113 BOOT_SPI_SLAVE      equ     $00000B
                              114 BOOT_SPI_MASTER     equ     $00000C
                              115 BOOT_HOSTPORT       equ     $00000D
                              116 BOOT_BURNIN         equ     $00000F
                              118 ; Numerical constants
                              119 ;PI              equ     3.141592654
                              121 ; Buffer Descriptor offsets
                              122 BD_BufferBaseAddress    equ   0
                              123 BD_BufferModulo         equ   1
                              124 BD_BufferSize           equ   2
                              125 BD_HdPtr                equ   3
                              126 BD_TailPtr              equ   4
                              128 ; Size of a buffer descriptor
                              129 BUFF_DESC_SIZE          equ   5
                              131 ; Mp3 Song Table Descriptor Offsets
                              132 MST_ELEMENT_COUNT       equ   7        ; number of elements for each song
                              133 MST_CARD_NUMBER         equ   0
                              134 MST_ADDR_LOW            equ   1
                              135 MST_ADDR_HIGH           equ   2
                              136 MST_BYTES_LOW           equ   3
                              137 MST_BYTES_HIGH          equ   4
                              138 MST_SAMPLE_RATE         equ   5
                              139 MST_SONG_TYPE           equ   6
                              141 ; Data Format Descriptor offsets
                              142 DF_NumChannels          equ   0
                              143 DF_SampleRate           equ   1
                              144 DF_BitsPerSample        equ   2
                              147 ; Timer Descriptor Offset
                              148 TD_TimerNumber          equ   0
                              149 TD_ControlValue         equ   1
                              150 TD_CountValue           equ   2
                              151 TD_ControlRegister      equ   3
                              152 TD_CountRegister        equ   4
                              155 ; File IO defines
                              156 FileInPort              equ   $8000
                              157 FileOutPort             equ   $8001
                              158 OnceInPort              equ   $8000
                              159 OnceOutPort             equ   $8001
                              160 SmFakeInPort            equ   $8002
                              161 SmFakeOutPort           equ   $8003
                              162 UsbFakeInPort           equ   $8004
                              163 UsbFakeOutPort          equ   $8005
                              165 ; Target memory stuff
                              166 TARGET_MEM_MASK     equ     $F00000
                              167 TARGET_MEM_X        equ     $800000
                              168 TARGET_MEM_Y        equ     $400000
                              169 TARGET_MEM_L        equ     $200000
                              170 TARGET_MEM_P        equ     $100000
                              172 TARGET_MEM_X_BITPOS equ     23
                              173 TARGET_MEM_Y_BITPOS equ     22
                              174 TARGET_MEM_L_BITPOS equ     21
                              175 TARGET_MEM_P_BITPOS equ     20
                              178 ; File System Stuff
                              179 MaxDirCount         equ     13         ; assume 3 deep max with 8.3 format (38 bytes inc. /'s)
                              181 ; Error Codes
                              182 ;       Value           Error
                              183 ;       --------------------------------------------
                              184 ;       $000000         Reserved - no error
                              185 ;       $000001         SmartMedia Bad Programming Error
                              186 ;       $000002         SmartMedia Read Timeout
                              187 ;       $000003         USB PLL Lock Timeout
                              188 ;       $000010         GetNumSongs returned an error
                              189 ;       $000011         fopen failed to open file number (in x:TrackNum)
                              190 ;       $000012         fread failed when attempting to read page
                              191 ;       $000013         fread failed to read correct number of bytes
                              192 NO_ERROR                    equ     $000000
                              193 ERROR_PLL_LOCK_TIMEOUT      equ     $000001
                              195 ERROR_SM_BADP               equ     $000100
                              196 ERROR_SM_TIMEOUT            equ     $000101
                              197 ERROR_SM_INVALID_BLOCK      equ     $000102
                              198 ERROR_SM_INVALID_DATA       equ     $000103
                              199 ERROR_SM_ECC                equ     $000104
                              200 ERROR_SM_BLOCK_ERASE_FAILED equ     $000105
                              201 ERROR_SM_CARD_NOT_FOUND     equ     $000106
                              202 ERROR_SM_BUSY_TIMEOUT       equ     $000107
                              203 ERROR_SM_WRITE_FAILED       equ     $000108
                              204 ERROR_SM_DEVICE_ID          equ     $000109
                              206 ERROR_NUM_SONGS             equ     $000200
                              207 ERROR_FOPEN_FILENUM         equ     $000201
                              208 ERROR_FREAD_PAGE            equ     $000202
                              209 ERROR_FREAD_BYTE_COUNT      equ     $000203
                              210 ERROR_CREATING_VOICE_DIR    equ     $000204 
                              212 ERROR_USB_DISCONNECTED      equ     $000300
                              214 ERROR_DECODER_PLAYING       equ     $000400
                              215 ERROR_DECODER_SETPOS        equ     $000401             ; Attempted to set position past the end of file
                              217 ; PLL defs
                              218 ; According to Mike May, the PLL takes about 200us to stabalize, worst-case.
                              219 ;   PLL lock delay is $000000001388 = 5000. We're always using the xtal at
                              220 ;   24.576MHz, so this delay is 5000/(24.576MHz) = 203.5us.  We'll do this 5000
                              221 ;   times for a total of 1.017s.
                              222 PLL_LOCK_DELAY_HIGH     equ   $000000
                              223 PLL_LOCK_DELAY_LOW      equ   $001388
                              224 PLL_TIMEOUT             equ   $001388
                              226 ; Generic wait defs
                              227 WAIT_10_MS      equ     245760/2
                              229 ;Those equates are used in the DCC/USBMSC
                              230 ;Low battery detection bit
                              231 LOW_BATTERY_DETECTED_BITPOS     equ 0
                               20 ;************************************************************************
                               21 ;       Extern Variables
                               22 ;************************************************************************
                               31 ;************************************************************************
                               32 ;       Global Variables
                               33 ;************************************************************************
P:0000                         36     org p,"LoadEncoderCommon_P":
                               38 ;************************************************************************
                               39 ;  Code start
                               40 ;************************************************************************
                               42    
                               44        ;If using funclet, function will be executed via funclet kernel
                               45        CallFunclet2 RSRC_FUNCLET_LOADENCODERCOMMON
P:0000 0D0082         4    4   45     jsr       $82
P:0001 00027D                  45     DC       RSRC_FUNCLET_LOADENCODERCOMMON  ; 1 word
                               46    
P:0000                         47        org p,"SYSFUNCLET_LoadEncoderCommon_P":
                               48        
P:0000 00027D                  49        dc      RSRC_FUNCLET_LOADENCODERCOMMON           ; Funclet Resource number
                               52 ;////////////////////////////////////////////////////////////////////////
                               53 ;   Name:           LoadEncoderCommon
                               54 ;   Type:           Funclet
                               55 ;   Description:    
                               56 ;   Inputs:         
                               57 ;   Output:         
                               58 ;   Return Value:   
                               59 ;   Registers Trashed : 
                               60 ;   Notes:          
                               61 ;////////////////////////////////////////////////////////////////////////
                               63 LoadEncoderCommon
                               64 ;;;    error ;;; debug only
                               65     ; Load the Adc Driver into P memory
P:0001 44F400 00027A  3    3   66     move    #>RSRC_ENCODERCOMMON_P_CODE,x0                     ; Resource number
P:0003 45F400 000002  3    6   67     move    #>RSRC_TYPE_DATA,x1                         ; Resource type is data
TASKING DSP2410 assembler v1.5r1 Build 138 SN 00100122
                                                                                                                                                                                                                                                       Page  12

M:ADDR CODE           CYCLES LINE SOURCELINE
P:0005 47F400 rrrrrr  3    9   68     move    #>(F_lc_u_e_EncoderCommon_P-F_lc_u_b_EncoderCommon_P)*3,y1      ; Size of the overlay area
P:0007 46F400 rrrrrr  3   12   69     move    #>F_lc_u_b_EncoderCommon_P,y0                         ; Address of the overlay area
P:0009 54F400 100000  3   15   70     move    #TARGET_MEM_P,a1                            ; Overlay area is in P memory
P:000B 0BF080 rrrrrr  6   21   71     jsr     SysLoadResource
                               73     ; Load the Adc Driver into X memory
P:000D 44F400 00027B  3   24   74     move    #>RSRC_ADC_ADCX_CODE,x0                     ; Resource number
P:000F 45F400 000002  3   27   75     move    #>RSRC_TYPE_DATA,x1                         ; Resource type is data
P:0011 47F400 rrrrrr  3   30   76     move    #>(F_lc_e_AdcmemX-F_lc_b_AdcmemX)*3,y1      ; Size of the overlay area
P:0013 46F400 rrrrrr  3   33   77     move    #>F_lc_b_AdcmemX,y0                         ; Address of the overlay area
P:0015 54F400 800000  3   36   78     move    #TARGET_MEM_X,a1                            ; Overlay area is in X memory
P:0017 0BF080 rrrrrr  6   42   79     jsr     SysLoadResource
                               81     ; Load the Adc Driver into Y memory
P:0019 44F400 00027C  3   45   82     move    #>RSRC_ADC_ADCY_CODE,x0                     ; Resource number
P:001B 45F400 000002  3   48   83     move    #>RSRC_TYPE_DATA,x1                         ; Resource type is data
P:001D 47F400 rrrrrr  3   51   84     move    #>(F_lc_e_AdcmemY-F_lc_b_AdcmemY)*3,y1      ; Size of the overlay area
P:001F 46F400 rrrrrr  3   54   85     move    #>F_lc_b_AdcmemY,y0                         ; Address of the overlay area
P:0021 54F400 400000  3   57   86     move    #TARGET_MEM_Y,a1                            ; Overlay area is in Y memory
P:0023 0BF080 rrrrrr  6   63   87     jsr     SysLoadResource
P:0025 00000C         4   67   89     rts
                               90     
                               93     ;If using funclet, switch counter back to original here
P:0002                         94     org    p,"LoadEncoderCommon_P":
                               97     
                               98     endsec
                               99     
