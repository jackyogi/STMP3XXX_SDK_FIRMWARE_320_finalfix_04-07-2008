#if !(defined(regslradcinc))

#define regslradcinc 1

#include "types.h"
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

//   SYSTEM STMP Registers 
//  Last Edited 6.26.2003 M. Henson
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

#define HW_LRADC_BASEADDR (0xFA20)



/////////////////////////////////////////////////////////////////////////////////
//  Battery LRADC Control Register (HW_BATT_CTRL) Bit Definitions
#define HW_BATT_CTRL_INPUT_OFFSET_WIDTH (7)
#define HW_BATT_CTRL_RSVD0_WIDTH (1)
#define HW_BATT_CTRL_HALF_CMP_PWR_WIDTH (1)
#define HW_BATT_CTRL_INPUT_DIV2_WIDTH (1)
#define HW_BATT_CTRL_CLEAR_WIDTH (1)
#define HW_BATT_CTRL_PWD_WIDTH (1)
#define HW_BATT_CTRL_CLK_DIV_WIDTH (2)
#define HW_BATT_CTRL_RSVD1_WIDTH (2)
#define HW_BATT_CTRL_REF_VAL_WIDTH (2)
#define HW_BATT_CTRL_RSVD2_WIDTH (2)
#define HW_BATT_CTRL_IRQ_EN_EVENT0_WIDTH (1)
#define HW_BATT_CTRL_IRQ_EN_EVENT1_WIDTH (1)
#define HW_BATT_CTRL_POLARITY_EVENT0_WIDTH (1)
#define HW_BATT_CTRL_POLARITY_EVENT1_WIDTH (1)

#define HW_BATT_CTRL_INPUT_OFFSET_BITPOS (0)
#define HW_BATT_CTRL_HALF_CMP_PWR_BITPOS (8)
#define HW_BATT_CTRL_INPUT_DIV2_BITPOS (9)
#define HW_BATT_CTRL_CLEAR_BITPOS (10)
#define HW_BATT_CTRL_PWD_BITPOS (11)
#define HW_BATT_CTRL_CLK_DIV_BITPOS (12)
#define HW_BATT_CTRL_REF_VAL_BITPOS (16)

#define HW_BATT_CTRL_INPUT_OFFSET_SETMASK (((1<<HW_BATT_CTRL_INPUT_OFFSET_WIDTH)-1)<<HW_BATT_CTRL_INPUT_OFFSET_BITPOS)        
#define HW_BATT_CTRL_HALF_CMP_PWR_SETMASK (((1<<HW_BATT_CTRL_HALF_CMP_PWR_WIDTH)-1)<<HW_BATT_CTRL_HALF_CMP_PWR_BITPOS)        
#define HW_BATT_CTRL_INPUT_DIV2_SETMASK (((1<<HW_BATT_CTRL_INPUT_DIV2_WIDTH)-1)<<HW_BATT_CTRL_INPUT_DIV2_BITPOS) 
#define HW_BATT_CTRL_CLEAR_SETMASK (((1<<HW_BATT_CTRL_CLEAR_WIDTH)-1)<<HW_BATT_CTRL_CLEAR_BITPOS) 
#define HW_BATT_CTRL_PWD_SETMASK (((1<<HW_BATT_CTRL_PWD_WIDTH)-1)<<HW_BATT_CTRL_PWD_BITPOS) 
#define HW_BATT_CTRL_CLK_DIV_SETMASK (((1<<HW_BATT_CTRL_CLK_DIV_WIDTH)-1)<<HW_BATT_CTRL_CLK_DIV_BITPOS)        
#define HW_BATT_CTRL_REF_VAL_SETMASK (((1<<HW_BATT_CTRL_REF_VAL_WIDTH)-1)<<HW_BATT_CTRL_REF_VAL_BITPOS)        

#define HW_BATT_CTRL_INPUT_OFFSET_CLRMASK (~(WORD)HW_BATT_CTRL_INPUT_OFFSET_SETMASK)     
#define HW_BATT_CTRL_HALF_CMP_PWR_CLRMASK (~(WORD)HW_BATT_CTRL_HALF_CMP_PWR_SETMASK)     
#define HW_BATT_CTRL_INPUT_DIV2_CLRMASK (~(WORD)HW_BATT_CTRL_INPUT_DIV2_SETMASK) 
#define HW_BATT_CTRL_CLEAR_CLRMASK (~(WORD)HW_BATT_CTRL_CLEAR_SETMASK) 
#define HW_BATT_CTRL_PWD_CLRMASK (~(WORD)HW_BATT_CTRL_PWD_SETMASK) 
#define HW_BATT_CTRL_CLK_DIV_CLRMASK (~(WORD)HW_BATT_CTRL_CLK_DIV_SETMASK)     
#define HW_BATT_CTRL_REF_VAL_CLRMASK (~(WORD)HW_BATT_CTRL_REF_VAL_SETMASK)

typedef union               
{
    struct {
        unsigned int INPUT_OFFSET                 : HW_BATT_CTRL_INPUT_OFFSET_WIDTH;
        unsigned int RSVD0                        : HW_BATT_CTRL_RSVD0_WIDTH;
        unsigned int HALF_CMP_PWR                 : HW_BATT_CTRL_HALF_CMP_PWR_WIDTH;
        unsigned int INPUT_DIV2                   : HW_BATT_CTRL_INPUT_DIV2_WIDTH;
        unsigned int CLEAR                        : HW_BATT_CTRL_CLEAR_WIDTH;
        unsigned int PWD                          : HW_BATT_CTRL_PWD_WIDTH;
        unsigned int CLK_DIV                      : HW_BATT_CTRL_CLK_DIV_WIDTH;
        unsigned int RSVD1                        : HW_BATT_CTRL_RSVD1_WIDTH;
        unsigned int REF_VAL                      : HW_BATT_CTRL_REF_VAL_WIDTH;
        unsigned int RSVD2                        : HW_BATT_CTRL_RSVD2_WIDTH;
		 unsigned int IRQ_EN_EVENT0				  : HW_BATT_CTRL_IRQ_EN_EVENT0_WIDTH;
		 unsigned int IRQ_EN_EVENT1				  : HW_BATT_CTRL_IRQ_EN_EVENT1_WIDTH;
	     unsigned int POLARITY_EVENT0              : HW_BATT_CTRL_POLARITY_EVENT0_WIDTH;
		 unsigned int POLARITY_EVENT1              : HW_BATT_CTRL_POLARITY_EVENT1_WIDTH;
    } B;
   unsigned int I;
	unsigned int U;
} lradc_ctrl_type;
#define HW_BATT_CTRL      (*(volatile lradc_ctrl_type _X*) (HW_LRADC_BASEADDR))    /* Battery LRADC Control Register */


/////////////////////////////////////////////////////////////////////////////////
//  Battery LRADC Threshold Register (HW_BATT_THRSH) Bit Definitions
#define HW_BATT_THRSH_THRESHOLD_EVENT0_WIDTH (9)
#define HW_BATT_THRSH_RSVD0_WIDTH (3)
#define HW_BATT_THRSH_THRESHOLD_EVENT1_WIDTH (9)
#define HW_BATT_THRSH_RSVD1_WIDTH (3)

#define HW_BATT_THRSH_THRESHOLD_EVENT0_BITPOS (0)
#define HW_BATT_THRSH_THRESHOLD_EVENT1_BITPOS (12)

#define HW_BATT_THRSH_THRESHOLD_EVENT0_SETMASK (((1<<HW_BATT_THRSH_THRESHOLD_EVENT0_WIDTH)-1)<<HW_BATT_THRSH_THRESHOLD_EVENT0_BITPOS)        
#define HW_BATT_THRSH_THRESHOLD_EVENT1_SETMASK (((1<<HW_BATT_THRSH_THRESHOLD_EVENT1_WIDTH)-1)<<HW_BATT_THRSH_THRESHOLD_EVENT1_BITPOS)        

#define HW_BATT_THRSH_THRESHOLD_EVENT0_CLRMASK (~(WORD)HW_BATT_THRSH_THRESHOLD_EVENT0_SETMASK)     
#define HW_BATT_THRSH_THRESHOLD_EVENT1_CLRMASK (~(WORD)HW_BATT_THRSH_THRESHOLD_EVENT1_SETMASK)     


typedef union               
{
    struct {
        unsigned int THRESHOLD_EVENT0  	: HW_BATT_THRSH_THRESHOLD_EVENT0_WIDTH;
        unsigned int RSVD0           	    : HW_BATT_THRSH_RSVD0_WIDTH;
        unsigned int THRESHOLD_EVENT1  	: HW_BATT_THRSH_THRESHOLD_EVENT1_WIDTH;
        unsigned int RSVD1             	: HW_BATT_THRSH_RSVD1_WIDTH;
    } B;
    unsigned int I;
} lradc_thrsh_type;
#define HW_BATT_THRSH      (*(volatile lradc_thrsh_type _X*) (HW_LRADC_BASEADDR+1))    /* Battery LRADC Threshold Register */


/////////////////////////////////////////////////////////////////////////////////
//  Battery LRADC Result Register (HW_BATT_RESULT) Bit Definitions
#define HW_BATT_RESULT_EQ_EVENT1_WIDTH (1)
#define HW_BATT_RESULT_EQ_EVENT0_WIDTH (1)
#define HW_BATT_RESULT_GT_EVENT1_WIDTH (1)
#define HW_BATT_RESULT_GT_EVENT0_WIDTH (1)
#define HW_BATT_RESULT_LT_EVENT1_WIDTH (1)
#define HW_BATT_RESULT_LT_EVENT0_WIDTH (1)
#define HW_BATT_RESULT_RSVD0_WIDTH (2)
#define HW_BATT_RESULT_DATA_OUT_WIDTH (9)
#define HW_BATT_RESULT_RSVD1_WIDTH (3)
#define HW_BATT_RESULT_IRQ_EVENT0_WIDTH (1)
#define HW_BATT_RESULT_IRQ_EVENT1_WIDTH (1)
#define HW_BATT_RESULT_RSVD2_WIDTH (2)

#define HW_BATT_RESULT_EQ_EVENT1_BITPOS (0)
#define HW_BATT_RESULT_EQ_EVENT0_BITPOS (1)
#define HW_BATT_RESULT_GT_EVENT1_BITPOS (2)
#define HW_BATT_RESULT_GT_EVENT0_BITPOS (3)
#define HW_BATT_RESULT_LT_EVENT1_BITPOS (4)
#define HW_BATT_RESULT_LT_EVENT0_BITPOS (5)
#define HW_BATT_RESULT_RSVD0_BITPOS (6)
#define HW_BATT_RESULT_DATA_OUT_BITPOS (8)
#define HW_BATT_RESULT_RSVD1_BITPOS (17)
#define HW_BATT_RESULT_IRQ_EVENT0_BITPOS (20)
#define HW_BATT_RESULT_IRQ_EVENT1_BITPOS (21)
#define HW_BATT_RESULT_RSVD2_BITPOS (22)



#define HW_BATT_RESULT_EQ_EVENT1_SETMASK (((1<<HW_BATT_RESULT_EQ_EVENT1_WIDTH)-1)<<HW_BATT_RESULT_EQ_EVENT1_BITPOS)
#define HW_BATT_RESULT_EQ_EVENT0_SETMASK (((1<<HW_BATT_RESULT_EQ_EVENT0_WIDTH)-1)<<HW_BATT_RESULT_EQ_EVENT0_BITPOS)
#define HW_BATT_RESULT_GT_EVENT1_SETMASK (((1<<HW_BATT_RESULT_GT_EVENT1_WIDTH)-1)<<HW_BATT_RESULT_GT_EVENT1_BITPOS)
#define HW_BATT_RESULT_GT_EVENT0_SETMASK (((1<<HW_BATT_RESULT_GT_EVENT0_WIDTH)-1)<<HW_BATT_RESULT_GT_EVENT0_BITPOS)
#define HW_BATT_RESULT_LT_EVENT1_SETMASK (((1<<HW_BATT_RESULT_LT_EVENT1_WIDTH)-1)<<HW_BATT_RESULT_LT_EVENT1_BITPOS)
#define HW_BATT_RESULT_LT_EVENT0_SETMASK (((1<<HW_BATT_RESULT_LT_EVENT0_WIDTH)-1)<<HW_BATT_RESULT_LT_EVENT0_BITPOS)
#define HW_BATT_RESULT_RSVD0_SETMASK (((1<<HW_BATT_RESULT_RSVD0_WIDTH)-1)<<HW_BATT_RESULT_RSVD0_BITPOS)
#define HW_BATT_RESULT_DATA_OUT_SETMASK (((1<<HW_BATT_RESULT_DATA_OUT_WIDTH)-1)<<HW_BATT_RESULT_DATA_OUT_BITPOS)
#define HW_BATT_RESULT_RSVD1_SETMASK (((1<<HW_BATT_RESULT_RSVD1_WIDTH)-1)<<HW_BATT_RESULT_RSVD1_BITPOS)
#define HW_BATT_RESULT_IRQ_EVENT0_SETMASK (((1<<HW_BATT_RESULT_IRQ_EVENT0_WIDTH)-1)<<HW_BATT_RESULT_IRQ_EVENT0_BITPOS)
#define HW_BATT_RESULT_IRQ_EVENT1_SETMASK (((1<<HW_BATT_RESULT_IRQ_EVENT1_WIDTH)-1)<<HW_BATT_RESULT_IRQ_EVENT1_BITPOS)
#define HW_BATT_RESULT_RSVD2_SETMASK (((1<<HW_BATT_RESULT_RSVD2_WIDTH)-1)<<HW_BATT_RESULT_RSVD2_BITPOS)


#define HW_BATT_RESULT_EQ_EVENT1_CLRMASK (~(WORD)HW_BATT_RESULT_EQ_EVENT1_SETMASK)
#define HW_BATT_RESULT_EQ_EVENT0_CLRMASK (~(WORD)HW_BATT_RESULT_EQ_EVENT0_SETMASK)
#define HW_BATT_RESULT_GT_EVENT1_CLRMASK (~(WORD)HW_BATT_RESULT_GT_EVENT1_SETMASK)
#define HW_BATT_RESULT_GT_EVENT0_CLRMASK (~(WORD)HW_BATT_RESULT_GT_EVENT0_SETMASK)
#define HW_BATT_RESULT_LT_EVENT1_CLRMASK (~(WORD)HW_BATT_RESULT_LT_EVENT1_SETMASK)
#define HW_BATT_RESULT_LT_EVENT0_CLRMASK (~(WORD)HW_BATT_RESULT_LT_EVENT0_SETMASK)
#define HW_BATT_RESULT_RSVD0_CLRMASK (~(WORD)HW_BATT_RESULT_RSVD0_SETMASK)
#define HW_BATT_RESULT_DATA_OUT_CLRMASK (~(WORD)HW_BATT_RESULT_DATA_OUT_SETMASK)
#define HW_BATT_RESULT_RSVD1_CLRMASK (~(WORD)HW_BATT_RESULT_RSVD1_SETMASK)
#define HW_BATT_RESULT_IRQ_EVENT0_CLRMASK (~(WORD)HW_BATT_RESULT_IRQ_EVENT0_SETMASK)
#define HW_BATT_RESULT_IRQ_EVENT1_CLRMASK (~(WORD)HW_BATT_RESULT_IRQ_EVENT1_SETMASK)
#define HW_BATT_RESULT_RSVD2_CLRMASK (~(WORD)HW_BATT_RESULT_RSVD2_SETMASK)

typedef union               
{
    struct {
        unsigned int EQ_EVENT1             	: HW_BATT_RESULT_EQ_EVENT1_WIDTH;
        unsigned int EQ_EVENT0             	: HW_BATT_RESULT_EQ_EVENT0_WIDTH;
        unsigned int GT_EVENT1             	: HW_BATT_RESULT_GT_EVENT1_WIDTH;
        unsigned int GT_EVENT0             	: HW_BATT_RESULT_GT_EVENT0_WIDTH;
        unsigned int LT_EVENT1             	: HW_BATT_RESULT_LT_EVENT1_WIDTH;
        unsigned int LT_EVENT0             	: HW_BATT_RESULT_LT_EVENT0_WIDTH;
        unsigned int RSVD0                     : HW_BATT_RESULT_RSVD0_WIDTH;
        unsigned int DATA_OUT                  : HW_BATT_RESULT_DATA_OUT_WIDTH;
        unsigned int RSVD1                     : HW_BATT_RESULT_RSVD1_WIDTH;
		 unsigned int IRQ_EVENT0				: HW_BATT_RESULT_IRQ_EVENT0_WIDTH;
		 unsigned int IRQ_EVENT1				: HW_BATT_RESULT_IRQ_EVENT1_WIDTH;			
		 unsigned int RSVD2					    : HW_BATT_RESULT_RSVD2_WIDTH;
    } B;
    unsigned int I;
} lradc_result_type;
#define HW_BATT_RESULT      (*(volatile lradc_result_type _X*) (HW_LRADC_BASEADDR+2))    /* Battery LRADC Result Register */



/////////////////////////////////////////////////////////////////////////////////
//  LRADC1 Control Register (HW_LRADC1_CTRL) Bit Definitions
#define HW_LRADC1_CTRL_INPUT_OFFSET_WIDTH (7)
#define HW_LRADC1_CTRL_RSVD0_WIDTH (1)
#define HW_LRADC1_CTRL_HALF_CMP_PWR_WIDTH (1)
#define HW_LRADC1_CTRL_INPUT_DIV2_WIDTH (1)
#define HW_LRADC1_CTRL_CLEAR_WIDTH (1)
#define HW_LRADC1_CTRL_PWD_WIDTH (1)
#define HW_LRADC1_CTRL_CLK_DIV_WIDTH (2)
#define HW_LRADC1_CTRL_RSVD1_WIDTH (2)
#define HW_LRADC1_CTRL_REF_VAL_WIDTH (2)
#define HW_LRADC1_CTRL_RSVD2_WIDTH (6)

#define HW_LRADC1_CTRL_INPUT_OFFSET_BITPOS (0)
#define HW_LRADC1_CTRL_HALF_CMP_PWR_BITPOS (8)
#define HW_LRADC1_CTRL_INPUT_DIV2_BITPOS (9)
#define HW_LRADC1_CTRL_CLEAR_BITPOS (10)
#define HW_LRADC1_CTRL_PWD_BITPOS (11)
#define HW_LRADC1_CTRL_CLK_DIV_BITPOS (12)
#define HW_LRADC1_CTRL_REF_VAL_BITPOS (16)

#define HW_LRADC1_CTRL_INPUT_OFFSET_SETMASK (((1<<HW_LRADC1_CTRL_INPUT_OFFSET_WIDTH)-1)<<HW_LRADC1_CTRL_INPUT_OFFSET_BITPOS)        
#define HW_LRADC1_CTRL_HALF_CMP_PWR_SETMASK (((1<<HW_LRADC1_CTRL_HALF_CMP_PWR_WIDTH)-1)<<HW_LRADC1_CTRL_HALF_CMP_PWR_BITPOS)        
#define HW_LRADC1_CTRL_INPUT_DIV2_SETMASK (((1<<HW_LRADC1_CTRL_INPUT_DIV2_WIDTH)-1)<<HW_LRADC1_CTRL_INPUT_DIV2_BITPOS) 
#define HW_LRADC1_CTRL_CLEAR_SETMASK (((1<<HW_LRADC1_CTRL_CLEAR_WIDTH)-1)<<HW_LRADC1_CTRL_CLEAR_BITPOS) 
#define HW_LRADC1_CTRL_PWD_SETMASK (((1<<HW_LRADC1_CTRL_PWD_WIDTH)-1)<<HW_LRADC1_CTRL_PWD_BITPOS) 
#define HW_LRADC1_CTRL_CLK_DIV_SETMASK (((1<<HW_LRADC1_CTRL_CLK_DIV_WIDTH)-1)<<HW_LRADC1_CTRL_CLK_DIV_BITPOS)        
#define HW_LRADC1_CTRL_REF_VAL_SETMASK (((1<<HW_LRADC1_CTRL_REF_VAL_WIDTH)-1)<<HW_LRADC1_CTRL_REF_VAL_BITPOS)        

#define HW_LRADC1_CTRL_INPUT_OFFSET_CLRMASK (~(WORD)HW_LRADC1_CTRL_INPUT_OFFSET_SETMASK)     
#define HW_LRADC1_CTRL_HALF_CMP_PWR_CLRMASK (~(WORD)HW_LRADC1_CTRL_HALF_CMP_PWR_SETMASK)     
#define HW_LRADC1_CTRL_INPUT_DIV2_CLRMASK (~(WORD)HW_LRADC1_CTRL_INPUT_DIV2_SETMASK) 
#define HW_LRADC1_CTRL_CLEAR_CLRMASK (~(WORD)HW_LRADC1_CTRL_CLEAR_SETMASK) 
#define HW_LRADC1_CTRL_PWD_CLRMASK (~(WORD)HW_LRADC1_CTRL_PWD_SETMASK) 
#define HW_LRADC1_CTRL_CLK_DIV_CLRMASK (~(WORD)HW_LRADC1_CTRL_CLK_DIV_SETMASK)     
#define HW_LRADC1_CTRL_REF_VAL_CLRMASK (~(WORD)HW_LRADC1_CTRL_REF_VAL_SETMASK)     

#define HW_LRADC1_CTRL      (*(volatile lradc_ctrl_type _X*) (HW_LRADC_BASEADDR+3))    /* LRADC1 Control Register */



/////////////////////////////////////////////////////////////////////////////////
//  LRADC1 Threshold Register (HW_LRADC1_THRSH) Bit Definitions
#define HW_LRADC1_THRSH_MIN_THRESHOLD_WIDTH (9)
#define HW_LRADC1_THRSH_RSVD0_WIDTH (3)
#define HW_LRADC1_THRSH_MAX_THRESHOLD_WIDTH (9)
#define HW_LRADC1_THRSH_RSVD1_WIDTH (3)

#define HW_LRADC1_THRSH_MIN_THRESHOLD_BITPOS (0)
#define HW_LRADC1_THRSH_MAX_THRESHOLD_BITPOS (12)

#define HW_LRADC1_THRSH_MIN_THRESHOLD_SETMASK (((1<<HW_LRADC1_THRSH_MIN_THRESHOLD_WIDTH)-1)<<HW_LRADC1_THRSH_MIN_THRESHOLD_BITPOS)        
#define HW_LRADC1_THRSH_MAX_THRESHOLD_SETMASK (((1<<HW_LRADC1_THRSH_MAX_THRESHOLD_WIDTH)-1)<<HW_LRADC1_THRSH_MAX_THRESHOLD_BITPOS)        

#define HW_LRADC1_THRSH_MIN_THRESHOLD_CLRMASK (~(WORD)HW_LRADC1_THRSH_MIN_THRESHOLD_SETMASK)     
#define HW_LRADC1_THRSH_MAX_THRESHOLD_CLRMASK (~(WORD)HW_LRADC1_THRSH_MAX_THRESHOLD_SETMASK)     

#define HW_LRADC1_THRSH      (*(volatile lradc_thrsh_type _X*) (HW_LRADC_BASEADDR+4))    /* LRADC1 Threshold Register */

/////////////////////////////////////////////////////////////////////////////////
//  LRADC1 Result Register (HW_LRADC1_RESULT) Bit Definitions
#define HW_LRADC1_RESULT_EQ_EVENT1_WIDTH (1)
#define HW_LRADC1_RESULT_EQ_EVENT0_WIDTH (1)
#define HW_LRADC1_RESULT_GT_EVENT1_WIDTH (1)
#define HW_LRADC1_RESULT_GT_EVENT0_WIDTH (1)
#define HW_LRADC1_RESULT_LT_EVENT1_WIDTH (1)
#define HW_LRADC1_RESULT_LT_EVENT0_WIDTH (1)
#define HW_LRADC1_RESULT_RSVD0_WIDTH (2)
#define HW_LRADC1_RESULT_DATA_OUT_WIDTH (9)
#define HW_LRADC1_RESULT_RSVD1_WIDTH (3)
#define HW_LRADC1_RESULT_IRQ_EVENT0_WIDTH (1)
#define HW_LRADC1_RESULT_IRQ_EVENT1_WIDTH (1)
#define HW_LRADC1_RESULT_RSVD2_WIDTH (2)

#define HW_LRADC1_RESULT_EQ_EVENT1_BITPOS (0)
#define HW_LRADC1_RESULT_EQ_EVENT0_BITPOS (1)
#define HW_LRADC1_RESULT_GT_EVENT1_BITPOS (2)
#define HW_LRADC1_RESULT_GT_EVENT0_BITPOS (3)
#define HW_LRADC1_RESULT_LT_EVENT1_BITPOS (4)
#define HW_LRADC1_RESULT_LT_EVENT0_BITPOS (5)
#define HW_LRADC1_RESULT_RSVD0_BITPOS (6)
#define HW_LRADC1_RESULT_DATA_OUT_BITPOS (8)
#define HW_LRADC1_RESULT_RSVD1_BITPOS (17)
#define HW_LRADC1_RESULT_IRQ_EVENT0_BITPOS (20)
#define HW_LRADC1_RESULT_IRQ_EVENT1_BITPOS (21)
#define HW_LRADC1_RESULT_RSVD2_BITPOS (22)

#define HW_LRADC1_RESULT_EQ_EVENT1_SETMASK (((1<<HW_LRADC1_RESULT_EQ_EVENT1_WIDTH)-1)<<HW_LRADC1_RESULT_EQ_EVENT1_BITPOS)
#define HW_LRADC1_RESULT_EQ_EVENT0_SETMASK (((1<<HW_LRADC1_RESULT_EQ_EVENT0_WIDTH)-1)<<HW_LRADC1_RESULT_EQ_EVENT0_BITPOS)
#define HW_LRADC1_RESULT_GT_EVENT1_SETMASK (((1<<HW_LRADC1_RESULT_GT_EVENT1_WIDTH)-1)<<HW_LRADC1_RESULT_GT_EVENT1_BITPOS)
#define HW_LRADC1_RESULT_GT_EVENT0_SETMASK (((1<<HW_LRADC1_RESULT_GT_EVENT0_WIDTH)-1)<<HW_LRADC1_RESULT_GT_EVENT0_BITPOS)
#define HW_LRADC1_RESULT_LT_EVENT1_SETMASK (((1<<HW_LRADC1_RESULT_LT_EVENT1_WIDTH)-1)<<HW_LRADC1_RESULT_LT_EVENT1_BITPOS)
#define HW_LRADC1_RESULT_LT_EVENT0_SETMASK (((1<<HW_LRADC1_RESULT_LT_EVENT0_WIDTH)-1)<<HW_LRADC1_RESULT_LT_EVENT0_BITPOS)
#define HW_LRADC1_RESULT_RSVD0_SETMASK (((1<<HW_LRADC1_RESULT_RSVD0_WIDTH)-1)<<HW_LRADC1_RESULT_RSVD0_BITPOS)
#define HW_LRADC1_RESULT_DATA_OUT_SETMASK (((1<<HW_LRADC1_RESULT_DATA_OUT_WIDTH)-1)<<HW_LRADC1_RESULT_DATA_OUT_BITPOS)
#define HW_LRADC1_RESULT_RSVD1_SETMASK (((1<<HW_LRADC1_RESULT_RSVD1_WIDTH)-1)<<HW_LRADC1_RESULT_RSVD1_BITPOS)
#define HW_LRADC1_RESULT_IRQ_EVENT0_SETMASK (((1<<HW_LRADC1_RESULT_IRQ_EVENT0_WIDTH)-1)<<HW_LRADC1_RESULT_IRQ_EVENT0_BITPOS)
#define HW_LRADC1_RESULT_IRQ_EVENT1_SETMASK (((1<<HW_LRADC1_RESULT_IRQ_EVENT1_WIDTH)-1)<<HW_LRADC1_RESULT_IRQ_EVENT1_BITPOS)
#define HW_LRADC1_RESULT_RSVD2_SETMASK (((1<<HW_LRADC1_RESULT_RSVD2_WIDTH)-1)<<HW_LRADC1_RESULT_RSVD2_BITPOS)


#define HW_LRADC1_RESULT_EQ_EVENT1_CLRMASK (~(WORD)HW_LRADC1_RESULT_EQ_EVENT1_SETMASK)
#define HW_LRADC1_RESULT_EQ_EVENT0_CLRMASK (~(WORD)HW_LRADC1_RESULT_EQ_EVENT0_SETMASK)
#define HW_LRADC1_RESULT_GT_EVENT1_CLRMASK (~(WORD)HW_LRADC1_RESULT_GT_EVENT1_SETMASK)
#define HW_LRADC1_RESULT_GT_EVENT0_CLRMASK (~(WORD)HW_LRADC1_RESULT_GT_EVENT0_SETMASK)
#define HW_LRADC1_RESULT_LT_EVENT1_CLRMASK (~(WORD)HW_LRADC1_RESULT_LT_EVENT1_SETMASK)
#define HW_LRADC1_RESULT_LT_EVENT0_CLRMASK (~(WORD)HW_LRADC1_RESULT_LT_EVENT0_SETMASK)
#define HW_LRADC1_RESULT_RSVD0_CLRMASK (~(WORD)HW_LRADC1_RESULT_RSVD0_SETMASK)
#define HW_LRADC1_RESULT_DATA_OUT_CLRMASK (~(WORD)HW_LRADC1_RESULT_DATA_OUT_SETMASK)
#define HW_LRADC1_RESULT_RSVD1_CLRMASK (~(WORD)HW_LRADC1_RESULT_RSVD1_SETMASK)
#define HW_LRADC1_RESULT_IRQ_EVENT0_CLRMASK (~(WORD)HW_LRADC1_RESULT_IRQ_EVENT0_SETMASK)
#define HW_LRADC1_RESULT_IRQ_EVENT1_CLRMASK (~(WORD)HW_LRADC1_RESULT_IRQ_EVENT1_SETMASK)
#define HW_LRADC1_RESULT_RSVD2_CLRMASK (~(WORD)HW_LRADC1_RESULT_RSVD2_SETMASK)

#define HW_LRADC1_RESULT      (*(volatile lradc_result_type _X*) (HW_LRADC_BASEADDR+5))    /* LRADC1 Result Register */

/////////////////////////////////////////////////////////////////////////////////
//  LRADC2_CTRL Control Register (HW_LRADC2_CTRL_CTRL) Bit Definitions
#define HW_LRADC2_CTRL_CTRL_INPUT_OFFSET_WIDTH (7)
#define HW_LRADC2_CTRL_CTRL_RSVD0_WIDTH (1)
#define HW_LRADC2_CTRL_CTRL_HALF_CMP_PWR_WIDTH (1)
#define HW_LRADC2_CTRL_CTRL_INPUT_DIV2_WIDTH (1)
#define HW_LRADC2_CTRL_CTRL_CLEAR_WIDTH (1)
#define HW_LRADC2_CTRL_CTRL_PWD_WIDTH (1)
#define HW_LRADC2_CTRL_CTRL_CLK_DIV_WIDTH (2)
#define HW_LRADC2_CTRL_CTRL_RSVD1_WIDTH (2)
#define HW_LRADC2_CTRL_CTRL_REF_VAL_WIDTH (2)
#define HW_LRADC2_CTRL_CTRL_RSVD2_WIDTH (6)

#define HW_LRADC2_CTRL_CTRL_INPUT_OFFSET_BITPOS (0)
#define HW_LRADC2_CTRL_CTRL_HALF_CMP_PWR_BITPOS (8)
#define HW_LRADC2_CTRL_CTRL_INPUT_DIV2_BITPOS (9)
#define HW_LRADC2_CTRL_CTRL_CLEAR_BITPOS (10)
#define HW_LRADC2_CTRL_CTRL_PWD_BITPOS (11)
#define HW_LRADC2_CTRL_CTRL_CLK_DIV_BITPOS (12)
#define HW_LRADC2_CTRL_CTRL_REF_VAL_BITPOS (16)

#define HW_LRADC2_CTRL_CTRL_INPUT_OFFSET_SETMASK (((1<<HW_LRADC2_CTRL_CTRL_INPUT_OFFSET_WIDTH)-1)<<HW_LRADC2_CTRL_CTRL_INPUT_OFFSET_BITPOS)        
#define HW_LRADC2_CTRL_CTRL_HALF_CMP_PWR_SETMASK (((1<<HW_LRADC2_CTRL_CTRL_HALF_CMP_PWR_WIDTH)-1)<<HW_LRADC2_CTRL_CTRL_HALF_CMP_PWR_BITPOS)        
#define HW_LRADC2_CTRL_CTRL_INPUT_DIV2_SETMASK (((1<<HW_LRADC2_CTRL_CTRL_INPUT_DIV2_WIDTH)-1)<<HW_LRADC2_CTRL_CTRL_INPUT_DIV2_BITPOS) 
#define HW_LRADC2_CTRL_CTRL_CLEAR_SETMASK (((1<<HW_LRADC2_CTRL_CTRL_CLEAR_WIDTH)-1)<<HW_LRADC2_CTRL_CTRL_CLEAR_BITPOS) 
#define HW_LRADC2_CTRL_CTRL_PWD_SETMASK (((1<<HW_LRADC2_CTRL_CTRL_PWD_WIDTH)-1)<<HW_LRADC2_CTRL_CTRL_PWD_BITPOS) 
#define HW_LRADC2_CTRL_CTRL_CLK_DIV_SETMASK (((1<<HW_LRADC2_CTRL_CTRL_CLK_DIV_WIDTH)-1)<<HW_LRADC2_CTRL_CTRL_CLK_DIV_BITPOS)        
#define HW_LRADC2_CTRL_CTRL_REF_VAL_SETMASK (((1<<HW_LRADC2_CTRL_CTRL_REF_VAL_WIDTH)-1)<<HW_LRADC2_CTRL_CTRL_REF_VAL_BITPOS)        

#define HW_LRADC2_CTRL_CTRL_INPUT_OFFSET_CLRMASK (~(WORD)HW_LRADC2_CTRL_CTRL_INPUT_OFFSET_SETMASK)     
#define HW_LRADC2_CTRL_CTRL_HALF_CMP_PWR_CLRMASK (~(WORD)HW_LRADC2_CTRL_CTRL_HALF_CMP_PWR_SETMASK)     
#define HW_LRADC2_CTRL_CTRL_INPUT_DIV2_CLRMASK (~(WORD)HW_LRADC2_CTRL_CTRL_INPUT_DIV2_SETMASK) 
#define HW_LRADC2_CTRL_CTRL_CLEAR_CLRMASK (~(WORD)HW_LRADC2_CTRL_CTRL_CLEAR_SETMASK) 
#define HW_LRADC2_CTRL_CTRL_PWD_CLRMASK (~(WORD)HW_LRADC2_CTRL_CTRL_PWD_SETMASK) 
#define HW_LRADC2_CTRL_CTRL_CLK_DIV_CLRMASK (~(WORD)HW_LRADC2_CTRL_CTRL_CLK_DIV_SETMASK)     
#define HW_LRADC2_CTRL_CTRL_REF_VAL_CLRMASK (~(WORD)HW_LRADC2_CTRL_CTRL_REF_VAL_SETMASK)     


#define HW_LRADC2_CTRL      (*(volatile lradc_ctrl_type _X*) (HW_LRADC_BASEADDR+6))    /* LRADC2_CTRL Control Register */



/////////////////////////////////////////////////////////////////////////////////
//  LRADC2 Threshold Register (HW_LRADC2_THRSH) Bit Definitions
#define HW_LRADC2_THRSH_MIN_THRESHOLD_WIDTH (9)
#define HW_LRADC2_THRSH_RSVD0_WIDTH (3)
#define HW_LRADC2_THRSH_MAX_THRESHOLD_WIDTH (9)
#define HW_LRADC2_THRSH_RSVD1_WIDTH (3)

#define HW_LRADC2_THRSH_MIN_THRESHOLD_BITPOS (0)
#define HW_LRADC2_THRSH_MAX_THRESHOLD_BITPOS (12)

#define HW_LRADC2_THRSH_MIN_THRESHOLD_SETMASK (((1<<HW_LRADC2_THRSH_MIN_THRESHOLD_WIDTH)-1)<<HW_LRADC2_THRSH_MIN_THRESHOLD_BITPOS)        
#define HW_LRADC2_THRSH_MAX_THRESHOLD_SETMASK (((1<<HW_LRADC2_THRSH_MAX_THRESHOLD_WIDTH)-1)<<HW_LRADC2_THRSH_MAX_THRESHOLD_BITPOS)        

#define HW_LRADC2_THRSH_MIN_THRESHOLD_CLRMASK (~(WORD)HW_LRADC2_THRSH_MIN_THRESHOLD_SETMASK)     
#define HW_LRADC2_THRSH_MAX_THRESHOLD_CLRMASK (~(WORD)HW_LRADC2_THRSH_MAX_THRESHOLD_SETMASK)     

#define HW_LRADC2_THRSH      (*(volatile lradc_thrsh_type _X*) (HW_LRADC_BASEADDR+7))    /* LRADC2 Threshold Register */



/////////////////////////////////////////////////////////////////////////////////
//  LRADC2 Result Register (HW_LRADC2_RESULT) Bit Definitions
#define HW_LRADC2_RESULT_EQ_EVENT1_WIDTH (1)
#define HW_LRADC2_RESULT_EQ_EVENT0_WIDTH (1)
#define HW_LRADC2_RESULT_GT_EVENT1_WIDTH (1)
#define HW_LRADC2_RESULT_GT_EVENT0_WIDTH (1)
#define HW_LRADC2_RESULT_LT_EVENT1_WIDTH (1)
#define HW_LRADC2_RESULT_LT_EVENT0_WIDTH (1)
#define HW_LRADC2_RESULT_RSVD0_WIDTH (2)
#define HW_LRADC2_RESULT_DATA_OUT_WIDTH (9)
#define HW_LRADC2_RESULT_RSVD1_WIDTH (3)
#define HW_LRADC2_RESULT_IRQ_EVENT0_WIDTH (1)
#define HW_LRADC2_RESULT_IRQ_EVENT1_WIDTH (1)
#define HW_LRADC2_RESULT_RSVD2_WIDTH (2)

#define HW_LRADC2_RESULT_EQ_EVENT1_BITPOS (0)
#define HW_LRADC2_RESULT_EQ_EVENT0_BITPOS (1)
#define HW_LRADC2_RESULT_GT_EVENT1_BITPOS (2)
#define HW_LRADC2_RESULT_GT_EVENT0_BITPOS (3)
#define HW_LRADC2_RESULT_LT_EVENT1_BITPOS (4)
#define HW_LRADC2_RESULT_LT_EVENT0_BITPOS (5)
#define HW_LRADC2_RESULT_RSVD0_BITPOS (6)
#define HW_LRADC2_RESULT_DATA_OUT_BITPOS (8)
#define HW_LRADC2_RESULT_RSVD1_BITPOS (17)
#define HW_LRADC2_RESULT_IRQ_EVENT0_BITPOS (20)
#define HW_LRADC2_RESULT_IRQ_EVENT1_BITPOS (21)
#define HW_LRADC2_RESULT_RSVD2_BITPOS (22)

#define HW_LRADC2_RESULT_EQ_EVENT1_SETMASK (((1<<HW_LRADC2_RESULT_EQ_EVENT1_WIDTH)-1)<<HW_LRADC2_RESULT_EQ_EVENT1_BITPOS)
#define HW_LRADC2_RESULT_EQ_EVENT0_SETMASK (((1<<HW_LRADC2_RESULT_EQ_EVENT0_WIDTH)-1)<<HW_LRADC2_RESULT_EQ_EVENT0_BITPOS)
#define HW_LRADC2_RESULT_GT_EVENT1_SETMASK (((1<<HW_LRADC2_RESULT_GT_EVENT1_WIDTH)-1)<<HW_LRADC2_RESULT_GT_EVENT1_BITPOS)
#define HW_LRADC2_RESULT_GT_EVENT0_SETMASK (((1<<HW_LRADC2_RESULT_GT_EVENT0_WIDTH)-1)<<HW_LRADC2_RESULT_GT_EVENT0_BITPOS)
#define HW_LRADC2_RESULT_LT_EVENT1_SETMASK (((1<<HW_LRADC2_RESULT_LT_EVENT1_WIDTH)-1)<<HW_LRADC2_RESULT_LT_EVENT1_BITPOS)
#define HW_LRADC2_RESULT_LT_EVENT0_SETMASK (((1<<HW_LRADC2_RESULT_LT_EVENT0_WIDTH)-1)<<HW_LRADC2_RESULT_LT_EVENT0_BITPOS)
#define HW_LRADC2_RESULT_RSVD0_SETMASK (((1<<HW_LRADC2_RESULT_RSVD0_WIDTH)-1)<<HW_LRADC2_RESULT_RSVD0_BITPOS)
#define HW_LRADC2_RESULT_DATA_OUT_SETMASK (((1<<HW_LRADC2_RESULT_DATA_OUT_WIDTH)-1)<<HW_LRADC2_RESULT_DATA_OUT_BITPOS)
#define HW_LRADC2_RESULT_RSVD1_SETMASK (((1<<HW_LRADC2_RESULT_RSVD1_WIDTH)-1)<<HW_LRADC2_RESULT_RSVD1_BITPOS)
#define HW_LRADC2_RESULT_IRQ_EVENT0_SETMASK (((1<<HW_LRADC2_RESULT_IRQ_EVENT0_WIDTH)-1)<<HW_LRADC2_RESULT_IRQ_EVENT0_BITPOS)
#define HW_LRADC2_RESULT_IRQ_EVENT1_SETMASK (((1<<HW_LRADC2_RESULT_IRQ_EVENT1_WIDTH)-1)<<HW_LRADC2_RESULT_IRQ_EVENT1_BITPOS)
#define HW_LRADC2_RESULT_RSVD2_SETMASK (((1<<HW_LRADC2_RESULT_RSVD2_WIDTH)-1)<<HW_LRADC2_RESULT_RSVD2_BITPOS)

#define HW_LRADC2_RESULT_EQ_EVENT1_CLRMASK (~(WORD)HW_LRADC2_RESULT_EQ_EVENT1_SETMASK)
#define HW_LRADC2_RESULT_EQ_EVENT0_CLRMASK (~(WORD)HW_LRADC2_RESULT_EQ_EVENT0_SETMASK)
#define HW_LRADC2_RESULT_GT_EVENT1_CLRMASK (~(WORD)HW_LRADC2_RESULT_GT_EVENT1_SETMASK)
#define HW_LRADC2_RESULT_GT_EVENT0_CLRMASK (~(WORD)HW_LRADC2_RESULT_GT_EVENT0_SETMASK)
#define HW_LRADC2_RESULT_LT_EVENT1_CLRMASK (~(WORD)HW_LRADC2_RESULT_LT_EVENT1_SETMASK)
#define HW_LRADC2_RESULT_LT_EVENT0_CLRMASK (~(WORD)HW_LRADC2_RESULT_LT_EVENT0_SETMASK)
#define HW_LRADC2_RESULT_RSVD0_CLRMASK (~(WORD)HW_LRADC2_RESULT_RSVD0_SETMASK)
#define HW_LRADC2_RESULT_DATA_OUT_CLRMASK (~(WORD)HW_LRADC2_RESULT_DATA_OUT_SETMASK)
#define HW_LRADC2_RESULT_RSVD1_CLRMASK (~(WORD)HW_LRADC2_RESULT_RSVD1_SETMASK)
#define HW_LRADC2_RESULT_IRQ_EVENT0_CLRMASK (~(WORD)HW_LRADC2_RESULT_IRQ_EVENT0_SETMASK)
#define HW_LRADC2_RESULT_IRQ_EVENT1_CLRMASK (~(WORD)HW_LRADC2_RESULT_IRQ_EVENT1_SETMASK)
#define HW_LRADC2_RESULT_RSVD2_CLRMASK (~(WORD)HW_LRADC2_RESULT_RSVD2_SETMASK)

#define HW_LRADC2_RESULT      (*(volatile lradc_result_type _X*) (HW_LRADC_BASEADDR+8))    /* LRADC2 Result Register */
#define HW_LRADC_REF_0_SETMASK			0x0<<HW_BATT_CTRL_REF_VAL_BITPOS
#define HW_LRADC_REF_1_SETMASK			0x1<<HW_BATT_CTRL_REF_VAL_BITPOS
#define HW_LRADC_REF_2_SETMASK			0x2<<HW_BATT_CTRL_REF_VAL_BITPOS
#define HW_LRADC_REF_3_SETMASK			0x3<<HW_BATT_CTRL_REF_VAL_BITPOS
#define HW_LRADC_REF_4_SETMASK			HW_LRADC_REF_0_SETMASK|HW_BATT_CTRL_INPUT_DIV2_SETMASK
#define HW_LRADC_REF_5_SETMASK			HW_LRADC_REF_1_SETMASK|HW_BATT_CTRL_INPUT_DIV2_SETMASK
#define HW_LRADC_REF_6_SETMASK			HW_LRADC_REF_2_SETMASK|HW_BATT_CTRL_INPUT_DIV2_SETMASK
#define HW_LRADC_REF_7_SETMASK			HW_LRADC_REF_3_SETMASK|HW_BATT_CTRL_INPUT_DIV2_SETMASK
#define HW_LRADC_RES_REF_0				80
#define HW_LRADC_RES_REF_1				77
#define HW_LRADC_RES_REF_2				100
#define HW_LRADC_RES_REF_3				129
#define HW_LRADC_RES_REF_4				160
#define HW_LRADC_RES_REF_5				154
#define HW_LRADC_RES_REF_6				200
#define HW_LRADC_RES_REF_7				258
#define LRADC_HALF_POWER_SETMASK		HW_BATT_CTRL_HALF_CMP_PWR_SETMASK          
// Translate the generic API enumerations into more meaningful labels for the implementation
#define REF_2700MV			HW_LRADC_REF_0_SETMASK
#define REF_2600MV 		HW_LRADC_REF_1_SETMASK
#define REF_2560MV 		HW_LRADC_REF_2_SETMASK
#define REF_VDDIO  		HW_LRADC_REF_3_SETMASK
#define REF_5400MV 		HW_LRADC_REF_4_SETMASK
#define REF_5200MV 		HW_LRADC_REF_5_SETMASK
#define REF_5120MV 		HW_LRADC_REF_6_SETMASK
#define REF_VDDIOx2 		HW_LRADC_REF_7_SETMASK
#define RES_REF_2700MV 	HW_LRADC_RES_REF_0
#define RES_REF_2600MV 	HW_LRADC_RES_REF_1
#define RES_REF_2560MV 	HW_LRADC_RES_REF_2
#define RES_REF_VDDIO  	HW_LRADC_RES_REF_3
#define RES_REF_5400MV 	HW_LRADC_RES_REF_4
#define RES_REF_5200MV 	HW_LRADC_RES_REF_5
#define RES_REF_5120MV 	HW_LRADC_RES_REF_6
#define RES_REF_VDDIOx2  	HW_LRADC_RES_REF_7

//Needed by button.asm
#define LOW_RES_ADC_BATT_READ_MASK 0x01FF00
#define LOW_RES_ADC_AUX_READ_MASK 0x01FF00
#define LOW_RES_ADC_AUX2_READ_MASK 0x01FF00

#define HW_LRADC_CTRL_AUXADC_SETMASK 3<<HW_BATT_CTRL_REF_VAL_BITPOS

#endif


