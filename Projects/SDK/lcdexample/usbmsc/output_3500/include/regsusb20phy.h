//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//;  Copyright(C) SigmaTel, Inc. 2002-2005
//;  File        : regsusbphy.inc
//;  Description : USB20 PHY Register definition
//;  Updated 2.23.2003 By M. Henson
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

// The following naming conventions are followed in this file.
// All registers are named using the format...
//     HW_<module>_<regname>
// where <module> is the module name which can be any of the following...
//     USB20
// (Note that when there is more than one copy of a particular module, the
// module name includes a number starting from 0 for the first instance of
// that module)
// <regname> is the specific register within that module
// We also define the following...
//     HW_<module>_<regname>_BITPOS
// which defines the starting bit (i.e. LSB) of a multi bit field
//     HW_<module>_<regname>_SETMASK
// which does something else, and
//     HW_<module>_<regname>_CLRMASK
// which does something else.
// Other rules
//     All caps
//     Numeric identifiers start at 0

#if !(defined(regsusbphyinc))
#define regsusbphyinc 1

#include "types.h"

//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
//   USB2.0 PHY STMP Registers 
//;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#define HW_USBPHY_BASEADDR (0xF210)


/////////////////////////////////////////////////////////////////////////////////
//  USB PHY Powerdown Register (HW_USBPHYPWD) Bit Definitions

#define HW_USBPHYPWD_TXDISCON1500_BITPOS (5)
#define HW_USBPHYPWD_PLLVCOPWD_BITPOS (6)
#define HW_USBPHYPWD_PLLVCPPWD_BITPOS (7)
#define HW_USBPHYPWD_TXPWDFS_BITPOS (10)
#define HW_USBPHYPWD_TXPWDIBIAS_BITPOS (11)
#define HW_USBPHYPWD_TXPWDV2I_BITPOS (12)
#define HW_USBPHYPWD_TXPWDVBG_BITPOS (13)
#define HW_USBPHYPWD_TXPWDCOMP_BITPOS (14)
#define HW_USBPHYPWD_RXPWDDISCONDET_BITPOS (16)
#define HW_USBPHYPWD_RXPWDENV_BITPOS (17)
#define HW_USBPHYPWD_RXPWD1PT1_BITPOS (18)
#define HW_USBPHYPWD_RXPWDDIFF_BITPOS (19)
#define HW_USBPHYPWD_RXPWDRX_BITPOS (20)
#define HW_USBPHYPWD_PWDIBIAS_BITPOS (22)
#define HW_USBPHYPWD_REGRESET_BITPOS (23)

#define HW_USBPHYPWD_TXDISCON1500_SETMASK (1<<HW_USBPHYPWD_TXDISCON1500_BITPOS)
#define HW_USBPHYPWD_PLLVCOPWD_SETMASK (1<<HW_USBPHYPWD_PLLVCOPWD_BITPOS)
#define HW_USBPHYPWD_PLLVCPPWD_SETMASK (1<<HW_USBPHYPWD_PLLVCPPWD_BITPOS)
#define HW_USBPHYPWD_TXPWDFS_SETMASK (1<<HW_USBPHYPWD_TXPWDFS_BITPOS)
#define HW_USBPHYPWD_TXPWDIBIAS_SETMASK (1<<HW_USBPHYPWD_TXPWDIBIAS_BITPOS)
#define HW_USBPHYPWD_TXPWDV2I_SETMASK (1<<HW_USBPHYPWD_TXPWDV2I_BITPOS)
#define HW_USBPHYPWD_TXPWDVBG_SETMASK (1<<HW_USBPHYPWD_TXPWDVBG_BITPOS)
#define HW_USBPHYPWD_TXPWDCOMP_SETMASK (1<<HW_USBPHYPWD_TXPWDCOMP_BITPOS)
#define HW_USBPHYPWD_RXPWDDISCONDET_SETMASK (1<<HW_USBPHYPWD_RXPWDDISCONDET_BITPOS)
#define HW_USBPHYPWD_RXPWDENV_SETMASK (1<<HW_USBPHYPWD_RXPWDENV_BITPOS)
#define HW_USBPHYPWD_RXPWD1PT1_SETMASK (1<<HW_USBPHYPWD_RXPWD1PT1_BITPOS)
#define HW_USBPHYPWD_RXPWDDIFF_SETMASK (1<<HW_USBPHYPWD_RXPWDDIFF_BITPOS)
#define HW_USBPHYPWD_RXPWDRX_SETMASK (1<<HW_USBPHYPWD_RXPWDRX_BITPOS)
#define HW_USBPHYPWD_PWDIBIAS_SETMASK (1<<HW_USBPHYPWD_PWDIBIAS_BITPOS)
#define HW_USBPHYPWD_REGRESET_SETMASK (1<<HW_USBPHYPWD_REGRESET_BITPOS)

#define HW_USBPHYPWD_TXDISCON1500_CLRMASK (~(WORD)HW_USBPHYPWD_TXDISCON1500_SETMASK)
#define HW_USBPHYPWD_PLLVCOPWD_CLRMASK (~(WORD)HW_USBPHYPWD_PLLVCOPWD_SETMASK)
#define HW_USBPHYPWD_PLLVCPPWD_CLRMASK (~(WORD)HW_USBPHYPWD_PLLVCPPWD_SETMASK)
#define HW_USBPHYPWD_TXPWDFS_CLRMASK (~(WORD)HW_USBPHYPWD_TXPWDFS_SETMASK)
#define HW_USBPHYPWD_TXPWDIBIAS_CLRMASK (~(WORD)HW_USBPHYPWD_TXPWDIBIAS_SETMASK)
#define HW_USBPHYPWD_TXPWDV2I_CLRMASK (~(WORD)HW_USBPHYPWD_TXPWDV2I_SETMASK)
#define HW_USBPHYPWD_TXPWDVBG_CLRMASK (~(WORD)HW_USBPHYPWD_TXPWDVBG_SETMASK)
#define HW_USBPHYPWD_TXPWDCOMP_CLRMASK (~(WORD)HW_USBPHYPWD_TXPWDCOMP_SETMASK)
#define HW_USBPHYPWD_RXPWDDISCONDET_CLRMASK (~(WORD)HW_USBPHYPWD_RXPWDDISCONDET_SETMASK)
#define HW_USBPHYPWD_RXPWDENV_CLRMASK (~(WORD)HW_USBPHYPWD_RXPWDENV_SETMASK)
#define HW_USBPHYPWD_RXPWD1PT1_CLRMASK (~(WORD)HW_USBPHYPWD_RXPWD1PT1_SETMASK)
#define HW_USBPHYPWD_RXPWDDIFF_CLRMASK (~(WORD)HW_USBPHYPWD_RXPWDDIFF_SETMASK)
#define HW_USBPHYPWD_RXPWDRX_CLRMASK (~(WORD)HW_USBPHYPWD_RXPWDRX_SETMASK)
#define HW_USBPHYPWD_PWDIBIAS_CLRMASK (~(WORD)HW_USBPHYPWD_PWDIBIAS_SETMASK)
#define HW_USBPHYPWD_REGRESET_CLRMASK (~(WORD)HW_USBPHYPWD_REGRESET_SETMASK)

typedef union               
{
    struct {
        int RSVD0          :5;
        int TXDISCON1500   :1;
        int PLLVCOPWD      :1;
        int PLLVCPPWD      :1;
        int RSVD1          :2;
        int TXPWDFS        :1;
        int TXPWDIBIAS     :1;
        int TXPWDV2I       :1;
        int TXPWDVBG       :1;
        int TXPWDCOMP      :1;
        int RSVD2          :1;
        int RXPWDDISCONDET :1;
        int RXPWDENV       :1;
        int RXPWD1PT1      :1;
        int RXPWDDIFF      :1;
        int RXPWDRX        :1;
        int RSVD3          :1;
        int PWDIBIAS       :1;
        int REGRESET       :1;
    } B;
    int I;
} usbphypwd_type;
#define HW_USBPHYPWD      (*(volatile usbphypwd_type _X*) (HW_USBPHY_BASEADDR))    /* USB PHY Powerdown Register */

/////////////////////////////////////////////////////////////////////////////////
//  USB PHY Transmit register (HW_USBPHYTX) Bit Definitions
#define HW_USBPHYTX_TXCAL1500_BITPOS (0)
#define HW_USBPHYTX_TXENCAL1500_BITPOS (5)
#define HW_USBPHYTX_TXHSXCVR_BITPOS (6)
#define HW_USBPHYTX_TXCALIBRATE_BITPOS (7)
#define HW_USBPHYTX_TXCAL45DN_BITPOS (8)
#define HW_USBPHYTX_TXENCAL45DN_BITPOS (13)
#define HW_USBPHYTX_TXHSTERM_BITPOS (14)
#define HW_USBPHYTX_TXSKEW_BITPOS (15)
#define HW_USBPHYTX_TXCAL45DP_BITPOS (16)
#define HW_USBPHYTX_TXENCAL45DP_BITPOS (21)
#define HW_USBPHYTX_TXFSHIZ_BITPOS (22)
#define HW_USBPHYTX_TXCOMPOUT_BITPOS (23)

#define HW_USBPHYTX_TXCAL1500_WIDTH (4)
#define HW_USBPHYTX_TXENCAL1500_WIDTH (1)
#define HW_USBPHYTX_TXHSXCVR_WIDTH (1)
#define HW_USBPHYTX_TXCALIBRATE_WIDTH (1)
#define HW_USBPHYTX_TXCAL45DN_WIDTH (4)
#define HW_USBPHYTX_TXENCAL45DN_WIDTH (1)
#define HW_USBPHYTX_TXHSTERM_WIDTH (1)
#define HW_USBPHYTX_TXSKEW_WIDTH (1)
#define HW_USBPHYTX_TXCAL45DP_WIDTH (4)
#define HW_USBPHYTX_TXENCAL45DP_WIDTH (1)
#define HW_USBPHYTX_TXFSHIZ_WIDTH (1)
#define HW_USBPHYTX_TXCOMPOUT_WIDTH (1)

#define HW_USBPHYTX_TXCAL1500_SETMASK (((1<<HW_USBPHYTX_TXCAL1500_WIDTH)-1)<<HW_USBPHYTX_TXCAL1500_BITPOS)
#define HW_USBPHYTX_TXENCAL1500_SETMASK (((1<<HW_USBPHYTX_TXENCAL1500_WIDTH)-1)<<HW_USBPHYTX_TXENCAL1500_BITPOS)
#define HW_USBPHYTX_TXHSXCVR_SETMASK (((1<<HW_USBPHYTX_TXHSXCVR_WIDTH)-1)<<HW_USBPHYTX_TXHSXCVR_BITPOS)
#define HW_USBPHYTX_TXCALIBRATE_SETMASK (((1<<HW_USBPHYTX_TXCALIBRATE_WIDTH)-1)<<HW_USBPHYTX_TXCALIBRATE_BITPOS)
#define HW_USBPHYTX_TXCAL45DN_SETMASK (((1<<HW_USBPHYTX_TXCAL45DN_WIDTH)-1)<<HW_USBPHYTX_TXCAL45DN_BITPOS)
#define HW_USBPHYTX_TXENCAL45DN_SETMASK (((1<<HW_USBPHYTX_TXENCAL45DN_WIDTH)-1)<<HW_USBPHYTX_TXENCAL45DN_BITPOS)
#define HW_USBPHYTX_TXHSTERM_SETMASK (((1<<HW_USBPHYTX_TXHSTERM_WIDTH)-1)<<HW_USBPHYTX_TXHSTERM_BITPOS)
#define HW_USBPHYTX_TXSKEW_SETMASK (((1<<HW_USBPHYTX_TXSKEW_WIDTH)-1)<<HW_USBPHYTX_TXSKEW_BITPOS)
#define HW_USBPHYTX_TXCAL45DP_SETMASK (((1<<HW_USBPHYTX_TXCAL45DP_WIDTH)-1)<<HW_USBPHYTX_TXCAL45DP_BITPOS)
#define HW_USBPHYTX_TXENCAL45DP_SETMASK (((1<<HW_USBPHYTX_TXENCAL45DP_WIDTH)-1)<<HW_USBPHYTX_TXENCAL45DP_BITPOS)
#define HW_USBPHYTX_TXFSHIZ_SETMASK (((1<<HW_USBPHYTX_TXFSHIZ_WIDTH)-1)<<HW_USBPHYTX_TXFSHIZ_BITPOS)
#define HW_USBPHYTX_TXCOMPOUT_SETMASK (((1<<HW_USBPHYTX_TXCOMPOUT_WIDTH)-1)<<HW_USBPHYTX_TXCOMPOUT_BITPOS)

#define HW_USBPHYTX_TXCAL1500_CLRMASK (~(WORD)HW_USBPHYTX_TXCAL1500_SETMASK)
#define HW_USBPHYTX_TXENCAL1500_CLRMASK (~(WORD)HW_USBPHYTX_TXENCAL1500_SETMASK)
#define HW_USBPHYTX_TXHSXCVR_CLRMASK (~(WORD)HW_USBPHYTX_TXHSXCVR_SETMASK)
#define HW_USBPHYTX_TXCALIBRATE_CLRMASK (~(WORD)HW_USBPHYTX_TXCALIBRATE_SETMASK)
#define HW_USBPHYTX_TXCAL45DN_CLRMASK (~(WORD)HW_USBPHYTX_TXCAL45DN_SETMASK)
#define HW_USBPHYTX_TXENCAL45DN_CLRMASK (~(WORD)HW_USBPHYTX_TXENCAL45DN_SETMASK)
#define HW_USBPHYTX_TXHSTERM_CLRMASK (~(WORD)HW_USBPHYTX_TXHSTERM_SETMASK)
#define HW_USBPHYTX_TXSKEW_CLRMASK (~(WORD)HW_USBPHYTX_TXSKEW_SETMASK)
#define HW_USBPHYTX_TXCAL45DP_CLRMASK (~(WORD)HW_USBPHYTX_TXCAL45DP_SETMASK)
#define HW_USBPHYTX_TXENCAL45DP_CLRMASK (~(WORD)HW_USBPHYTX_TXENCAL45DP_SETMASK)
#define HW_USBPHYTX_TXFSHIZ_CLRMASK (~(WORD)HW_USBPHYTX_TXFSHIZ_SETMASK)
#define HW_USBPHYTX_TXCOMPOUT_CLRMASK (~(WORD)HW_USBPHYTX_TXCOMPOUT_SETMASK)

typedef union               
{
    struct {
        int TXCAL1500          :4;
        int RSVD0              :1;
        int TXENCAL1500        :1;
        int TXHSXCVR           :1;
        int TXCALIBRATE        :1;
        int TXCAL45DN          :4;
        int RSVD1              :1;
        int TXENCAL45DN        :1;
        int TXHSTERM           :1;
        int TXSKEW             :1;
        int TXCAL45DP          :4;
        int RSVD2              :1;
        int TXENCAL45DP        :1;
        int TXFSHIZ            :1;
        int TXCOMPOUT          :1;
    } B;
    int I;
} usbphytx_type;
#define HW_USBPHYTX      (*(volatile usbphytx_type _X*) (HW_USBPHY_BASEADDR+1))    

/////////////////////////////////////////////////////////////////////////////////
//  USB PHY PLL register (HW_USBPHYPLL) Bit Definitions
#define HW_USBPHYPLL_PLLV2ISEL_BITPOS (0)
#define HW_USBPHYPLL_PLLCPDBLIP_BITPOS (5)
#define HW_USBPHYPLL_PLLVCOCLK2_BITPOS (6)
#define HW_USBPHYPLL_PLLVCOCLK24_BITPOS (7)
#define HW_USBPHYPLL_PLLCPNSEL_BITPOS (8)
#define HW_USBPHYPLL_PLLCLKDIVSEL_BITPOS (12)
#define HW_USBPHYPLL_PLLPFDRST_BITPOS (20)
#define HW_USBPHYPLL_PLLCPSHORTLFR_BITPOS (21)
#define HW_USBPHYPLL_PLLVCOKSTART_BITPOS (22)
#define HW_USBPHYPLL_PLLCLKDIVRSTZ_BITPOS (23)

#define HW_USBPHYPLL_PLLV2ISEL_WIDTH (4)
#define HW_USBPHYPLL_PLLCPDBLIP_WIDTH (1)
#define HW_USBPHYPLL_PLLVCOCLK2_WIDTH (1)
#define HW_USBPHYPLL_PLLVCOCLK24_WIDTH (1)
#define HW_USBPHYPLL_PLLCPNSEL_WIDTH (4)
#define HW_USBPHYPLL_PLLCLKDIVSEL_WIDTH (4)
#define HW_USBPHYPLL_PLLPFDRST_WIDTH (1)
#define HW_USBPHYPLL_PLLCPSHORTLFR_WIDTH (1)
#define HW_USBPHYPLL_PLLVCOKSTART_WIDTH (1)
#define HW_USBPHYPLL_PLLCLKDIVRSTZ_WIDTH (1)

#define HW_USBPHYPLL_PLLV2ISEL_SETMASK (((1<<HW_USBPHYPLL_PLLV2ISEL_WIDTH)-1)<<HW_USBPHYPLL_PLLV2ISEL_BITPOS)
#define HW_USBPHYPLL_PLLCPDBLIP_SETMASK (((1<<HW_USBPHYPLL_PLLCPDBLIP_WIDTH)-1)<<HW_USBPHYPLL_PLLCPDBLIP_BITPOS)
#define HW_USBPHYPLL_PLLVCOCLK2_SETMASK (((1<<HW_USBPHYPLL_PLLVCOCLK2_WIDTH)-1)<<HW_USBPHYPLL_PLLVCOCLK2_BITPOS)
#define HW_USBPHYPLL_PLLVCOCLK24_SETMASK (((1<<HW_USBPHYPLL_PLLVCOCLK24_WIDTH)-1)<<HW_USBPHYPLL_PLLVCOCLK24_BITPOS)
#define HW_USBPHYPLL_PLLCPNSEL_SETMASK (((1<<HW_USBPHYPLL_PLLCPNSEL_WIDTH)-1)<<HW_USBPHYPLL_PLLCPNSEL_BITPOS)
#define HW_USBPHYPLL_PLLCLKDIVSEL_SETMASK (((1<<HW_USBPHYPLL_PLLCLKDIVSEL_WIDTH)-1)<<HW_USBPHYPLL_PLLCLKDIVSEL_BITPOS)
#define HW_USBPHYPLL_PLLPFDRST_SETMASK (((1<<HW_USBPHYPLL_PLLPFDRST_WIDTH)-1)<<HW_USBPHYPLL_PLLPFDRST_BITPOS)
#define HW_USBPHYPLL_PLLCPSHORTLFR_SETMASK (((1<<HW_USBPHYPLL_PLLCPSHORTLFR_WIDTH)-1)<<HW_USBPHYPLL_PLLCPSHORTLFR_BITPOS)
#define HW_USBPHYPLL_PLLVCOKSTART_SETMASK (((1<<HW_USBPHYPLL_PLLVCOKSTART_WIDTH)-1)<<HW_USBPHYPLL_PLLVCOKSTART_BITPOS)
#define HW_USBPHYPLL_PLLCLKDIVRSTZ_SETMASK (((1<<HW_USBPHYPLL_PLLCLKDIVRSTZ_WIDTH)-1)<<HW_USBPHYPLL_PLLCLKDIVRSTZ_BITPOS)

#define HW_USBPHYPLL_PLLV2ISEL_CLRMASK (~(WORD)HW_USBPHYPLL_PLLV2ISEL_SETMASK)
#define HW_USBPHYPLL_PLLCPDBLIP_CLRMASK (~(WORD)HW_USBPHYPLL_PLLCPDBLIP_SETMASK)
#define HW_USBPHYPLL_PLLVCOCLK2_CLRMASK (~(WORD)HW_USBPHYPLL_PLLVCOCLK2_SETMASK)
#define HW_USBPHYPLL_PLLVCOCLK24_CLRMASK (~(WORD)HW_USBPHYPLL_PLLVCOCLK24_SETMASK)
#define HW_USBPHYPLL_PLLCPNSEL_CLRMASK (~(WORD)HW_USBPHYPLL_PLLCPNSEL_SETMASK)
#define HW_USBPHYPLL_PLLCLKDIVSEL_CLRMASK (~(WORD)HW_USBPHYPLL_PLLCLKDIVSEL_SETMASK)
#define HW_USBPHYPLL_PLLPFDRST_CLRMASK (~(WORD)HW_USBPHYPLL_PLLPFDRST_SETMASK)
#define HW_USBPHYPLL_PLLCPSHORTLFR_CLRMASK (~(WORD)HW_USBPHYPLL_PLLCPSHORTLFR_SETMASK)
#define HW_USBPHYPLL_PLLVCOKSTART_CLRMASK (~(WORD)HW_USBPHYPLL_PLLVCOKSTART_SETMASK)
#define HW_USBPHYPLL_PLLCLKDIVRSTZ_CLRMASK (~(WORD)HW_USBPHYPLL_PLLCLKDIVRSTZ_SETMASK)

typedef union               
{
    struct {
        int PLLV2ISEL        :4;
        int RSVD0            :1;
        int PLLCPDBLIP       :1;
        int PLLVCOCLK2       :1;
        int PLLVCOCLK24      :1;
        int PLLCPNSEL        :4;
        int PLLCLKDIVSEL     :4;
        int RSVD1            :4;
        int PLLPFDRST        :1;
        int PLLCPSHORTLFR    :1;
        int PLLVCOKSTART     :1;
        int PLLCLKDIVRSTZ    :1;
    } B;
    int I;
} usbphypll_type;
#define HW_USBPHYPLL      (*(volatile usbphypll_type _X*) (HW_USBPHY_BASEADDR+2))    

/////////////////////////////////////////////////////////////////////////////////
//  USB PHY PLL register (HW_USBPHYRX) Bit Definitions
#define HW_USBRX_ENVADJ_BITPOS (0)
#define HW_USBRX_DISCONADJ_BITPOS (4)
#define HW_USBRX_DEBUGMODE_BITPOS (8)
#define HW_USBRX_PLLLKTIMECTL_BITPOS (12)
#define HW_USBRX_PLLCKDIVCTL_BITPOS (16)
#define HW_USBRX_HOSTMODETEST_BITPOS (20)
#define HW_USBRX_FSCKSOURCESEL_BITPOS (21)
#define HW_USBRX_REGRXDBYPASS_BITPOS (22)
#define HW_USBRX_PLLLOCKED_BITPOS (23)

#define HW_USBRX_ENVADJ_WIDTH (4)
#define HW_USBRX_DISCONADJ_WIDTH (4)
#define HW_USBRX_DEBUGMODE_WIDTH (4)
#define HW_USBRX_PLLLKTIMECTL_WIDTH (4)
#define HW_USBRX_PLLCKDIVCTL_WIDTH (4)
#define HW_USBRX_HOSTMODETEST_WIDTH (1)
#define HW_USBRX_FSCKSOURCESEL_WIDTH (1)
#define HW_USBRX_REGRXDBYPASS_WIDTH (1)
#define HW_USBRX_PLLLOCKED_WIDTH (1)

#define HW_USBRX_ENVADJ_SETMASK (((1<<HW_USBRX_ENVADJ_WIDTH)-1)<<HW_USBRX_ENVADJ_BITPOS)
#define HW_USBRX_DISCONADJ_SETMASK (((1<<HW_USBRX_DISCONADJ_WIDTH)-1)<<HW_USBRX_DISCONADJ_BITPOS)
#define HW_USBRX_DEBUGMODE_SETMASK (((1<<HW_USBRX_DEBUGMODE_WIDTH)-1)<<HW_USBRX_DEBUGMODE_BITPOS)
#define HW_USBRX_PLLLKTIMECTL_SETMASK (((1<<HW_USBRX_PLLLKTIMECTL_WIDTH)-1)<<HW_USBRX_PLLLKTIMECTL_BITPOS)
#define HW_USBRX_PLLCKDIVCTL_SETMASK (((1<<HW_USBRX_PLLCKDIVCTL_WIDTH)-1)<<HW_USBRX_PLLCKDIVCTL_BITPOS)
// 480 MHz PLL is divided by named number here. Setmask divider field nibble of 7 gives actual divider of 8 and so on. (8 gives 9, 9 gives 10)
//              480Mhz/7 =68.57Mhz
#define HW_USBPHYRX_PLLDIV_BY_7 0x060000

//              480Mhz/8 ~60Mhz
#define HW_USBPHYRX_PLLDIV_BY_8 0x070000

//              480Mhz/9 =53.3Mhz
#define HW_USBPHYRX_PLLDIV_BY_9 0x080000

//              480Mhz/10 =48Mhz
#define HW_USBPHYRX_PLLDIV_BY_10 0x090000


#define HW_USBRX_HOSTMODETEST_SETMASK (((1<<HW_USBRX_HOSTMODETEST_WIDTH)-1)<<HW_USBRX_HOSTMODETEST_BITPOS)
#define HW_USBRX_FSCKSOURCESEL_SETMASK (((1<<HW_USBRX_FSCKSOURCESEL_WIDTH)-1)<<HW_USBRX_FSCKSOURCESEL_BITPOS)
#define HW_USBRX_REGRXDBYPASS_SETMASK (((1<<HW_USBRX_REGRXDBYPASS_WIDTH)-1)<<HW_USBRX_REGRXDBYPASS_BITPOS)
#define HW_USBRX_PLLLOCKED_SETMASK (((1<<HW_USBRX_PLLLOCKED_WIDTH)-1)<<HW_USBRX_PLLLOCKED_BITPOS)

#define HW_USBRX_ENVADJ_CLRMASK (~(WORD)HW_USBRX_ENVADJ_SETMASK)
#define HW_USBRX_DISCONADJ_CLRMASK (~(WORD)HW_USBRX_DISCONADJ_SETMASK)
#define HW_USBRX_DEBUGMODE_CLRMASK (~(WORD)HW_USBRX_DEBUGMODE_SETMASK)
#define HW_USBRX_PLLLKTIMECTL_CLRMASK (~(WORD)HW_USBRX_PLLLKTIMECTL_SETMASK)
#define HW_USBRX_PLLCKDIVCTL_CLRMASK (~(WORD)HW_USBRX_PLLCKDIVCTL_SETMASK)
#define HW_USBRX_HOSTMODETEST_CLRMASK (~(WORD)HW_USBRX_HOSTMODETEST_SETMASK)
#define HW_USBRX_FSCKSOURCESEL_CLRMASK (~(WORD)HW_USBRX_FSCKSOURCESEL_SETMASK)
#define HW_USBRX_REGRXDBYPASS_CLRMASK (~(WORD)HW_USBRX_REGRXDBYPASS_SETMASK)
#define HW_USBRX_PLLLOCKED_CLRMASK (~(WORD)HW_USBRX_PLLLOCKED_SETMASK)

typedef union               
{
    struct {
     int ENVADJ               :4;
     int DISCONADJ            :4;
     int DEBUGMODE            :4;
     int PLLLKTIMECTL         :4;
     int PLLCKDIVCTL          :4;
     int HOSTMODETEST         :1;
     int FSCKSOURCESEL        :1;
     int REGRXDBYPASS         :1;
     int PLLLOCKED            :1;
    } B;
    int I;
} usbphyrx_type;
#define HW_USBPHYRX      (*(volatile usbphyrx_type _X*) (HW_USBPHY_BASEADDR+3))    

#endif

