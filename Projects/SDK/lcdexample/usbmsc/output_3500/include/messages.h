/////////////////////////////////////////////////////////////////////////////////
// Copyright(C) SigmaTel, Inc. 2000
// Message defs
/////////////////////////////////////////////////////////////////////////////////

#if (!defined(MESSAGES_INC))
#define MESSAGES_INC 1

#define MSG_TYPE_DECODER 0x000000
#define MSG_TYPE_ENCODER 0x010000
#define MSG_TYPE_PARSER 0x020000
#define MSG_TYPE_LCD 0x030000
#define MSG_TYPE_MIXER 0x040000
#define MSG_TYPE_SYSTEM 0x050000
#define MSG_TYPE_MENU 0x060000
#define MSG_TYPE_LED 0x070000
#define MSG_TYPE_TUNER 0x080000
#define MSG_TYPE_CHARLCD 0x030000
#define MSG_TYPE_SOFT_TIMER 0x090000
// Equalizer and other effects   
#define MSG_TYPE_GEQ 0x0a0000             

// Message Structure Offsets
#define MSG_Length 0
#define MSG_ID 1
#define MSG_Argument1 2
#define MSG_Argument2 3
#define MSG_Argument3 4
#define MSG_Argument4 5
#define MSG_Argument5 6
#define MSG_Argument6 7



// LCD Message IDs
#define LCD_FIRST_MSG_ID MSG_TYPE_LCD+0
#define LCD_CLEAR_RANGE MSG_TYPE_LCD+0
#define LCD_PRINT_RANGE_RSRC MSG_TYPE_LCD+1
#define LCD_PRINT_RANGE_ADDR MSG_TYPE_LCD+2
#define LCD_PRINT_RANGE_INV_RSRC MSG_TYPE_LCD+3
#define LCD_PRINT_RANGE_INV_ADDR MSG_TYPE_LCD+4
#define LCD_PRINT_STRING_RSRC MSG_TYPE_LCD+5
#define LCD_PRINT_STRING_ADDR MSG_TYPE_LCD+6
#define LCD_PRINT_STRING_INV_RSRC MSG_TYPE_LCD+7
#define LCD_PRINT_STRING_INV_ADDR MSG_TYPE_LCD+8
#define LCD_SCROLL_DISPLAY MSG_TYPE_LCD+9
#define LCD_READ_LCD_ADDR MSG_TYPE_LCD+10
#define LCD_SET_CONTRAST MSG_TYPE_LCD+11
#define LCD_INC_CONTRAST MSG_TYPE_LCD+12
#define LCD_DEC_CONTRAST MSG_TYPE_LCD+13
#define LCD_BACKLIGHT_ON MSG_TYPE_LCD+14
#define LCD_BACKLIGHT_OFF MSG_TYPE_LCD+15
#define LCD_SET_FONT MSG_TYPE_LCD+16
#define LCD_PRINT_NUMBER MSG_TYPE_LCD+17
#define LCD_PRINT_TIME MSG_TYPE_LCD+18
#define LCD_PRINT_TIME_LONG MSG_TYPE_LCD+19
#define LCD_PRINT_STRING_UNICODE_INV_ADDR MSG_TYPE_LCD+20
#define LCD_PRINT_STRING_UNICODE_ADDR MSG_TYPE_LCD+21
#define LCD_PRINT_STRING_UNICODE_INV_RSRC MSG_TYPE_LCD+22
#define LCD_PRINT_STRING_UNICODE_RSRC MSG_TYPE_LCD+23
#define LCD_BEGIN_FRAME MSG_TYPE_LCD+24
#define LCD_END_FRAME MSG_TYPE_LCD+25
#define LCD_PRINT_NUMBER_INV MSG_TYPE_LCD+26
#define LCD_PRINT_TIME_INV MSG_TYPE_LCD+27
#define LCD_PRINT_TIME_LONG_INV MSG_TYPE_LCD+28
#define LCD_SET_FRAMEBUFFER MSG_TYPE_LCD+29
//send a NULL as Param1 to return to root frame buffer
#define LCD_PUSH_MASK MSG_TYPE_LCD+30
//Param1 = left
//Param2 = top
//Param3 = right
//Param4 = bottom
#define LCD_POP_MASK MSG_TYPE_LCD+31
#define LCD_PRINT_UNICODE_CHAR MSG_TYPE_LCD+32
#define LCD_PRINT_UNICODE_CHAR_INV MSG_TYPE_LCD+33
#define LCD_DISPLAY_HISTOGRAM MSG_TYPE_LCD+34
#define LCD_PRINT_TIME_L_1DIG_HR MSG_TYPE_LCD+35

#define LCD_CLEAR_RANGE_BUFFER MSG_TYPE_LCD+36
#define LCD_PRINT_RANGE_RSRC_BUFFER MSG_TYPE_LCD+37
#define LCD_PRINT_RANGE_INV_RSRC_BUFFER MSG_TYPE_LCD+38
#define LCD_PRINT_RANGE_ADDR_BUFFER MSG_TYPE_LCD+39
#define LCD_PRINT_RANGE_INV_ADDR_BUFFER MSG_TYPE_LCD+40
#define LCD_PRINT_STRING_RSRC_BUFFER MSG_TYPE_LCD+41
#define LCD_PRINT_STRING_INV_RSRC_BUFFER MSG_TYPE_LCD+42
#define LCD_PRINT_STRING_ADDR_BUFFER MSG_TYPE_LCD+43
#define LCD_PRINT_STRING_INV_ADDR_BUFFER MSG_TYPE_LCD+44
#define LCD_PRINT_NUMBER_BUFFER MSG_TYPE_LCD+45
#define LCD_PRINT_NUMBER_INV_BUFFER MSG_TYPE_LCD+46
#define LCD_PRINT_TIME_BUFFER MSG_TYPE_LCD+47
#define LCD_PRINT_TIME_INV_BUFFER MSG_TYPE_LCD+48
#define LCD_PRINT_TIME_LONG_BUFFER MSG_TYPE_LCD+49
#define LCD_PRINT_TIME_LONG_INV_BUFFER MSG_TYPE_LCD+50
#define LCD_PRINT_STRING_UNICODE_ADDR_BUFFER MSG_TYPE_LCD+51
#define LCD_PRINT_STRING_UNICODE_INV_ADDR_BUFFER MSG_TYPE_LCD+52
#define LCD_PRINT_STRING_UNICODE_RSRC_BUFFER MSG_TYPE_LCD+53
#define LCD_PRINT_STRING_UNICODE_INV_RSRC_BUFFER MSG_TYPE_LCD+54
#define LCD_PRINT_UNICODE_CHAR_BUFFER MSG_TYPE_LCD+55
#define LCD_PRINT_UNICODE_CHAR_INV_BUFFER MSG_TYPE_LCD+56
#define LCD_PRINT_TIME_L_1DIG_HR_BUFFER MSG_TYPE_LCD+57
#define LCD_SET_BUFFER_COLOR MSG_TYPE_LCD+58
#define LCD_FORCE_BUFFER_UPDATE MSG_TYPE_LCD+59
#define LCD_SET_BUFFER_WINDOW MSG_TYPE_LCD+60
#define LCD_SET_COLOR MSG_TYPE_LCD+61
#define LCD_SET_BUFFER_POSITION MSG_TYPE_LCD+62

#define LCD_TEMP_CONTRAST MSG_TYPE_LCD+63

#if defined(CLCD_16BIT)
#define LCD_16BIT_ON MSG_TYPE_LCD+64
#define LCD_16BIT_OFF MSG_TYPE_LCD+65

#define LCD_LAST_MSG_ID MSG_TYPE_LCD+65
#else 
#define LCD_LAST_MSG_ID MSG_TYPE_LCD+63
#endif

// If you change the LCD message ID's then you must
// also change the jump table in lcdapi.asm

// Character LCD Message IDs
#define CHARLCD_FIRST_MSG_ID MSG_TYPE_CHARLCD+0
#define CHARLCD_CLEAR_RANGE MSG_TYPE_CHARLCD+0
#define CHARLCD_PRINT_RSRC MSG_TYPE_CHARLCD+1
#define CHARLCD_PRINT_INV_RSRC MSG_TYPE_CHARLCD+2
#define CHARLCD_PRINT_ASCII_CHAR MSG_TYPE_CHARLCD+3
#define CHARLCD_PRINT_ASCII_INV_CHAR MSG_TYPE_CHARLCD+4
#define CHARLCD_PRINT_STRING_RSRC MSG_TYPE_CHARLCD+5
#define CHARLCD_PRINT_STRING_INV_RSRC MSG_TYPE_CHARLCD+6
#define CHARLCD_PRINT_STRING_ADDR MSG_TYPE_CHARLCD+7
#define CHARLCD_PRINT_STRING_INV_ADDR MSG_TYPE_CHARLCD+8
#define CHARLCD_SCROLL_DISPLAY MSG_TYPE_CHARLCD+9
#define CHARLCD_READ_LCD_ADDR MSG_TYPE_CHARLCD+10
#define CHARLCD_SET_CURSOR MSG_TYPE_CHARLCD+11
#define CHARLCD_SET_FONT MSG_TYPE_CHARLCD+12
#define CHARLCD_PRINT_NUMBER MSG_TYPE_CHARLCD+13
#define CHARLCD_PRINT_TIME MSG_TYPE_CHARLCD+14
#define CHARLCD_SET_BATTERY MSG_TYPE_CHARLCD+15
#define CHARLCD_SET_EQ MSG_TYPE_CHARLCD+16
#define CHARLCD_SET_ICON MSG_TYPE_CHARLCD+17
#define CHARLCD_SET_PLAYMODE MSG_TYPE_CHARLCD+18
#define CHARLCD_SET_PLAYSTATE MSG_TYPE_CHARLCD+19
#define CHARLCD_SET_VOLUME MSG_TYPE_CHARLCD+20
#define CHARLCD_CLEAR_DISPLAY MSG_TYPE_CHARLCD+21
#define CHARLCD_LAST_MSG_ID MSG_TYPE_CHARLCD+21
// If you change the cHARACTER LCD message ID's then you must
// also change the jump table in lcdapi.asm

// Decoder Message IDs
#define DECODER_FIRST_MSG_ID MSG_TYPE_DECODER+0
#define DECODER_RESET MSG_TYPE_DECODER+0
#define DECODER_SET_DIR MSG_TYPE_DECODER+1
#define DECODER_PLAY MSG_TYPE_DECODER+2
#define DECODER_STOP MSG_TYPE_DECODER+3
#define DECODER_FFWD MSG_TYPE_DECODER+4
#define DECODER_RWND MSG_TYPE_DECODER+5
#define DECODER_NEXT_SONG MSG_TYPE_DECODER+6
#define DECODER_PREV_SONG MSG_TYPE_DECODER+7
#define DECODER_TIME_MODE MSG_TYPE_DECODER+8
#define DECODER_AB_MODE MSG_TYPE_DECODER+9
#define DECODER_SET_EQ MSG_TYPE_DECODER+10
#define DECODER_GET_SONG_INFO MSG_TYPE_DECODER+11
#define DECODER_LAST_MSG_ID MSG_TYPE_DECODER+11
// If you change the Decoder message ID's, then you must
// also change the jump table in decoder_overlay.asm
// and in dec_adpcm_overlay.asm.

// Encoder Message IDs
#define ENCODER_FIRST_MSG_ID MSG_TYPE_ENCODER+0
#define ENCODER_RECORD MSG_TYPE_ENCODER+0
#define ENCODER_STOP MSG_TYPE_ENCODER+1
#define ENCODER_TIME_MODE MSG_TYPE_ENCODER+2
#define ENCODER_LAST_MSG_ID MSG_TYPE_ENCODER+3
// If you change the Encoder message ID's, then you must
// also change the jump table in all encoder overlay modules.

// Parser Message IDs
#define PARSER_FIRST_MSG_ID MSG_TYPE_PARSER+0
#define PARSER_NEXT_SONG MSG_TYPE_PARSER+0
#define PARSER_PREV_SONG MSG_TYPE_PARSER+1
#define PARSER_REPEAT MSG_TYPE_PARSER+2
#define PARSER_RANDOM MSG_TYPE_PARSER+3
#define PARSER_STOP MSG_TYPE_PARSER+4
#define PARSER_DEVICE_ENUMERATE MSG_TYPE_PARSER+5
#define PARSER_SET_CURRENT_SONG MSG_TYPE_PARSER+6
#define PARSER_LAST_MSG_ID MSG_TYPE_PARSER+6
// If you change the Parser message ID's, then you must
// also change the jump table in parser.asm

// Button Message IDs
//BUTTON_FIRST_MSG_ID      equ     MSG_TYPE_BUTTON+0
//BUTTON_BUTTONS_ON        equ     MSG_TYPE_BUTTON+0
//BUTTON_BUTTONS_OFF       equ     MSG_TYPE_BUTTON+1
//BUTTON_HOLD              equ     MSG_TYPE_BUTTON+2
//BUTTON_HOLD_RELEASE      equ     MSG_TYPE_BUTTON+3
//BUTTON_LAST_MSG_ID       equ     MSG_TYPE_BUTTON+3

// Mixer Message IDs
#define MIXER_FIRST_MSG_ID MSG_TYPE_MIXER+0
#define MIXER_MASTER_INCR MSG_TYPE_MIXER+0
#define MIXER_MASTER_DECR MSG_TYPE_MIXER+1
#define MIXER_MASTER_SETLVL MSG_TYPE_MIXER+2
#define MIXER_MASTER_MUTE MSG_TYPE_MIXER+3
#define MIXER_MASTER_UNMUTE MSG_TYPE_MIXER+4
#define MIXER_MASTER_FADE_OUT MSG_TYPE_MIXER+5
#define MIXER_MASTER_FADE_IN MSG_TYPE_MIXER+6
#define MIXER_MASTER_BAL_RIGHT MSG_TYPE_MIXER+7
#define MIXER_MASTER_BAL_LEFT MSG_TYPE_MIXER+8
#define MIXER_MIC_INCR MSG_TYPE_MIXER+9
#define MIXER_MIC_DECR MSG_TYPE_MIXER+10
#define MIXER_MIC_SETLVL MSG_TYPE_MIXER+11
#define MIXER_MIC_MUTE MSG_TYPE_MIXER+12
#define MIXER_MIC_UNMUTE MSG_TYPE_MIXER+13
#define MIXER_MIC_BOOST MSG_TYPE_MIXER+14
#define MIXER_MIC_UNBOOST MSG_TYPE_MIXER+15
#define MIXER_LINE_INCR MSG_TYPE_MIXER+16
#define MIXER_LINE_DECR MSG_TYPE_MIXER+17
#define MIXER_LINE_SETLVL MSG_TYPE_MIXER+18
#define MIXER_LINE_MUTE MSG_TYPE_MIXER+19
#define MIXER_LINE_UNMUTE MSG_TYPE_MIXER+20
#define MIXER_FM_INCR MSG_TYPE_MIXER+21
#define MIXER_FM_DECR MSG_TYPE_MIXER+22
#define MIXER_FM_SETLVL MSG_TYPE_MIXER+23
#define MIXER_FM_MUTE MSG_TYPE_MIXER+24
#define MIXER_FM_UNMUTE MSG_TYPE_MIXER+25
#define MIXER_DAC_INCR MSG_TYPE_MIXER+26
#define MIXER_DAC_DECR MSG_TYPE_MIXER+27
#define MIXER_DAC_SETLVL MSG_TYPE_MIXER+28
#define MIXER_DAC_MUTE MSG_TYPE_MIXER+29
#define MIXER_DAC_UNMUTE MSG_TYPE_MIXER+30
#define MIXER_ADC_SELECT MSG_TYPE_MIXER+31
#define MIXER_ADC_INCR MSG_TYPE_MIXER+32
#define MIXER_ADC_DECR MSG_TYPE_MIXER+33
#define MIXER_ADC_SETLVL MSG_TYPE_MIXER+34
#define MIXER_ADC_MUTE MSG_TYPE_MIXER+35
#define MIXER_ADC_UNMUTE MSG_TYPE_MIXER+36
#define MIXER_REC_SELECT MSG_TYPE_MIXER+37
#define MIXER_POWER_DOWN MSG_TYPE_MIXER+38
#define MIXER_LAST_MSG_ID MSG_TYPE_MIXER+38
// If you change the mixer message ID's then you must
// also change the jump table in mixer.asm
#define MIXER_ON 0
#define MIXER_OFF 1


// System Message IDs
#define SYSTEM_FIRST_MSG_ID MSG_TYPE_SYSTEM+0
#define SYSTEM_SHUTDOWN MSG_TYPE_SYSTEM+0
#define SYSTEM_SHUTDOWN_FALSE MSG_TYPE_SYSTEM+1
#define SYSTEM_SHUTDOWN_FINAL MSG_TYPE_SYSTEM+2
#define SYSTEM_LAST_MSG_ID MSG_TYPE_SYSTEM+2
// If you change the system message ID's then you must
// also change the jump table in systemapi.asm

// Menu IDs
#define MENU_FIRST_MSG_ID MSG_TYPE_MENU+0
#define MENU_BUTTON_EVENT MSG_TYPE_MENU+0
#define MENU_DECODER_STATE_CHNG MSG_TYPE_MENU+1
#define MENU_RECORDER_STATE_CHNG MSG_TYPE_MENU+2
//sub parameters for this message:
#define RECORDER_START 0
#define RECORDER_STOP_NORMAL 0x8000
#define RECORDER_STOP_FILE_ERROR 0x8001
#define RECORDER_STOP_OUT_OF_SPACE 0x8002
#define RECORDER_STOP_LOW_BATTERY 0x8003    
#define MENU_SONG_TIME_CHNG MSG_TYPE_MENU+3
#define MENU_AB_MODE_OFF MSG_TYPE_MENU+4
#define MENU_BATTERY_CHNG MSG_TYPE_MENU+5
#define MENU_SCROLL_TITLE MSG_TYPE_MENU+6
#define MENU_AUTO_SHUTDOWN MSG_TYPE_MENU+7
#define MENU_MSG_MEDIA_CHANGED MSG_TYPE_MENU+8
#if (!defined(REMOVE_FM))    
#define MENU_TUNER_TUNED MSG_TYPE_MENU+9
#define MENU_MSG_ENC_LOW_SPACE MSG_TYPE_MENU+10
#define MENU_MSG_EQ_SETTINGS MSG_TYPE_MENU+11
#define MENU_LAST_MSG_ID MSG_TYPE_MENU+11
#else 
#define MENU_MSG_ENC_LOW_SPACE MSG_TYPE_MENU+9
#define MENU_MSG_EQ_SETTINGS MSG_TYPE_MENU+10
#define MENU_LAST_MSG_ID MSG_TYPE_MENU+10
#endif

// Note that other versions of this file have different msg equates.
// If you change the system message ID's then you must
// also change the jump table in all menu *.asm

// LED Message IDs
#define LED_FIRST_MSG_ID MSG_TYPE_LED+0
#define LED_CONTROL MSG_TYPE_LED+0
#define LED_RESET MSG_TYPE_LED+1
#define LED_LAST_MSG_ID MSG_TYPE_LED+1
// If you change the LeD message ID's then you must
// also change the jump table in ledapi.asm

#if (!defined(REMOVE_FM))    
// FM Tuner Message IDs
#define TUNER_FIRST_MSG_ID MSG_TYPE_TUNER+0
#define TUNER_TUNE_FREQUENCY MSG_TYPE_TUNER+0
#define TUNER_TUNE_MANUAL_UP MSG_TYPE_TUNER+1
#define TUNER_TUNE_MANUAL_DOWN MSG_TYPE_TUNER+2
#define TUNER_TUNE_SEARCH_UP MSG_TYPE_TUNER+3
#define TUNER_TUNE_SEARCH_DOWN MSG_TYPE_TUNER+4
#define TUNER_FORCED_MONO MSG_TYPE_TUNER+5
#define TUNER_RESET MSG_TYPE_TUNER+6
#define TUNER_POWER_ON MSG_TYPE_TUNER+7
#define TUNER_POWER_OFF MSG_TYPE_TUNER+8
#define TUNER_SET_SENSITIVITY MSG_TYPE_TUNER+9
//one parameter--the sensitivity in uV
#define TUNER_GET_STATES MSG_TYPE_TUNER+10
#define TUNER_MUTE_OUTPUTS MSG_TYPE_TUNER+11
#define TUNER_PRESET_STATION MSG_TYPE_TUNER+12
#define TUNER_TUNE_TO_PRESET MSG_TYPE_TUNER+13
#define TUNER_SET_PRESET MSG_TYPE_TUNER+14
#define TUNER_ERASE_PRESET MSG_TYPE_TUNER+15
#define TUNER_LAST_MSG_ID MSG_TYPE_TUNER+15
#endif

#define SOFT_TIMER_FIRST_MSG_ID MSG_TYPE_SOFT_TIMER+0
#define SOFT_TIMER_SET_TIMER MSG_TYPE_SOFT_TIMER+1
#define SOFT_TIMER_KILL_TIMER MSG_TYPE_SOFT_TIMER+2
#define SOFT_TIMER_LAST_MSG_ID MSG_TYPE_SOFT_TIMER+2


#define GEQ_FIRST_MSG_ID MSG_TYPE_GEQ+0
#define GEQ_SET_EQ MSG_TYPE_GEQ+0
#define GEQ_SET_EQ_LEGACY MSG_TYPE_GEQ+1
#define GEQ_SET_ALL_BAND_GAINS MSG_TYPE_GEQ+2
#define GEQ_SET_GAIN MSG_TYPE_GEQ+3
#define GEQ_SET_COEFFICIENTS MSG_TYPE_GEQ+4
#define GEQ_SET_PARAM MSG_TYPE_GEQ+5
#define GEQ_GET_SETTINGS MSG_TYPE_GEQ+6
#define GEQ_LAST_MSG_ID MSG_TYPE_GEQ+6

#endif // IF (!@def(MSGEQU_INC))


