/**************************************************************************
**
**  FILE        :  @(#)stmpdflt.cpu 
**
**  DESCRIPTION :  CPU description for Sigmatel STMP3400.
**
**************************************************************************/

cpu {
////////////////////////////////////////////////////////////////////////
//
//   A D R E S S I N G   M O D E S 
//
//
    //
    //  adressing modes in P-space 
    //
    amode P_far {
        attribute Y1;
        mau 24;
        map src=0 size=TOTAL_ADDR_SPACE dst=0 space=P;
    }

    amode P_sjmp {
        attribute Y5;
        mau 24;
        map src=0 size=0x1000 dst=0 amode=P_far;
    }

    //
    //  addressing modes in X-space
    //
    amode X_far {
        attribute Y2;
        mau 24;
        map src=0 size=TOTAL_ADDR_SPACE dst=0 space=X;
    }

    amode X_near {
        attribute Y6;
        mau 24;
        map src=0 size=0x200 dst=0 amode=X_far;
    }

    amode X_io {
        attribute Y9;
        mau 24;
        map src=0 size=0x4000 dst=0xc000 amode=X_far;
    }

    //
    //  adressing modes in Y-space 
    //
    amode Y_far {
        attribute Y3;
        mau 24;
        map src=0 size=TOTAL_ADDR_SPACE dst=0 space=Y;
    }


    amode Y_near {
        attribute Y7;
        mau 24;
        map src=0 size=0x40 dst=0 amode=Y_far;
    }
    
    amode Y_io {
        attribute Y10;
        mau 24;
        map src=0 size=0x40 dst=0xffc0 amode=Y_far;
    }

    //
    //  addressing modes in L-space
    //
    amode L_far {
        attribute Y4;
        mau 48;
        map src=0 size=64k dst=0 space=L;
    }

    amode L_near {
        attribute Y8;
        mau 48;
        map src=0 size=0x40 dst=0 amode=L_far;
    }

////////////////////////////////////////////////////////////////////////
//
//  S P A C E S
//
//
    space P {
        mau 24;
        map src=INT_P_VECTOR_ORG size=INT_P_VECTOR_SZ dst=INT_P_VECTOR_ORG bus=PAB label=P_VectorBlock;
        map src=INT_P_FILESYSTEM_ORG size=INT_P_FILESYSTEM_SZ dst=INT_P_FILESYSTEM_ORG bus=PAB label=P_FileSystemBlock;
        map src=INT_P_MEDIADD_ORG size=INT_P_MEDIADD_SZ dst=INT_P_MEDIADD_ORG bus=PAB label=P_MediaDDBlock;
        map src=INT_P_FUNCLET_ORG size=INT_P_FUNCLET_SZ dst=INT_P_FUNCLET_ORG bus=PAB label=P_FuncletBlock;
        map src=INT_P_MTP_ORG size=INT_P_MTP_SZ dst=INT_P_MTP_ORG bus=PAB label=P_MTPBlock;
        map src=INT_P_SYS_ORG size=INT_P_SYS_SZ dst=INT_P_SYS_ORG bus=PAB label=P_SysBlock;
        map src=INT_P_USBMSC_ORG size=INT_P_USBMSC_SZ dst=INT_P_USBMSC_ORG bus=PAB label=P_USBMSC_Block;
    }
    space L {
        mau 48;
        map src=0 size=64k dst=0 bus=XAB|YAB label=L_block;
    }
    
    space X {
        mau 24;
        map src=INT_X_MTP_BOOTLOAD_ORG size=INT_X_MTP_BOOTLOAD_SZ dst=INT_X_MTP_BOOTLOAD_ORG bus=XAB label=XMTPBootLoadBlock;
        map src=INT_X_MTP_ORG size=INT_X_MTP_SZ dst=INT_X_MTP_ORG bus=XAB label=XMTPBlock;
        map src=INT_X_SYS_ORG size=INT_X_SYS_SZ dst=INT_X_SYS_ORG bus=XAB label=XSYSBlock;
        map src=EXT_X_ORG size=EXT_X_RAM dst=EXT_X_ORG bus=XAB label=XExtBlock;
    }
    
    space Y {
        mau 24;
        map src=INT_Y_ORG size=INT_Y_RAM dst=INT_Y_ORG bus=YAB label=Y_block;
        map src=EXT_Y_ORG size=EXT_Y_RAM dst=EXT_Y_ORG bus=YAB label=YExtBlock;
    }
    



////////////////////////////////////////////////////////////////
//
//  B U S
//
//
    bus PAB {
        mau 24;
        mem addr=0                            chips=P_iram;
        map src=INT_P_RAM size=EXT_P_RAM dst=INT_P_RAM bus=P_external;
    }

    bus XAB {
        mau 24;
        mem addr=0                            chips=X_iram;
        map src=INT_X_RAM size=EXT_X_RAM dst=INT_X_RAM bus=X_external;
    }
 
    bus YAB {
        mau 24;
        mem addr=0                            chips=Y_iram;
        map src=INT_Y_RAM size=EXT_Y_RAM dst=INT_Y_RAM bus=Y_external;
    }

////////////////////////////////////////////////////////////////
//
//  C H I P
//
//

    chips   P_iram attr=w mau=24 size=INT_P_RAM;    // internal program ram
    chips   X_iram attr=w mau=24 size=INT_X_RAM;    // internal X data ram 
    chips   Y_iram attr=w mau=24 size=INT_Y_RAM;    // internal Y data ram
}
